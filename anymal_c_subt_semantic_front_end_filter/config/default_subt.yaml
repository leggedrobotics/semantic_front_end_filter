#####################
## Node Parameters ##
#####################
alphasense_driver_ros:
  translate_device_time: false # Make sure you check https://github.com/sevensense-robotics/alphasense_core_manual/blob/master/pages/time_synchronization.md#running-a-ptp-master-on-linux
apriltags2_ros_continuous_node:
  # AprilTags 2 code parameters
  # Find descriptions in apriltags2/include/apriltag.h:struct apriltag_detector
  #                      apriltags2/include/apriltag.h:struct apriltag_family
  # Tag settings
  tag_family:        'tag16h5' # options: tag36h11, tag36h10, tag25h9, tag25h7, tag16h5
  tag_border:        1          # default: 1
  tag_threads:       2          # default: 2
  tag_decimate:      1.0        # default: 1.0 - Disbaled if < 1
  tag_blur:          0.0        # default: 0.0
  tag_refine_edges:  1          # default: 1
  tag_refine_decode: 0          # default: 0
  tag_refine_pose:   0          # default: 0
  tag_debug:         0          # default: 0
  # Other parameters
  publish_tf:        true       # default: false
  absolute_pose_topic: /anymal/absolute_reference
  cameraDistortionModel: equidistant
  camera_frame: cam0_sensor_frame
  camera_name: cam0_sensor_frame
  publish_tag_detections_image: true
  remove_duplicates: true
  tag_detection_frequency_hz: 1
  target_frame_live: darpa_live
  target_frame_post: darpa
  target_is_child: true
  undistortInputImage: true
  world_frame: map
  # Gate definitions
  standalone_tags: []
  tag_bundles:
    [
      {
         #name: 'DARPA' #This will be assigned same name as target_frame_live from launch file
         layout:
           [
            {id: 4, size: 0.2286, x: 0.691, y: 1.457, z: 0.589,  qx: 0.5, qy: -0.5, qz: -0.5, qw: 0.5},
            {id: 5, size: 0.2286, x: 0.686, y: 0.250, z: 2.747,  qx: 0.5, qy: -0.5, qz: -0.5, qw: 0.5},
            {id: 6, size: 0.2286, x: 0.701, y: -1.540, z: 1.089,  qx: 0.5, qy: -0.5, qz: -0.5, qw: 0.5}
           ]
       }
    ]
art_planner_subt:
  action_server:
    loop_rate: 10.0                               # [Hz] Frequency of the action server loop
  planner:
    name: "prm_motion_cost"                       # Planner [rrt_star, inf_rrt_star, rrt_sharp, lazy_prm_star, lazy_prm_star_min_update]
    elevation_layer: "upper_bound"                  # Layer name which has elevation information.
    traversability_layer: "traversability"        # Layer name which has traversability information.
    plan_time: 0.01                               # [s]   Planning duration.
    n_threads: 2                                  # Number of threads for ROS spinner.
    replan_freq: 0.5                              # [Hz]    Frequency of replanning.
    traversability_thres: 0.2                    # Traversability smaller than this is considered untraversable.
    simplify_solution: true                       # Simplify the solution path before publishing.
    snap_goal_to_map: true                        # Get z, roll, pitch from elevation map.
    unknown_space_untraversable: true             # If set true, unknown space is assumed to be untraversable.
    safety:
      foothold_margin: 0.3                        # [m] Edges are eroded this much to avoid stepping close to edges.
      foothold_margin_max_hole_size: 0.2          # [m] Maximum hole size to ignore during erosion.
      foothold_margin_max_drop: 0.3               # [m] Maximum drop to ignore during erosion.
      foothold_margin_max_drop_search_radius: 0.16 # [m] Erosion radius to compute drop.
      foothold_margin_min_step: 0.3               # [m] Minimum step up to ignore during erosion.
      foothold_size: 0.1                          # [m] Circular diameter which is considered minimal for a foothold.
    start_goal_search:
      start_radius: 0.2                           # [m] Try to find a valid start pose in this radius if selected start is invalid.
      goal_radius: 0.5                            # [m] Try to find a valid goal pose in this radius if selected pose is invalid.
      n_iter: 1000                                # Sample n times to find a valid pose.
    lazy_prm_star_min_update:
      invalidate_updated_graph_components: true   # Invalidate planner graph vertices and edges which were recently observed (and therefore might have changed).
      height_change_for_update: 0.05              # [m] Cell height changes larger than this are considered updated.
      cleanup_when_not_planning: true             # Do validity check in separate thread while not planning.
    prm_motion_cost:
      max_sample_time: 2.0                        # Maximum time to allocate for sampling.
      max_n_vertices: 10000                       # Stop sampling when this many vertices are in the graph.
      max_n_edges: 50000                            # Stop sampling when this many edges are in the graph.
      recompute_density_after_n_samples: 1000     # Recompute the vertex density after sampling this many vertices.
      max_query_edge_length: 0.5                  # Maximum edge length to query.
      risk_threshold: 0.5                         # Maximum risk to label edge valid.
      cost_weights:
        energy: 0.0
        time: 1.0
        risk: 5.0
  objectives:
    custom_path_length:
      use_directional_cost: true                  # Enable different cost per direction.
      max_lon_vel: 0.5                            # [m/s]   Maximal longitudinal velocity.
      max_lat_vel: 0.1                            # [m/s]   Maximal lateral velocitiy.
      max_ang_vel: 0.5                            # [rad/s] Maximal angular velocity.
    clearance:
      enable: false                               # Enable clearance objective.
      weight: 10.0                                # Weight of this cost compared to path length.
      cost_center: 5                              # Cost if center box of reachability is not in contact.
      cost_lon: 3                                 # Cost if longitudinal box of reachability is not in contact.
      cost_lat: 2                                 # Cost if lateral box of reachability is not in contact.
      cost_diag: 1                                # Cost if diagional box of reachability is not in contact.
  sampler:
    max_pitch_pert: 10                            # [degree]  Maximum pitch pertubation when sampling.
    max_roll_pert: 3.33                           # [degree]  Maximum roll pertubation when sampling.
    sample_from_distribution: true                # Whether to use our custom sampling distribution or sample uniformly in the map.
    use_inverse_vertex_density: true              # Only works with "lazy_prm_star_min_update". Sampling biased towards regions with low-density of graph vertices.
    use_max_prob_unknown_samples: true            # Limit drawing samples from unknown map region to certain probability.
    max_prob_unknown_samples: 0.1                 # The maximum probability of drawing samples from the unknown region.
  robot:
    base_frame: "base_subt"                       # Frame ID which is used to get robot pose.
    torso:
      length: 1.31                                # [m] Length.
      width: 0.65                                 # [m] Width.
      height: 0.3                                 # [m] Height.
      offset:                                     # [m] Torso center offset relative to base_frame.
        x: 0.0
        y: 0.0
        z: 0.04
    feet:
      offset:                                     # [m] Reachability box offset relative to base_frame.
        x: 0.51                                   # Sign of value does not matter.
        y: 0.2                                    # Sign of value does not matter.
        z: -0.475
      reach:                                      # [m] Reachability of foot box size.
        x: 0.2
        y: 0.2
        z: 0.2
  path_following:
    actions:
      topic: /local_guidance_path_manager/follow_global_path/     # path following action client topic.
    local_guidance_mode: walk_precise_learning_perceptive         # Path following mode for local guidance.
    interpolate_output_path: true                                 # Interpolate between path poses to have intermediate goals.
    prune_output_path: false                                      # Prune path before sending it as action goal.
  verbose: false
attitude_based_thottler:
  min_slowdown_factor: 0.3
  pitch_lpf_gain: 0.85
  pitch_threshold: 0.05
  quadratic_slowdown: true
  quadratic_slowdown_gain: 5.0  # Only has effect if quadratic_slowdown = true
  slowdown_gain: 2.0            # Only has effect if quadratic_slowdown = false
base_subt_to_darpa_in_darpa:
  child_frame_id: base_subt
  parent_frame_id: darpa
  target_frame_id: darpa
  pose_topic: /tf/base_subt_to_darpa_in_darpa
  angles_topic: /tf/base_subt_to_darpa_in_darpa/orientation/euler_angles_rpy
  frequency: 2.0
base_subt_to_map_in_map:
  child_frame_id: base_subt
  parent_frame_id: map
  target_frame_id: map
  pose_topic: /tf/base_subt_to_map_in_map
  angles_topic: /tf/base_subt_to_map_in_map/orientation/euler_angles_rpy
  frequency: 5.0
bayesian_artifact_filter:
  lidar_frame_id: lidar # Should be same frame as maplab uses to attach artifacts to
  robot_name: anymal_c_subt # Each robot should overlay this parameter with its own name (used by maplab as well)
  world_frame_id: darpa
  # Flag to only provide a spatial filter, all spheres are immediately reported, but detections within the same sphere are ignored
  spacial_filter_only: false
  # Flag to send all reports directly to the command post/darpa server interface
  auto_report_artifacts: false
  # Yolo Bounding Box Topic Names (aligned with below)
  detection_topic_names: ["/tensorrt_artifact_detection_front/bounding_boxes_0","/tensorrt_artifact_detection_left/bounding_boxes_0","/tensorrt_artifact_detection_right/bounding_boxes_0","/tensorrt_artifact_detection_upwards/bounding_boxes_0","/tensorrt_artifact_detection_zoom_camera/bounding_boxes_0", "/thermal_camera/bounding_boxes"]
  # Yolo Detection Image Topic Names (aligned with above)
  detection_image_topic_names: ["/tensorrt_artifact_detection_front/detection_image_0","/tensorrt_artifact_detection_left/detection_image_0","/tensorrt_artifact_detection_right/detection_image_0","/tensorrt_artifact_detection_upwards/detection_image_0","/tensorrt_artifact_detection_zoom_camera/detection_image_0", "/thermal_camera/detection_image"]
  image_to_map_service_name: /image_to_map/roi_to_point
  artifact_ack_topic_name: /yolo_ack
  use_pixel_color_filter: false
  pixel_color_filter_ratio: 0.00001
  # Bluetooth/Gas parameters.
  bluetooth_gas_topic: /bluetooth_gas_detector/filtered_bluetooth_gas_artifact
  # Size of the spheres
  sphere_radius: 2.0
  # Use Object Heights and Detection Box Sizes to reject projections:
  # Rejects detections where the size of the bounding box doesn't match the expected height
  # if the difference between the estimated distance and the projected distance
  # is greater than the projection_error_max_threshold or less than the projection_error_min_threshold
  # the detection is dropped
  use_projection_error: false
  # Spheres which have not been acknowledged by the ground station are retransmitted at this interval
  artifact_unack_report_timer_sec: 10.0
  # Send compressed report image flag : if true report is populated with compressed image, else uncompressed image field is populated
  send_compressed_report_image: true
  compression_format: jpeg
  jpeg_quality: 80
  png_level: 9
  # Rescale compressed report image flag : how much should the reported image be rescaled (only used for operator visualization)
  rescale_report_image_fact: 2.0
  # Flags for which part of bounding box is used to project rays
  bounding_box_mode: 0 # 0 = use whole bounding box, 1 = reduce bounding box size by 2, 2 = use center point
  # Auto-Report Far Away Spheres
  auto_report_far_spheres: false
  auto_report_far_spheres_threshold: 20.0
  # Use either the actual detection probablity or the predefined probablities for each artifact class.
  use_detection_prob_yolo: false
  use_detection_prob_thermal: false
  # UNDERSCORES WILL BE REPLACED WITH SPACES -> Performed in Bayesian Sphere Node Constructor
  ArtifactNames:       [Survivor, Fire_Extinguisher, Cell_Phone, Drill, Backpack, Vent, Helmet, Rope, Gas, Cube, Thermal]
  Survivor:
    report_thresh:            0.5
    min_detection_thres:      0.3
    prob_pos_pos:             0.85
    prob_pos_neg:             0.45
    proj_height_min:          0.05
    proj_height_max:          2.0
    use_height:               true
    use_color:                false
    use_thermal:              true
    HSV_MIN_1:                [20, 105, 161]
    HSV_MAX_1:                [104, 255, 255]
    HSV_MIN_2:                [255, 255, 255]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [1.0, 0.0, 1.0, 0.5]
  Fire_Extinguisher:
    report_thresh:            0.45
    min_detection_thres:      0.48
    prob_pos_pos:             0.85
    prob_pos_neg:             0.45
    proj_height_min:          0.1
    proj_height_max:          0.5
    use_height:               true
    use_color:                false
    use_thermal:              false
    HSV_MIN_1:                [0, 78, 46] #[0, 128, 128]
    HSV_MAX_1:                [15, 255, 255]
    HSV_MIN_2:                [112, 137, 38]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [1.0,0.0,0.37,0.5] #red
  Cell_Phone:
    report_thresh:            0.5
    min_detection_thres:      0.80
    prob_pos_pos:             0.85
    prob_pos_neg:             0.45
    proj_height_min:          0.0
    proj_height_max:          100.0
    use_height:               false
    use_color:                false
    use_thermal:              false
    HSV_MIN_1:                [255, 255, 255]
    HSV_MAX_1:                [255, 255, 255]
    HSV_MIN_2:                [255, 255, 255]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [0.0,0.0,0.0,0.5] #black
  Drill:
    report_thresh:            0.5
    min_detection_thres:      0.65
    prob_pos_pos:             0.85
    prob_pos_neg:             0.45
    proj_height_min:          0.0
    proj_height_max:          0.4
    use_height:               true
    use_color:                false
    use_thermal:              false
    HSV_MIN_1:                [0, 111, 106]
    HSV_MAX_1:                [16, 255, 255]
    HSV_MIN_2:                [255, 255, 255]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [1.0,0.87,0.0,0.5] # orange
  Backpack:
    report_thresh:            0.5
    min_detection_thres:      0.5
    prob_pos_pos:             0.85
    prob_pos_neg:             0.45
    proj_height_min:          0.35
    proj_height_max:          1.0
    use_height:               true
    use_color:                false
    use_thermal:              false
    HSV_MIN_1:                [0, 78, 46]
    HSV_MAX_1:                [15, 255, 255]
    HSV_MIN_2:                [112, 137, 38]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [0.5,1.0,0.0,0.5] # purple
  Vent:
    report_thresh:            0.5
    min_detection_thres:      0.15
    prob_pos_pos:             0.85
    prob_pos_neg:             0.45
    proj_height_min:          0.15
    proj_height_max:          1.5
    use_height:               true
    use_color:                false
    use_thermal:              true
    HSV_MIN_1:                [0, 0, 182]
    HSV_MAX_1:                [255, 75, 255]
    HSV_MIN_2:                [255, 255, 255]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [0.0,1.0,0.12,0.5] # white
  Helmet:
    report_thresh:            0.5
    min_detection_thres:      0.35
    prob_pos_pos:             0.85
    prob_pos_neg:             0.45
    proj_height_min:          0.19
    proj_height_max:          1.0
    use_height:               true
    use_color:                false
    use_thermal:              false
    HSV_MIN_1:                [0, 0, 182]
    HSV_MAX_1:                [255, 75, 255]
    HSV_MIN_2:                [255, 255, 255]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [0.0,1.0,0.75,0.5] # green
  Rope:
    report_thresh:            0.5
    min_detection_thres:      0.25
    prob_pos_pos:             0.95
    prob_pos_neg:             0.45
    proj_height_min:          0.0
    proj_height_max:          0.75
    use_height:               true
    use_color:                true
    use_thermal:              false
    HSV_MIN_1:                [110, 196, 78]
    HSV_MAX_1:                [118, 255, 255]
    HSV_MIN_2:                [255, 255, 255]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [0.0,0.623,1.0,0.5] # blue
  Gas:
    report_thresh:            0.25
    min_detection_thres:      0.15
    prob_pos_pos:             0.9
    prob_pos_neg:             0.25
    height:                   0.0
    use_height:               false
    use_color:                false
    use_thermal:              false
    HSV_MIN_1:                [255, 255, 255]
    HSV_MAX_1:                [255, 255, 255]
    HSV_MIN_2:                [255, 255, 255]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [0.0,1.0,1.0,0.5] #cyan
  Cube:
    report_thresh:            0.25
    min_detection_thres:      0.15
    prob_pos_pos:             0.9
    prob_pos_neg:             0.25
    height:                   0.0
    use_height:               false
    use_color:                false
    use_thermal:              false
    HSV_MIN_1:                [255, 255, 255]
    HSV_MAX_1:                [255, 255, 255]
    HSV_MIN_2:                [255, 255, 255]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [0.55,0.2,0.7,0.5] #purple
  Thermal:
    report_thresh:            0.25
    min_detection_thres:      0.15
    prob_pos_pos:             0.9
    prob_pos_neg:             0.25
    height:                   0.0
    use_height:               false
    use_color:                false
    use_thermal:              false
    HSV_MIN_1:                [255, 255, 255]
    HSV_MAX_1:                [255, 255, 255]
    HSV_MIN_2:                [255, 255, 255]
    HSV_MAX_2:                [255, 255, 255]
    marker_color:             [0.55,0.2,0.7,0.5] #purple
bluetooth_gas_detector:
  frequency: 4
  frames:
    robot_frame: "base_subt"
    world_frame: "darpa"
  thresholds:
    distance_between_positions: 10.0 # m, clustering for gas sources based on distance.
    max_number_of_measurements_used_for_estimate: 10 # number of strongest measurements used to compute best position.
    min_number_of_measurements_used_for_estimate: 5 # minimum number of measurements required.
    min_bluetooth_rssi: -85.0
    max_bluetooth_rssi: -25.0
    min_gas_value: 800.0
    max_gas_value: 3300.0
    number_of_measurements_per_position: 20 # max number of measurements per source.
    publish_new_estimate: 0.5 # m publish the same source to bayesian if the position has changed at least this value.
    signal_bluetooth_strength: 0.15 # threshold for normed bluetooth signal. detection at -76 RSSI.
    signal_gas_strength: 0.28 # threshold for normed gas signal, detection at 1500.
    time_to_publish: 30.0 # n seconds after the last measurements the estimate is published to Bayesian.
  topic:
    received_bluetooth_measurements: "/bluetooth_reader/detections"
    received_gas_measurements: "/co2_sensor_reading/co2_concentration"
    best_measurements: "/bluetooth_gas_detector/closest_bluetooth_gas_position" # visualization marker.
    report: "/bluetooth_gas_detector/filtered_bluetooth_gas_artifact"
  ui:
    publish_measurements: true
    size_markers: 0.4
bluetooth_gas_simulator:
  frequency: 2
  frames:
    robot_frame: "base_subt"
    world_frame: "map"
  number_of_simulators: 4
  position1:
    x: 10
    y: 5
    z: 0.5
    type: "gas"
    color: "blue"
  position2:
    x: 6
    y: -14
    z: 0.5
    type: "bluetooth"
    color: "red"
  position3:
    x: 2.5
    y: -14
    z: 0.5
    type: "gas"
    color: "blue"
  position4:
    x: 0
    y: -13
    z: 0.5
    type: "bluetooth"
    color: "red"
  size_markers: 0.6
  max_distance_for_measurement: 10
  topic:
    simulator_position: "/bluetooth_gas_simulator/positions"
    bluetooth_measurements: "/bluetooth_reader/detections"
    gas_measurements: "/co2_sensor_reading/co2_concentration"
  simulator_noise:
    mean: 0.0
    std: 0.0
bluetooth_reader:
  #local_bluetooth_mac: 00:00:00:00:00:00 # If only one dongle is plugged, no need to specify it's mac address
  output_bluetooth_topic: /bluetooth_reader/detections
bluetooth_viz:
  input_bluetooth_topic: /bluetooth_reader/detections
  overlay_topic: /bluetooth_viz/overlay
  min_sound_interval: 7
  viz_timeout: 30
# Allow custom filtering point-clouds.
bpearl_point_cloud_filter_subt:
  filter_and_merger_subt:
    config_files_folder: ''
    log_level: INFO
    stream_combinations:
      - decimation: 2
        filter: true
        filters_config: pointmatcher_filters_bpearl.yaml
        fixed_frame_tf: bpearl_rear
        keep_intensity: true
        master: 0
        max_time_offset: 0.5
        name: bpearl_rear_filtered
        output_topic: /point_cloud_filter_subt/bpearl_rear/point_cloud_filtered
        sources:
          - 0
        target_frame: bpearl_rear
        use_fixed_frame_tf: true
        wait_time_tf: 0.05
      - decimation: 2
        filter: true
        filters_config: pointmatcher_filters_bpearl.yaml
        fixed_frame_tf: bpearl_front
        keep_intensity: true
        master: 1
        max_time_offset: 0.5
        name: bpearl_front_filtered
        output_topic: /point_cloud_filter_subt/bpearl_front/point_cloud_filtered
        sources:
          - 1
        target_frame: bpearl_front
        use_fixed_frame_tf: true
        wait_time_tf: 0.05
    stream_sources:
      - filter: false
        id: 0
        input_topic: /robot_self_filter/bpearl_rear/point_cloud
        queue_size: 1
        source_name: bpearl_rear
        source_type: lidar
      - filter: false
        id: 1
        input_topic: /robot_self_filter/bpearl_front/point_cloud
        queue_size: 1
        source_name: bpearl_front
        source_type: lidar
    subscribers_check_period: 1
darknet_ros_common: &darknet_ros_common_reference
  actions:
    camera_reading:
      name: /darknet_ros/check_for_objects
  image_view:
    enable_console_output: false
    enable_opencv: false
    wait_key_delay: 1
  publishers:
    bounding_boxes:
      latch: false
      queue_size: 1
      topic: bounding_boxes
    detection_image:
      latch: true
      queue_size: 1
      topic: detection_image
    object_detector:
      latch: false
      queue_size: 1
      topic: found_object
  yolo_model:
    config_file:
      name: yolo_subt.cfg
    detection_classes:
      names:
        - Survivor
        - Fire Extinguisher
        - Cell Phone
        - Drill
        - Backpack
        - Vent
        - Helmet
        - Rope
    threshold:
      value: 0.2
    weight_file:
      name: yolo_aerial_gpu.weights
darknet_ros_camera_front:
  <<: *darknet_ros_common_reference
  subscribers:
    camera_reading:
      topic: /alphasense_driver_ros/cam4/dropped/debayered/slow
darknet_ros_camera_left:
  <<: *darknet_ros_common_reference
  subscribers:
    camera_reading:
      topic: /alphasense_driver_ros/cam3/dropped/debayered/slow
darknet_ros_camera_right:
  <<: *darknet_ros_common_reference
  subscribers:
    camera_reading:
      topic: /alphasense_driver_ros/cam5/dropped/debayered/slow
darpa_locomotion_mission_bt:
  frames:
    robot_frame: base_subt
    world_frame: map
  reverse:
    local_guidance_traversability_mode: walk_precise_learning_perceptive
    local_guidance_wifi_mode: walk_precise_learning_perceptive
    threshold_optimized_path: 10.0                               # [m] maximum distance to use reverse path instead of global optimized path
  local_guidance_recovery_homing_mode: walk_precise_learning_perceptive
  max_edge_length: 1.0                                           # Maximum edge length for paths that are created by global planner. Otherwise poses are added by interpolation
  active_client_path_completed_threshold: 0.2                    # [m] Norm of error vector to final pose of active client path at which it is considered completed
  wifi:
    buffer_dt: 0.5                     # [s] frequency for saving ping in memory
    buffer_length: 30                  # [s] how many samples to keep in memory
    num_consecutive_negative_pings: 5  # how many consecutive negative ping messages should indicate connection lost
    num_consecutive_positive_pings: 3  # how many consecutive positive ping messages should indicate connection.
  tick_frequency: 2 # [Hz]
  send_goal_to_local_planner: true     # Default parameter
  use_gbplanner_homing_path: true
  wifi_beacon_deployment:
    beacon_carrier: false              # Default parameter
    deployment_time: 4                 # Parameter to wait until beacon is deployed
    beacon_list: ["dx2-alpha", "dx2-beta", "dx2-gamma", "dx2-delta"]
    motion_transitioner:
      goal_motion_state: torso_control_learning
      motion_parameters: ""
      abort_on_param_failure: false
    attitude_twist:
      frame_id: base                   # frame id to command the twist
      linear_x: -0.7
      angular_z: -0.6
      duration: 2.0                    # s
      dt: 0.1                          # s
  checks:
    keys:
      safe_locomotion: /darpa_locomotion_mission_bt/checks/check_safe_locomotion_on
      local_planner: /darpa_locomotion_mission_bt/send_goal_to_local_planner
      explore_without_wifi: /darpa_locomotion_mission_bt/checks/explore_without_wifi
      traversability_safety: /darpa_locomotion_mission_bt/checks/check_traversability_on
      global_planner_automatic_full_scan: /darpa_locomotion_mission_bt/checks/global_planner_automatic_full_scan_on
      global_planner_automatic_point_scan: /darpa_locomotion_mission_bt/checks/global_planner_automatic_point_scan_on
    check_estop_released: false                    # Set this here to stop the behaviortree until the parameter is set from the HLC
    check_safe_locomotion_on: true                 # Default parameter
    explore_without_wifi: false                    # Default parameter
    check_traversability_on: false                 # Default parameter
    global_planner_automatic_full_scan_on: false   # Default parameter
    global_planner_automatic_point_scan_on: true   # Default parameter
    position_watchdog_on: true                     # Default parameter
  global_planner:
    path_completed_threshold: 2.0
    control_mode: walk_learning_perceptive           # Path follower mode that is used if local planner is disabled
    stand_mode: walk_learning_perceptive             # Path follower mode that is used if local planner is disabled
  local_planner:
    enabled: true                                     # (Default parameter) Send the goal of global planner to the local planner
    control_mode: walk_precise_learning_perceptive    # Path follower mode that is used if local planner is enabled
    stand_mode: walk_precise_learning_perceptive      # Path follower mode that is used if local planner is enabled
    max_failure_time: 5.0                             # [s]
  watch_dog:
    timer: 90
    min_position_change: 0.5
    min_position_change_time: 2.5
  publishers:
    notify_ready:
      topic: ready_for_new_goals
    status_report:
      topic: status_report
    status:
      topic: status
    topic_status_report:
      topic: topic_status_report
    active_client:
      topic: active_client
    homing_timer:
      topic: homing_timer
    mission_time:
      topic: mission_time
    beacon_deployment_twist:
      topic: beacon_deployment_twist
    available_wifi_beacons:
      topic: available_wifi_beacons
    moving:
      topic: robot_is_moving
  subscribers:
    estop_released:
      topic: /motion_control_manager/notify_controller_manager_state
    traversability_check:
      topic: /safety_checker/traversabiliy_safety_status
    ping:
      topic: /pinger_anymal_to_baserouter/ping
  clients:
    gbplanner_automatic_planning:
      topic: /planner_control_interface/std_srvs/automatic_planning
    gbplanner_automatic_full_scan:
      service: /gbplanner/automatic_full_scan
    gbplanner_automatic_point_scan:
      service: /gbplanner/automatic_point_scan
    gbplanner_init_inspection_head_map:
      service: /gbplanner/init_inspection_head_map
    gbplanner_stop_planning:
      topic: /planner_control_interface/std_srvs/stop
    gbplanner_trigger_homing:
      topic: /planner_control_interface/std_srvs/homing_trigger
    gbplanner_go_to_waypoint:
      topic: /planner_control_interface/std_srvs/go_to_waypoint
    path_logger:
      topic: /path_logger/get_sub_path
    path_logger_enable:
      topic: /path_logger/enable_path_recording
    gbplanner_enable_untraversable_polygon_subscriber:
      service: /gbplanner/enable_untraversable_polygon_subscriber
    gbplanner_set_local_guidance_control_mode:
      service: /gbplanner_pci_anymal_ros_node/set_control_mode_string
    gbplanner_set_local_guidance_stand_mode:
      service: /gbplanner_pci_anymal_ros_node/set_stand_mode_string
    clear_and_initialize_elevation_map:
      service: /elevation_mapping/clear_map_with_initializer
    deploy_wifi_beacon_with_id:
      service: /wifi_release_mechanism/release_beacon
    reset_distance_tracker:
      service: /distance_tracker/reset
    send_logged_reverse_path:
      service: /path_logger/send_path_via_action_server
  actions:
    path_manager_follow_path: # Output Local Guidance
      topic: /local_guidance_path_manager/follow_global_path/
    local_planner_follow_path: # Output Local Planner
      topic: /art_planner_subt/subt_plan_path
    safe_locomotion_follow_path: # Input
      topic: /darpa_locomotion_mission_bt/follow_path
    inspection:
      topic: /inspection_head/scan
  servers:
    cancel_all_goals:
      service: cancel_all_goals
    local_planner:
      service: enable_local_planner
    automatic_planning:
      service: automatic_planning
    automatic_full_scans:
      service: enable_automatic_full_scans
    automatic_point_scans:
      service: enable_automatic_point_scans
    homing:
      service: trigger_homing
    set_homing_timer:
      service: set_homing_timer
    stop_planning:
      service: stop_planning
    go_to_waypoint:
      service: go_to_waypoint
    go_to_waypoint_and_explore:
      service: go_to_waypoint_and_explore
    safe_locomotion:
      service: enable_safe_locomotion
    wifi_safety:
      service: enable_wifi_safety
    traversability_safety:
      service: enable_traversability_safety
    recovery_homing:
      service: recovery_homing
    trigger_user_inspection:
      service: trigger_user_inspection
    trigger_user_point_inspection:
      service: trigger_user_point_inspection
    trigger_gbplanner_inspection:
      service: /darpa_locomotion_mission_bt/trigger_gbplanner_inspection
    deploy_wifi_beacon:
      service: deploy_wifi_beacon
    follow_path_and_explore:
      service: follow_path_and_explore
debayer_cuda_camera_common: &debayer_cuda_camera_common
  clahe_clip_limit: 1.5
  clahe_tiles_grid_size: 8
  gamma_correction_k: 0.8
  nppi_debayer_mode: NPPI_BAYER_GRBG
  output_encoding: BGR
  run_clahe: false
  white_balance_clipping_percentile: 0.2
debayer_cuda_camera_front:
  <<: *debayer_cuda_camera_common
  input_topic: /alphasense_driver_ros/cam4/dropped
  needs_rotation: true
  output_topic: /alphasense_driver_ros/cam4/dropped/debayered
  red_blue_swap: false
  skip_number_of_images_for_slow_topic: 4
debayer_cuda_camera_left:
  <<: *debayer_cuda_camera_common
  input_topic: /alphasense_driver_ros/cam3/dropped
  needs_rotation: true
  output_topic: /alphasense_driver_ros/cam3/dropped/debayered
  red_blue_swap: false
  skip_number_of_images_for_slow_topic: 4
debayer_cuda_camera_right:
  <<: *debayer_cuda_camera_common
  input_topic: /alphasense_driver_ros/cam5/dropped
  needs_rotation: false
  output_topic: /alphasense_driver_ros/cam5/dropped/debayered
  red_blue_swap: false
  skip_number_of_images_for_slow_topic: 4
debayer_cuda_camera_upwards:
  <<: *debayer_cuda_camera_common
  input_topic: /alphasense_driver_ros/cam6/dropped
  needs_rotation: true
  output_topic: /alphasense_driver_ros/cam6/dropped/debayered
  red_blue_swap: false
  skip_number_of_images_for_slow_topic: 3
depth_camera_subt_common: &depth_camera_subt_common
  driver:
    align_depth: false
    color_fps: 15
    depth_fps: 15
    infra_fps: 15
  point_cloud_filter_pcl:
    leaf_size: 0.04
    filter_limit_max: 3.0
depth_camera_front:
  <<: *depth_camera_subt_common
  point_cloud_self_filter:
    input_topic: /depth_camera_front/depth/color/points_filtered
depth_camera_left:
  <<: *depth_camera_subt_common
  point_cloud_self_filter:
    input_topic: /depth_camera_left/depth/color/points_filtered
depth_camera_rear:
  <<: *depth_camera_subt_common
  point_cloud_self_filter:
    input_topic: /depth_camera_rear/depth/color/points_filtered
depth_camera_right:
  <<: *depth_camera_subt_common
  point_cloud_self_filter:
    input_topic: /depth_camera_right/depth/color/points_filtered
distance_tracker:
  inertial_frame: map
  tracked_frame: base_subt
  display_topic: display
  segment_threshold: 0.5
  update_rate: 5
disk_monitor_jetson:
  disk_usage_error: 0.99
  disk_usage_warn: 0.8
  update_frequency: 1.0
chrony_monitor:
  time_offset_error: 0.001
  time_offset_warn: 1.0e-05
  update_frequency: 1.0
elevation_mapping:
  # Cupy parameters
  map_frame: msf_body_imu_map   # options are "odom" or "msf_body_imu_map"
  map_length: 8.0               # map's size in m.
  ramped_height_range_a: 0.6                      # if z > max(d - ramped_height_range_b, 0) * ramped_height_range_a + ramped_height_range_c, reject.
  ramped_height_range_b: 1.35                     # if z > max(d - ramped_height_range_b, 0) * ramped_height_range_a + ramped_height_range_c, reject.
  ramped_height_range_c: 0.4                      # if z > max(d - ramped_height_range_b, 0) * ramped_height_range_a + ramped_height_range_c, reject.
  pointcloud_topics: ['/robot_self_filter/bpearl_front/point_cloud',
                      '/robot_self_filter/bpearl_rear/point_cloud',
                      '/depth_camera_front/point_cloud_self_filtered',
                      '/depth_camera_left/point_cloud_self_filtered',
                      '/depth_camera_rear/point_cloud_self_filtered',
                      '/depth_camera_right/point_cloud_self_filtered']
  publishers:
    elevation_map_raw:
      layers: ['elevation', 'upper_bound', 'traversability']
      basic_layers: ['elevation']
      fps: 5.0
    elevation_map_recordable:
      layers: ['elevation', 'upper_bound', 'is_upper_bound', 'traversability']
      basic_layers: ['elevation']
      fps: 5.0
    elevation_map_visualizable:
      layers: ['upper_bound', 'traversability']
      basic_layers: ['upper_bound']
      fps: 1.0
free_gait_action_loader:
  free_gait_action_packages:
    priority_99: anymal_c_subt_free_gait_actions
gbplanner_configs: &gbplanner_configs
  inspection_head: false
  #-------------------------------------------------------------------------------
  # ROBOT CONFIGURATION
  # Note:
  # Min. size (lying)	80 x 60 x 40 cm
  # Operating size (standing)	80 x 60 x 70 cm
  #-------------------------------------------------------------------------------
  RobotParams:
    type:               kLeggedRobot
    size:               [0.4, 0.4, 0.4]  # Gbplanner does not respect robot orientation --> Square footprint
    size_extension_min: [0.0, 0.0, 0.0] # minimum extension allowed to operate.
    size_extension:     [0.1, 0.1, 0.0] # max extension
    center_offset:      [0.0, 0.0, 0.0]
    relax_ratio:        0.5
    bound_mode:         kExtendedBound
    safety_extension:   [2.0, 3.0, 0.5]
  #-------------------------------------------------------------------------------
  # SENSOR CONFIGURATION
  #  sensor_list: Define a set of sensors relevant to the exploration task.
  #  rotations: ZYX order;
  #             all follows ROS convention (X-forward, Y-left, Z-Up).
  #-------------------------------------------------------------------------------
  SensorParams:
    sensor_list:      ["VLP16"]
    VLP16:
      type:           kLidar
      max_range:      20.0
      center_offset:  [0.0, 0.0, 0.0]
      rotations:      [0.0, 0.0, 0.0]
      fov:            [rad(2*pi), rad(pi/6)]
      resolution:     [0.08726646259, rad(5.0*pi/180)] # [rad(5.0*pi/180), rad(2.0*pi/180)]
      frontier_percentage_threshold: 0.1
  #-------------------------------------------------------------------------------
  # MAP CONFIGURATION
  #  sensor_list: Define a set of sensors relevant to the map annotation task.
  #-------------------------------------------------------------------------------
  MapAnnotationParams:
    rate_alphasense_map_update: 1.0
    sensor_list:      ["zoomCamera","alphasenseCam3","alphasenseCam4","alphasenseCam5","alphasenseCam6"]
    zoomCamera:
      type:           kCamera
      CameraType:     kRotatingZoom
      callback_topic: /
      focal_length_topic: /zoom_camera/focal_length
      min_range:      7.0
      max_range:      22.0
      center_offset:  [0.0, 0.0, 0.0]
      rotations:      [0.0, 0.0, 0.0]
      fov:            [6.28318530718, 0.52359877559] # [rad(2*pi), rad(pi/6)]
      resolution:     [-1.0, -1.0] #[0.08726646259, 0.03490658503] # [rad(5.0*pi/180), rad(2.0*pi/180)]
      frontier_percentage_threshold: 0.1
      frame_id:       inspection_payload_camera
      width:          1920
      height:         1080
      width_removal:  0
      height_removal: 0
    alphasenseCam3:
      type:           kCamera
      CameraType:     kFixed
      callback_topic: /
      focal_length_topic: /
      frame_id:       cam3_sensor_frame
      min_range:      5.0
      max_range:      5.0
      center_offset:  [0.0, 0.0, 0.0]
      rotations:      [0.0, 0.0, 0.0]
      fov:            [0.8063, 1.1] #92.4/2, 126/2  ### 0.2m(voxel)/10m(dist) = fov/x
      resolution:     [-1.0, -1.0] # [rad(5.0*pi/180), rad(2.0*pi/180)]
      frontier_percentage_threshold: 0.1
      width:          720
      height:         540
      width_removal:  70
      height_removal: 50
    alphasenseCam4:
      type:           kCamera
      CameraType:     kFixed
      callback_topic: /
      focal_length_topic: /
      frame_id:       cam4_sensor_frame
      min_range:      5.0
      max_range:      5.0
      center_offset:  [0.0, 0.0, 0.0]
      rotations:      [0.0, 0.0, 0.0]
      fov:            [0.8063, 1.1] #92.4/2, 126/2  ### 0.2m(voxel)/10m(dist) = fov/x
      resolution:     [-1.0, -1.0] # [rad(5.0*pi/180), rad(2.0*pi/180)]
      frontier_percentage_threshold: 0.1
      width:          720
      height:         540
      width_removal:  70
      height_removal: 50
    alphasenseCam5:
      type:           kCamera
      CameraType:     kFixed
      callback_topic: /
      focal_length_topic: /
      frame_id:       cam5_sensor_frame
      min_range:      5.0
      max_range:      5.0
      center_offset:  [0.0, 0.0, 0.0]
      rotations:      [0.0, 0.0, 0.0]
      fov:            [0.8063, 1.1] #92.4/2, 126/2  ### 0.2m(voxel)/10m(dist) = fov/x
      resolution:     [-1.0, -1.0] # [rad(5.0*pi/180), rad(2.0*pi/180)]
      frontier_percentage_threshold: 0.1
      width:          720
      height:         540
      width_removal:  70
      height_removal: 50
    alphasenseCam6:
      type:           kCamera
      CameraType:     kFixed
      callback_topic: /
      focal_length_topic: /
      frame_id:       cam6_sensor_frame
      min_range:      5.0
      max_range:      5.0
      center_offset:  [0.0, 0.0, 0.0]
      rotations:      [0.0, 0.0, 0.0]
      fov:            [0.8063, 1.1] #92.4/2, 126/2  ### 0.2m(voxel)/10m(dist) = fov/x
      resolution:     [-1.0, -1.0] # [rad(5.0*pi/180), rad(2.0*pi/180)]
      frontier_percentage_threshold: 0.1
      width:          720
      height:         540
      width_removal:  70
      height_removal: 50
  #-------------------------------------------------------------------------------
  # SAMPLING SPACE CONFIGURATION
  #   Global: Strictly defined bounds for the whole environment.
  #   Local: Define a local space wrt current robot state for planning.
  #-------------------------------------------------------------------------------
  BoundedSpaceParams:
    Global:
      type:           kCuboid
      min_val:        [-3000.0, -3000.0, -300.0]
      max_val:        [3000.0, 3000.0, 300.0]
    Local:
      type:           kCuboid
      min_val:        [-15.0, -15.0, -6.0]
      max_val:        [15.0, 15.0, 6.0]
      min_extension:  [-20.0, -20.0, -2.0]
      max_extension:  [20.0, 20.0, 1.0]
    LocalSearch:
      type:           kCuboid
      min_val:        [-50.0, -50.0, -1.0]
      max_val:        [50.0, 50.0, 1.0]
    LocalVerticalExp:
      type:           kCuboid
      min_val:        [-5.0, -5.0, -1.0]
      max_val:        [5.0, 5.0, 5.0]
      min_extension:  [-10.0, -10.0, -10.0]
      max_extension:  [10.0, 10.0, 10.0]
    # Adaptive OBB:
    LocalAdaptiveExp:
      type:           kCuboid
      min_val:        [-10.0, -10.0, -0.75] #????
      max_val:        [10.0, 10.0, 0.75] #????
  #-------------------------------------------------------------------------------
  # SAMPLING POLICY CONFIGURATION
  #   Sample space limited to 4 states: X, Y, Z, and Heading
  #-------------------------------------------------------------------------------
  RandomSamplerParams:
    SamplerForExploration:
      X:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Y:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Z:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Heading:
        pdf_type:       kUniform
        sample_mode:    kManual
        min_val:        rad(-pi)
        max_val:        rad(pi)
    SamplerForSearching:
      X:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Y:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Z:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Heading:
        pdf_type:       kUniform
        sample_mode:    kManual
        min_val:        rad(-pi)
        max_val:        rad(pi)
    SamplerForVerticalExp:
      X:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Y:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Z:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Heading:
        pdf_type:       kUniform
        sample_mode:    kManual
        min_val:        rad(-pi)
        max_val:        rad(pi)
    SamplerForAdaptiveExp:
      X:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Y:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Z:
        pdf_type:       kUniform
        sample_mode:    kLocal
      Heading:
        pdf_type:       kUniform
        sample_mode:    kManual
        min_val:        rad(-pi)
        max_val:        rad(pi)
  #-------------------------------------------------------------------------------
  # EXPLORATION CONFIGURATION
  # exp_sensor_list: sensors used to compute exploration gain.
  #-------------------------------------------------------------------------------
  PlanningParams:
    type:             kAdaptiveExploration # Options: kBasicExploration, kAdaptiveExploration
    rr_mode:          kGraph
    bound_mode:       kExtremeBound
    exp_sensor_list:  ["VLP16"]
    auto_global_planner_enable: true
    relaxed_corridor_multiplier: 1.5
    yaw_tangent_correction: true
    edge_length_min:  0.2
    edge_length_max:  2.5
    edge_overshoot:   0.2 #m
    num_vertices_max: 1000
    num_edges_max:    10000
    num_loops_cutoff: 2000
    num_loops_max:    20000
    nearest_range:    2.5
    nearest_range_min: 0.2 # >= edge_length_min
    nearest_range_max: 2.5 # <= edge_length_max
    use_current_state: true
    use_ray_model_for_volumetric_gain: true
    path_length_penalty: 0.07
    path_direction_penalty: 0.3
    hanging_vertex_penalty: 5.0
    exp_gain_voxel_size: 0.8
    occupied_voxel_gain: 0.0
    free_voxel_gain:  0.0 #prefer directions towards more free voxels in case of the dead-end
    unknown_voxel_gain: 60.0
    traverse_length_max: 6.0
    traverse_time_max: 40.0
    max_edge_inclination: 40.0
    global_path_inclination_check: true
    augment_free_voxels_time: 1
    free_frustum_before_planning: false
    geofence_checking_enable: true
    auto_homing_enable: false
    homing_backward: false
    time_budget_limit: 7200 # seconds
    path_safety_enhance_enable: true
    global_frame_id: map
    freespace_cloud_enable: false
    search_enable: false
    yaw_samples: 10 # this will be used while optimizing the yaw for search
    switching_threshold: 0.65
    search_lambda_multiplier: 1.2
    select_max_yaw: false
    leafs_only_for_volumetric_gain: false
    max_ground_height: 0.65  # All points will be projected to this height from ground
    robot_height: 0.6  # Height of robot's base frame from ground
    path_interpolation_distance: 0.5
    cluster_vertices_for_gain: true
    clustering_radius: 1.0
  #-------------------------------------------------------------------------------
  # Adaptive Oriented Bounding Box
  #-------------------------------------------------------------------------------
  AdaptiveObbParams:
    type: kPca
    local_pointcloud_range: 50.0
    bounding_box_size_max: 50
    distribution_scaling_max: 13.8 # 90 percent, Cauchy (gamma = 1): -6.32 -> 6.32, normal (sigma = 1): -1.645 -> -1.645
    voxel_filter_leaf_size: 0.5
    max_iter_genetic_algorithm: 100
    max_iter_nelder_mead: 20
    population_size: 30
    tol_termination: 0.01
    tol_iter: 5
  GeofenceParams:
   AreaList: ["GBack", "GRight", "GLeft"]
   GBack:
     center: [0.0, 1.5, 0.0]
     size:   [6.0, 2.0, 0.0]
   GRight:
     center: [-3.5, -0.5, 0.0]
     size:   [1.0, 6.0, 0.0]
   GLeft:
    center: [3.5, -0.5, 0.0]
    size:   [1.0, 6.0, 0.0]
gbplanner_voxblox_configs: &gbplanner_voxblox_configs
  ### NEW SETTINGS FOR BRANCH feature/new_abort_criterion_for_fast_integrator ###
  accumulate_icp_corrections: True
  allow_clear: True
  clearing_ray_weight_factor: 0.1
  color_mode: "height"
  enable_icp: False
  icp_refine_roll_pitch: False
  integration_order_mode: "sorted"
  max_consecutive_ray_collisions: 2
  max_ray_length_m: 30.0
  max_weight: 50
  mesh_min_weight: 1e-4
  method: "fast"
  min_time_between_msgs_sec: 0.0
  # The first of the following is used by GbPlanner, the one below by Voxblox
  occupancy_distance_voxelsize_factor: 0.5  # Set same as below.
  occupancy_min_distance_voxel_size_factor: 0.5
  pointcloud_queue_size: 3
  publish_pointclouds: True
  publish_slices: False
  publish_traversable: False
  publish_tsdf_info: False
  publish_tsdf_map: True ###False
  slice_level: 1.0
  timestamp_tolerance_sec: 0.001
  traversability_radius: 0.7
  truncation_distance: 0.40 # 2 times the tsdf_voxel_size
  tsdf_voxel_size: 0.20
  tsdf_voxels_per_side: 16
  update_map_every_n_sec: 4.0
  update_mesh_every_n_sec: 20.0
  use_const_weight: False
  use_freespace_pointcloud: False
  use_tf_transforms: True
  use_weight_dropoff: True
  verbose: False
  voxel_carving_enabled: True
  weight_ray_by_range: False
  world_frame: map
  min_ray_length: 0.2
gbplanner_node:
  <<: *gbplanner_configs
  <<: *gbplanner_voxblox_configs
gbplanner_pci_anymal_ros_node:
  RobotDynamics:
    v_max: 0.15 # This should be the same value associated to “local_guidance_mode“
    v_init_max: 0.15
    v_homing_max: 0.15
    yaw_rate_max: 0.5
    dt: 0.1
  control_mode: walk_learning_perceptive   # This serves as default parameter.
  stand_mode: walk_learning_perceptive     # This serves as default parameter.
  world_frame_id: map
  use_action_server_path_manager: false
  homing_yaw_allocation_enable: false
  run_mode: kReal
  trigger_mode: kManual
  init_motion_enable: false
  planner_trigger_lead_time: 6.0 # time interval [s] before end of current path when planner should be triggered again.
  smooth_heading_enable: true
hbc_driver:
  publishers:
    joyPublisher:
      topic: /anyjoy/operator_regular
image_brighten_common: &image_brighten_common
  enable_dyn_reconf: false
  enable_brighten: true
  max_process_freq: 20
  scale_factor: 1
  dark_ch_scale: 4
  transmission_scale: 4
  dehaze_radius: 5
  dehaze_omega: 0.85
  dehaze_t0: 0.15
  guided_filter_radius: 45
  guided_filter_eps: 0.05
  guided_filter_resize_factor: 4
image_brighten_camera_front:
  <<: *image_brighten_common
  image_transport: compressed
  topic_image_input: /artifact_camera_2/image
  topic_image_output: /artifact_camera_2/image/bright
image_brighten_camera_left:
  <<: *image_brighten_common
  image_transport: compressed
  topic_image_input: /artifact_camera/image
  topic_image_output: /artifact_camera/image/bright
image_brighten_camera_right:
  <<: *image_brighten_common
  image_transport: compressed
  topic_image_input: /artifact_camera_3/image
  topic_image_output: /artifact_camera_3/image/bright
image_brighten_camera_upwards:
  <<: *image_brighten_common
  image_transport: compressed
  topic_image_input: /artifact_camera_4/image
  topic_image_output: /artifact_camera_4/image/bright
image_to_map:
  <<: *gbplanner_voxblox_configs
  # General parameters
  map_generic_sensor_frame_id: lidar
  start_query_range: 1.0
  max_query_range:
    - 8.0
    - 8.0
    - 8.0
    - 8.0
    - 25.0
    - 8.0
  # world_frame: world # MUST BE SAME from gbplanner - i.e. gbplanner param must be loaded before this file and this file should NOT set this param
  use_tf_transforms: True
  use_freespace_pointcloud: False
  #tsdf_voxels_per_side: 16 # MUST BE SAME from gbplanner - i.e. gbplanner param must be loaded before this file and this file should NOT set this param
  #tsdf_voxel_size: 0.20 # MUST BE SAME from gbplanner - i.e. gbplanner param must be loaded before this file and this file should NOT set this param
  max_ray_length_m: 50.0
  truncation_distance: 0.4 #1.0
  voxel_carving_enabled: True
  use_sparsity_compensation_factor: True
  sparsity_compensation_factor: 100.0 #10.0
  use_weight_dropoff: True
  color_mode: "colors"
  verbose: False
  use_const_weight: True
  update_mesh_every_n_sec: 100000000.0 # Must be a high number to prevent mesh publishing
  mesh_min_weight: 1e-4
  slice_level: 1.0
  method: "fast"
  publish_slices: False
  publish_pointclouds: False
  allow_clear: True
  pointcloud_queue_size: 1000
  min_time_between_msgs_sec: 0.0
  #max_block_distance_from_body: FLT_MAX
  publish_tsdf_info: False
  publish_traversable: False
  traversability_radius: 1.5
  enable_icp: False
  icp_refine_roll_pitch: False
  accumulate_icp_corrections: True
  # Camera parameters
  cam_info_url: # Each robot should overlay this parameter with custom calibration files
    - 'package://anymal_c_subt/config/calibrations/alphasense/cam3.yaml'
    - 'package://anymal_c_subt/config/calibrations/alphasense/cam4.yaml'
    - 'package://anymal_c_subt/config/calibrations/alphasense/cam5.yaml'
    - 'package://anymal_c_subt/config/calibrations/alphasense/cam6.yaml'
    - 'package://anymal_c_subt/config/calibrations/inspection_head/zoom/cam.yaml'
    - 'package://anymal_c_subt/config/calibrations/inspection_head/thermal/cam.yaml'
  cam_name:
    - cam3_sensor_frame
    - cam4_sensor_frame
    - cam5_sensor_frame
    - cam6_sensor_frame
    - inspection_payload_camera
    - inspection_payload_thermal_camera
  constant_distortion_model:
    - true
    - true
    - true
    - true
    - false
    - true
  distortion_model_topic:
  - /
  - /
  - /
  - /
  - /zoom_camera/camera_info
  - /
  distortion_model_time_queue: 4.0
  get_map_timer_period: 4
  image_color_mode:
    - bgr8
    - bgr8
    - bgr8
    - bgr8
    - bgr8
    - bgr8
  image_histeq_enable:
    - false
    - false
    - false
    - false
    - false
    - false
  image_transport: compressed
  image_in_topic:
    - /alphasense_driver_ros/cam3/dropped/debayered
    - /alphasense_driver_ros/cam4/dropped/debayered
    - /alphasense_driver_ros/cam5/dropped/debayered
    - /alphasense_driver_ros/cam6/dropped/debayered
    - /
    - /
  image_info_out_topic:
    - /artifact_camera/camera_info
    - /artifact_camera_2/camera_info
    - /artifact_camera_3/camera_info
    - /artifact_camera_4/camera_info
    - /artifact_camera_5/camera_info
    - /artifact_camera_6/camera_info
  image_out_topic:
    - /artifact_camera/image
    - /artifact_camera_2/image
    - /artifact_camera_3/image
    - /artifact_camera_4/image
    - /artifact_camera_5/image
    - /artifact_camera_6/image
  image_roi_auto_service:
    - roi_to_point
  image_roi_auto_topic: # YOLO Detection topic name
    - ''
  image_roi_manual_service: # YOLO Detection service name
    - reproject_manual
  image_roi_manual_topic: []
  image_throttle_sec:
    - 0.1
    - 0.1
    - 0.1
    - 0.1
    - 0.1
    - 0.1
  map_frame: map
  map_query_srv: /gbplanner_node/publish_map
  map_query_topic: /gbplanner_node/tsdf_map_out
  roi_auto_image_resize_fact:
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
  roi_auto_rect: # YOLO Detection done on rectified (true) or raw (false) image?
    - false
    - false
    - false
    - false
    - false
    - false
  roi_auto_use_hostname_prefix: # YOLO Detection servies and topics use a hostname prefix
    - false
  roi_manual_image_resize_fact:
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
  roi_manual_rect: # Image Clicking done on rectified (true) or raw (false) image?
    - false
    - false
    - false
    - false
    - false
    - false
  roi_manual_use_hostname_prefix: false
  target_frame: darpa
inspection_head:
  action:
    servers:
      scan:
        service: /inspection_head/scan
  clients:
    get_irregular_scan_points:
      service: /gbplanner/get_scan_points
    get_point_in_map:
      service: /image_to_map/roi_to_point
    set_spotlight_intensity:
      service: /inspection_payload/set_led_intensity
    set_zoom:
      service: /zoom_camera/set_zoom
  frames:
    world: map
    zoom_camera: inspection_payload_camera
  joints:
    irregular_scan_maneuver: true
    limit_pan_angle_deg: 135
    limit_tilt_angle_min_deg: -30.0 # top
    limit_tilt_angle_max_deg: 10.0 # bottom
    margin_goal_angle_deg: 2.0
    resolution_pan_deg: 3.0
    resolution_tilt_deg: 3.0
    rotate_constant: false
    rotate_fov: 8.0 # multiple of current FOV.
    tilt_angles_deg: [-10.0, 0.0, 10.0]
    velocity:
      pan: 0.5 # rad/s
      tilt: 0.0 # rad/s
  rate_publish_commands: 25.0
  publishers:
    gui_scan_point:
      topic: /inspection_head/scan_point
    joint_command:
      topic: /inspection_payload/command
    time_stamp_images:
      topic: /inspection_head/zoom_image_time_stamps
    time_stamp_images_annotation:
      topic: /inspection_head/zoom_image_annotation_time_stamps
    thermal_image_out:
      topic: /thermal_camera/detection_image
    thermal_bounding_box:
      topic: /thermal_camera/bounding_boxes
    thermal_zoom_camera_out:
      topic: /thermal_camera/detection_image_zoom
  scan_maneuver:
    full_scan:
      number_of_thermal_images_per_position: 3
      number_of_zoom_images_per_position: 5
    max_inspection_time_sec: 45.0 # seconds
    max_inspection_distance_threshold: 15.0 # m
    number_of_scan_points: -1 # < 0 set to max value.
    point_scan:
      number_of_thermal_images_per_position: 4
      number_of_zoom_images_per_position: 7
  servers:
    scan_point:
      service: /inspection_head/scan_point
  simulation: false
  spot_light:
    constant_on: false
    intensity: -1.0 # if > 0, intensity is fixed, if < 0, intensity is dependent on distance.
    max_distance: 15 # the intensity is max (1.0) with this distance or greater.
    min_value: 0.3 # the intensity is at least x/1.0.
  subscribers:
    irregular_scan_positions:
      topic: /gbplanner/inspection_head_scan_points
    joints_position:
      topic: /inspection_payload/joint_states
    thermal_image_raw:
      topic: /thermal_camera/raw/thermal_image
    thermal_image_color:
      topic: /thermal_camera/color/large/scale/image_raw
    thermal_image_raw_scanned:
      topic: /thermal_camera/raw/thermal_image
    thermal_image_color_scanned:
      topic: /thermal_camera/color/large/scale/image_raw
    thermal_zoom_camera:
      topic: /zoom_camera/image_raw
    zoom_camera_image:
      topic: /zoom_camera/dropped/image_raw
  thermal:
    thresholds: # if the max temperature is greater than the absolute value of if the difference in the image is greater than the difference value objects are reported if they are large enough.
      absolute_value: 30.0
      absolute_value_over_ambient: 5.0
      min_area_per_object: 0.01 # the area of an object has to be greater than this.
      max_area_per_object: 0.35
      upper_bound: 39.0
    probability_report: 1.0 # report a detected image with this probablity.
    use_zoom_camera_image: false # if thermal detect, with the corresponding zoom camera image into the CNN.
  time_thresholds:
    full_scan:
      time_at_position: 1.4 # s
      use_image_after: 0.3 # s
    point_scan:
      time_at_position: 1.8 # s
      use_image_after: 0.3 # s
  zoom:
    area_threshold_full_scan: 0.5
    fixed: false
    fixed_distance: 5.0 # m, distance to compute the fixed focal length
    fov: 4.5 # m
    max_distance: 18.0 # m
    min_distance: 4.0 # m
    no_change_threshold: 2.0 # m distance has to alter more than this, otherwise old zoom is used.
    sensor_size_horizontal: 0.0048 # m
    sensor_size_vertical: 0.0036 # m
inspection_payload_head_to_map_in_map:
  child_frame_id: inspection_payload_head
  parent_frame_id: map
  target_frame_id: map
  pose_topic: /tf/inspection_payload_head_to_map_in_map
  angles_topic: /tf/inspection_payload_head_to_map_in_map/orientation/euler_angles_rpy
  frequency: 3.0
lidar_nodelet_transform_subt:
  calibration: ""
  fixed_frame: odom
  max_range: 130.0
  min_range: 0.4
  model: VLP16
  organize_cloud: true
  target_frame: lidar
lidar_nodelet_driver_subt:
  cut_angle: 0.0
  device_ip: 192.168.1.201
  frame_id: lidar
  gps_time: false
  model: VLP16
  pcap: ""
  port: 2368
  read_fast: false
  read_once: false
  repeat_delay: 0.0
  rpm: 600.0
  time_offset: 0.0
  timestamp_first_packet: true # main difference w.r.t. ANYbotics parameters
load_anymal_description:
  custom_parameters:
    perception_head: true
    bpearl_front: false
    bpearl_rear: false
    rsl_base: false
loamCommon: &loamCommon
  loamVerbosity: 0                     #Debug Output, 0-disable, higher for more verbose output
  scanPeriod: 0.1                      #Expected scan period for input pointcloud in seconds. Used of Distortion correction
  ioRatio: 2                           #Ratio of publish rate of LaserOdometry w.r.t input PCL rate. LO is calculated for each PCL but published at slower rate to Mapping, default 2
  lidarFrame: lidar                    #LiDAR frame name - used to lookup LiDAR-to-ExternalSensor Frame
  rotateInputCloud: false              #Flag to rotate input cloud before estimating odometry/map so produced resuts are ROS frame aligned irrespective of LiDAR mounting orientation
  inputCloudRotation: [0.0, 0.0, 0.0]  #Rotation applied to input cloud - ORDER YPR(radians) #90 deg = 1.5707963268 rad
loamExternalInput: &loamExternalInput
  forceExtPriorUseMapping : false           #Flag to force use of FULL external prior instead of LaserOdometry TRANSLATION Only Estimate
  extPriorAvailable: true                   #Flag to check if 'Primary' external prior is available
  extOdomFrame: imu_link                    #External Prior odometry frame name
  extFixedFrame: odom                       #External Prior fixed frame name
  extSensorFrame: imu_link                  #External Prior sensor frame name
  extOdomTimeOffset : 0.0                   #Timeoffset between LiDAR pointcloud and external source
  fallbackExtPriorAvailable: false          #Flag to check if 'Fallback ' external prior is available
  fallbackExtOdomFrame: vio_imu             #Fallback External Prior odometry frame name
  fallbackExtFixedFrame: vio_imu_init       #Fallback External Prior fixed frame name
  fallbackExtSensorFrame: imu_sensor_frame  #Fallback External Prior sensor frame name
  fallbackExtOdomTimeOffset: -0.1           #Timeoffset between LiDAR pointcloud and Fallbackexternal source
loam_multiscan_registration_nodelet:
  <<: *loamCommon
  lidar: VLP-16-ANYbotics                 #Choose LiDAR type - options: VLP-16  HDL-32  HDL-64E  O1-16 O1-64 Bperl-32
  useCloudIntensityandRingFields : false  #Flag to use input pointcloud intensity or ring fields. Converts to custom PointXYZIR instead of PointXYZ. True for Bpearl
  imuHistorySize: 400                     #IMU Message Buffer Size , default: 200
  minRange: 0.1                           #Minimum Range of useful points, default: 0.1
  maxRange: 80.0                          #Maximum Range of useful points, default: 80.0
  featureRegions: 6                       #Number of Azimuth Regions Pointcloud is divided, default:6
  curvatureRegion: 5                      #Number of neigboring points on a scan line on each side of a point used for calculating curvature of that point, default 5
  maxCornerSharp: 2                       #Number of Sharp Features per scan line in each curvatureRegion, default:2
  maxCornerLessSharp: 20                  #Number of Less Sharp Features per scan line in each curvatureRegion, default:10*maxCornerLessSharp
  maxSurfaceFlat: 4                       #Number of FlatFeatures per scan line in each curvatureRegion, default:4
  surfaceCurvatureThreshold: 0.1          #Threshold above which feature is categorized Sharp, default 0.1
  lessFlatFilterSize: 0.2                 #Leaf Size for downsampling remaing pointcloud after feature selection, default 0.2
  checkInvalidFeatureRegions: false       # Switched off for now, enable if tuned azimuth boundaries
  publishDebugArrowsToRemovedFeatures: false
  azimuthBoundaries: [1.1,1.5,1.7,2.2]    # Regions to be tuned
loam_odometry_nodelet:
  <<: *loamCommon
  <<: *loamExternalInput
  undistortInputCloud: false               #False - If motion compensated pointcloud is available and no internal motion compensation is perfromed. True - External Prior or Motion Model will be used for LiDAR Ego Motion Compensation
  odomMinIterations: 1
  odomMaxIterations: 25                    #Number of LO optimization iterations, default 25
  odomDeltaTAbort: 0.05                    #Translation threshold for optimization convergence, deafult 0.1 (m)
  odomDeltaRAbort: 0.05                    #Rotation threshold for optimization convergence, deafult 0.1 (deg)
  odomDegenEigVal: 30                      #Minimum eignevalue threshold for determining degeneracy of LO optimization, default 30
  odomRelativeTranslationMax: 0.2          #Max translation threshold between two pointclouds for external odometry to be considered valid input. Determined w.r.t set max robot movement speed
  odomRelativeRotationMax: 0.1             #Max rotation threshold between two pointclouds from external odometry to be considered valid input. Determined w.r.t set max robot movement speed
  imuFrame: imu_link                       #Frame of IMU used in integrator - Used for lookup transform to lidarFrame
  imuRate: 400                             #Rate of IMU input (Hz) used for initialization of gravity, initial Roll/Pitch and gyro bias
  imuTimeForInit: 0.5                      #Time interval of IMU measurements used for initialization
  imuTimeOffset: 0.0 #seconds              #Offset between IMU and LiDAR Measurements - Depending on LiDAR timestamp first(+0.05) or last(-0.05)
  initGraphRollPicthFromIMU: true          #Initialize graph roll/pitch from IMU
  accNoiseDensity: 7.84e-04                 #Continuous-time "Covariance" of accelerometer
  accBiasRandomWalk: 1.0e-04               #Continuous-time "Covariance" describing accelerometer bias random walk
  gyrNoiseDensity: 3.4906585e-5               #Continuous-time "Covariance" of gyroscope measurements
  gyrBiasRandomWalk: 1.0e-04              #Continuous-time "Covariance" describing gyroscope bias random walk
  imuIntegrationCovariance: 1.0e-08        #Continuous-time "Covariance" describing integration uncertainty
  imuBiasAccOmegaInt: 1.0                  #Covariance of bias used for pre-integration
  accBiasPrior: [0.0, 0.0, 0.0]            #Prior/starting value of accelerometer bias
  gyrBiasPrior: [0.0, 0.0, 0.0]            #Prior/starting value of gyroscope bias
  smootherLag: 3.0                         #Lag of fixed lag smoother[seconds]
  additonalIterations: 3                   #Additional iterations of graph optimizer after update with new factors
  positionReLinTh: 0.05                    #Position linearization threshold
  rotationReLinTh: 0.05                    #Rotation linearization threshold
  velocityReLinTh: 0.1                     #Linear Velocity linearization threshold
  accBiasReLinTh: 0.1                      #Accelerometer bias linearization threshold
  gyrBiasReLinTh: 0.1                      #Gyroscope bias linearization threshold
  relinearizeSkip: 1
  enableRelinearization: true
  evaluateNonlinearError: false
  cacheLinearizedFactors: true
  findUnusedFactorSlots: false
  enablePartialRelinearizationCheck: true
  enableDetailedResults: false
  poseBetweenNoise: [0.5, 0.5, 0.05, 0.1, 0.1, 0.1] #Noise of add between factor -ORDER RPY(rad) - XYZ(meters)
  zeroMotionDetection: false                        #Detect and Add Zero Motion Factors(Zero delta Pose and Velocity)
  zeroMotionThreshold: 0.01                         #Zero motion threshold in meters (Currently only motion detection is translation only)
  minZeroMoitionDetections: 10                      #Minimum number of consective zero motions detected before factors are added
  gravityRollPitchFactors: false                    #Add Gravity-aligned Roll-Pitch from IMU when in Zero motion (only works if Zero-Motion Factors are added)
loam_mapping_nodelet:
  <<: *loamCommon
  <<: *loamExternalInput
  mapMaxIterations: 10                                         #Number of LM optimization iterations, default 10
  mapMinIterations: 1                                          #Minimum Number of LM optimization iterations, default 1, (set 0 to perform only first iteration at minimum)
  mapDeltaTAbort: 0.05                                         #Translation threshold for optimization convergence, deafult 0.05 (m)
  mapDeltaRAbort: 0.05                                         #Rotation threshold for optimization convergence, deafult 0.05 (deg)
  cornerFilterSize: 0.2                                        #Leaf Size for downsampling current CORNER pointcloud before merging in map, default 0.2
  surfaceFilterSize: 0.2                                       #Leaf Size for downsampling current FLAT/SURFACE pointcloud before merging in map, default 0.2
  mapVisFilterSize: 0.4                                        #Leaf Size for downsampling current visualization Map pointcloud, default 0.5
  mapCubeSize: 10.0                                            #Size of Cube/Voxel used for saving internal map (meters), default 50
  mapDimensionsInCubes: [101,21,101]                           #WxHxD of internal map in CUBE UNITS, default:[21,11,21] #Width,Height,Depth
  mapStartLocationInCubes: [50,10,50]                          #Robot start position in internal map in CUBE UNITS, default:[10,5,10] #Width,Height,Depth
  numNeighborSubmapCubes: 4                                    #Number of Neigboring cubes in +/- direction along each axis to build submap for matching
  mapDegenEigVal: 40                                           #Minimum eignevalue threshold for determining degeneracy of LM optimization, default 30
  mapPriorNormThresh: 0.4                                      #Max translation threshold between two pointclouds from external odometry to be considered valid input. Determined w.r.t set max robot movement speed
  useSavedSubmapsForInitialization: false                      #Use saved submap on disc for initialization
  submapLocalizationInitGuess: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]  #Initialization guess of robot location in submap
  forcePathPublishing: true                                    #Force ROS path message publishing for mapping odometry
  mapPublishRateDivider: 20                                    #Publishes full map at 1.0/(scanPeriod * ioRatio * mapPublishRateDivider), default: 20(0.25 Hz)
  useExtRotationAlignment: true                                #Use external fixed & map frame to detemine gravity misalignment, default: true
  submapVisCropRange: 0                                        #Range of cropping for submap visualization (set 0 to disable)
loam_maplab_integrator_nodelet:
  world_frame: darpa                                           #World(Absolute) frame
  map_frame: map                                               #Robot Map frame
  base_frame: imu                                              #Base(IMU) frame
  publishWorldtoMapTransform: false                            #Publish World-to-Map transform. Used for debugging as Absolute constraint publisher will publish this trasnform
  cloudSavePosDelta: 1.0                                       #Delta translation (meters) occured before saving cloud
  cloudSaveRotDelta: 0.2                                       #Delta rotation (radian) occured before saving cloud
  odometryFactorNoise: [0.05, 0.05, 0.05, 0.1, 0.1, 0.1]                      #Noise of Odometry factors - ORDER RPY(rad) - XYZ(m)
  absoluteFactorNoise: [1.0e-06, 1.0e-06, 1.0e-06, 1.0e-06, 1.0e-06, 1.0e-06] #Noise of Absolute factors at position 0- ORDER RPY(rad) - XYZ(m)
  submapFactorNoise: [1.0e-03, 1.0e-03, 1.0e-03, 1.0e-03, 1.0e-03, 1.0e-03]   #Noise of relative Submap factors - ORDER RPY(rad) - XYZ(m)
  anchorFactorNoise: [1.0e-05, 1.0e-05, 1.0e-05, 1.0e-05, 1.0e-05, 1.0e-05]   #Noise of anchor factors - ORDER RPY(rad) - XYZ(m)
  updateResultsInterval: 5.0                                                  #Interval(seconds) at which graph is optimized
  T_cam2imu: [-0.9999962982, -0.000530768, 0.0026686827, 0.0471397497,        #Camera-IMU transformation to convert absolute(apriltag) poses into IMU frame
              -0.0026684873, -0.0003684325, -0.9999963717, -0.0778675546,
               0.0005317493, -0.9999997913, 0.0003670147, 0.0260845632,
               0.0, 0.0, 0.0, 1.0]
  T_imu2lidar: [1, 0, 0, 0.005303,                                            #Lidar-IMU transforamtion to express graph in Wolrd-IMU coordinates
                0, 1, 0, 0.037340,
                0, 0, 1, 0.063319,
                0, 0, 0, 1]
local_guidance_modes: &local_guidance_modes
  mode_names:  # These strings are passed by the user who wants to activate a specific local guidance mode.
    - walk
    - walk_backwards
    - walk_learning
    - walk_learning_backwards
    - walk_learning_perceptive
    - walk_learning_perceptive_backwards
    - walk_learning_perceptive_stairs
    - walk_precise
    - walk_precise_learning
    - walk_precise_learning_perceptive
    - stand
  walk:
    motion_transitioner:
      goal_motion_state: walk
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: pure_pursuit_normal
    allow_path_smartification: true
  walk_backwards:
    motion_transitioner:
      goal_motion_state: walk
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: pure_pursuit_normal_backwards
    allow_path_smartification: false # this controller goes backwards, do not smartify path to avoid initial yawing to align heading
  walk_learning:
    motion_transitioner:
      goal_motion_state: walk_learning
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: pure_pursuit_deep_learning
    allow_path_smartification: true
  walk_learning_backwards:
    motion_transitioner:
      goal_motion_state: walk_learning
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: pure_pursuit_deep_learning_backwards
    allow_path_smartification: false # this controller goes backwards, do not smartify path to avoid initial yawing to align heading
  walk_learning_perceptive:
    motion_transitioner:
      goal_motion_state: walk_learning_perceptive
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: pure_pursuit_deep_learning_perceptive
    allow_path_smartification: true
  walk_learning_perceptive_backwards:
    motion_transitioner:
      goal_motion_state: walk_learning_perceptive
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: pure_pursuit_deep_learning_perceptive_backwards
    allow_path_smartification: false
  walk_learning_perceptive_stairs:
    motion_transitioner:
      goal_motion_state: stair_learning_perceptive
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: pure_pursuit_deep_learning_perceptive_stairs
    allow_path_smartification: true
  walk_precise:
    motion_transitioner:
      goal_motion_state: walk
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: pid_normal
    allow_path_smartification: false
  walk_precise_learning:
    motion_transitioner:
      goal_motion_state: walk_learning
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: pid_normal_learning
    allow_path_smartification: false
  walk_precise_learning_perceptive:
    motion_transitioner:
      goal_motion_state: walk_learning_perceptive
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: pid_normal_learning_perceptive
    allow_path_smartification: false
  stand:
    motion_transitioner:
      goal_motion_state: stand
      motion_parameters: ""
      abort_on_param_failure: false
    local_guidance_controller:
      name: nop  # No OPeration controller, needed for this case.
    allow_path_smartification: false
local_guidance_path_follower:
  spin_frequency_ros_node: 50
  robot_frame_id: base_subt
  twist_command_frame_id: base
  use_motion_transitioner: true # false if output twist should be published without requesting a new motion state
  publish_error_vector: true    # Publish error vector computed by the specific local guidance controller used.
  local_guidance_modes:
    <<: *local_guidance_modes
  local_guidance_controllers:
    general_settings: # Settings applied despite of the local_guidance_controller that will be selected.
      max_linear_acceleration: 1.0 # Used to saturate two consecutive twist commands, [m/s^2].
      max_rotational_acceleration: 1.5 # Used to saturate two consecutive twist commands [rads/s^2].
      tolerance_to_switch_desired_pose:
        translation: 0.2
        rotation: 0.15
      velocity_first_order_filter:  # G(s) = mu_0 / (1 + tau * s)
        longitudinal: # Filters the forward (longitudinal) motion.
          mu_0: 1.0
          tau: 0.1
        lateral: # Filters the lateral (not the yaw) motion.
          mu_0: 1.0
          tau: 0.1
        heading: # Filters the heading (yaw) of the robot.
          mu_0: 1.0
          tau: 0.1
    controller_names_class_names_map: # For each controller associate the corresponding local guidance controller class.
      nop: "nop"
      pid_normal: "pid"
      pid_normal_learning: "pid"
      pid_normal_learning_perceptive: "pid"
      pure_pursuit_deep_learning: "pure_pursuit"
      pure_pursuit_deep_learning_backwards: "pure_pursuit"
      pure_pursuit_deep_learning_perceptive: "pure_pursuit"
      pure_pursuit_deep_learning_perceptive_backwards: "pure_pursuit"
      pure_pursuit_deep_learning_perceptive_stairs: "pure_pursuit"
      pure_pursuit_fast: "pure_pursuit"
      pure_pursuit_normal: "pure_pursuit"
      pure_pursuit_normal_backwards: "pure_pursuit"
      pure_pursuit_normal_sideways_left: "pure_pursuit"
      pure_pursuit_normal_sideways_right: "pure_pursuit"
      pure_pursuit_perceptive_3d_static_walk: "pure_pursuit"
      pure_pursuit_perceptive_3d_trot: "pure_pursuit"
      pure_pursuit_running: "pure_pursuit"
      pure_pursuit_slow: "pure_pursuit"
  publishers:
    twist_command:
      topic: /local_guidance_path_follower/twist
      queue_size: 1
      latch: true
    controller_reference_marker:
      topic: /local_guidance_path_follower/controller_reference_marker
      queue_size: 1
      latch: true
    controller_reference_pose:
      topic: /local_guidance_path_follower/controller_reference_pose
      queue_size: 1
      latch: true
    error_vector:
      topic: /local_guidance_path_follower/error_vector
      queue_size: 1
      latch: true
  subscribers:
    updated_path:
      topic: updated_path
      queue_size: 1
  servers:
    follow_path:
      action: /local_guidance_path_follower/follow_local_path
    force_zero_twist_publishing:
      service: /local_guidance_path_follower/force_zero_twist_publishing
    reset:
      service: /local_guidance_path_follower/reset
    motion_transitioner:
      action: /motion_control_manager/go_to_motion_state
  clients:
    send_soft_emergency_stop:
      service: /motion_control_manager/emergency_stop
      persistent: false
local_guidance_path_manager:
  spin_frequency_action_control_loop: 10.0
  robot_frame_id: base_subt
  publish_received_global_path: true
  local_guidance_modes:
    <<: *local_guidance_modes
  linear_velocity_filter:
    tau: 0.75
    mu_0: 1.0
  convert_global_path_to_local:
    frame_id_local_path: odom # frame_id where local path will be published. Conversion from "map" frame to local frame is done internally in the manager.
    timestep_conversion: 0.5 # Time interval at which a new converted path in the local frame "frame_id_local_path" is published [s].
    publish_local_sub_path: true
    prune_local_sub_path: true
    pruning_method: 0 # 0 (based on currently followed segment), 1 (based on last reported followed segment)
  replan_path:
    # Frequency at which replanning state is checked [Hz].
    # Suggestion: check parameter 'min_update_rate' in 'anymal_traversability_estimation/config/anymal.yaml' to increase the update rate
    # of the traversability map.
    check_replanning_path_frequency: 5.0
    publish_checked_subpath: true # Checked sub-path is published in ROS (to be visualized in Rviz).
    footprint:
      circular_radius: 0.3 # Footprint radius used to check traversability, ADAPT this based on your robot! [m]
      polygon: [] # Footprint polygon used to check traversability. Polygon is used if it is defined, otherwise circular_radius is used. [m]
      use_conservative_footprint: false # Use conservative footprint. Only available if polygon is used.
  path_smartify:
    enabled: true
    allowed_delta_yaw_between_segments_deg: 50.0 # Allowed delta yaw [deg] between consecutive segments on the path.
    max_distance_robot_to_first_goal_m: 2.0 # If robot is farther away, path smartify adds a pose where the robot starts.
    allowed_min_distance_between_consecutive_poses: 0.1 # if two consecutive poses are closer than this threshold, then last one is removed from path unless "pass through goal" is set [m]. 0.0 to disable the function.
  servers:
    follow_global_path:
      action: /local_guidance_path_manager/follow_global_path
    follow_local_path:
      action: /local_guidance_path_follower/follow_local_path
    traversability_planner_check_footprint_path:
      service: /traversability_planner/check_footprint_path
      persistent: false
    traversability_planner_plan_path:
      action: /traversability_planner/plan_path
    traversability_planner_check_footprint_path_action:
      action: /traversability_planner/check_footprint_path_action
    activate_forced_stop_following_path:
      service: /local_guidance_path_manager/activate_forced_stop_following_path
    release_forced_stop_following_path:
      service: /local_guidance_path_manager/release_forced_stop_following_path
    set_local_guidance_mode_up_to_lookahead_pose:
      service: /local_guidance_path_manager/set_local_guidance_mode_up_to_lookahead_pose
    replan_path_up_to_lookahead_pose:
      action: /local_guidance_path_manager/replan_path_up_to_lookahead_pose
    reset:
      service: /local_guidance_path_manager/reset
    toggle_path_smartification:
      service: /local_guidance_path_manager/toggle_path_smartification
  publishers:
    local_sub_path:
      topic: local_sub_path
      queue_size: 1
      latch: false
    subpath_checked_for_traversability:
      topic: subpath_checked_for_traversability
      queue_size: 1
      latch: false
    received_global_path:
      topic: received_global_path
      queue_size: 1
      latch: true
  clients:
    force_zero_twist_publishing:
      service: /local_guidance_path_follower/force_zero_twist_publishing
      persistent: false
    get_frame_id_traversability_map:
      service: /traversability_planner/get_global_map_frame_id_at_current_level
      persistent: false
  subscribers:
    estimated_twist:
      topic: /twist_mux/twist
      queue_size: 1
localization_manager: # Default launch and params from ANYbotics software, just add needed customization.
  frame_connectors:
    feedthrough:
      enabled:                      false
    difference:
      enabled:                      true
      list:
        - "loam_connector"
        - "msf_alphasense_imu_connector"
        - "msf_body_imu_connector"
        - "rovio_connector"
      example_connector:
        input_topic:                /example/topic
        input_msg_type:             1 # 0: PoseWithCovarianceStamped, 1: Odometry
        broadcast_zero_init_tf:     true
        remap_ext_frame_id:         true
        ext_frame_id_in:            ext_frame_id_in           # Fixed TF frame created by your localization method. Pose/Odometry specified by input_topic have this frame as their fixed frame
        ext_frame_id_out:           ext_frame_id_out          # Fixed TF frame that you want to attach to "odom" frame of ANYmal, as a child frame
        tracked_frame_id_in_ext:    tracked_frame_id_in_ext   # TF frame (of ANYmal) that is tracked by Pose/Odometry specified by input_topic
        pose_in_odom_buffer_size:   0.5
      loam_connector:
        input_topic:                /loam/odometry
        input_msg_type:             1 # 0: PoseWithCovarianceStamped, 1: Odometry
        broadcast_zero_init_tf:     true
        remap_ext_frame_id:         true
        ext_frame_id_in:            camera_init_CORRECTED # LOAM uses the outdated leading slash, so we have to use it here too
        ext_frame_id_out:           map # this way there will always be a map frame as long as the localization manager is running
        tracked_frame_id_in_ext:    lidar # loam must track lidar frame (its input sensor's frame) because of internal settings for minium and maximum angles, i.e. you should not feed in a point cloud in base frame, for example.
        pose_in_odom_buffer_size:   0.5
      msf_alphasense_imu_connector:
        input_topic:                /msf_loam_alphasense_imu/msf_core/odometry
        input_msg_type:             1 # 0: PoseWithCovarianceStamped, 1: Odometry
        broadcast_zero_init_tf:     true
        remap_ext_frame_id:         true
        ext_frame_id_in:            msf_alphasense_imu_map
        ext_frame_id_out:           msf_alphasense_imu_map
        tracked_frame_id_in_ext:    imu_sensor_frame
        pose_in_odom_buffer_size:   0.5
      msf_body_imu_connector:
        input_topic:                /msf_loam_body_imu/msf_core/odometry
        input_msg_type:             1 # 0: PoseWithCovarianceStamped, 1: Odometry
        broadcast_zero_init_tf:     true
        remap_ext_frame_id:         true
        ext_frame_id_in:            msf_body_imu_map
        ext_frame_id_out:           msf_body_imu_map
        tracked_frame_id_in_ext:    imu_link
        pose_in_odom_buffer_size:   0.5
      rovio_connector:
        input_topic:                /rovio/odometry
        input_msg_type:             1 # 0: PoseWithCovarianceStamped, 1: Odometry
        broadcast_zero_init_tf:     true
        remap_ext_frame_id:         true
        ext_frame_id_in:            vio_map
        ext_frame_id_out:           vio_map
        tracked_frame_id_in_ext:    imu_sensor_frame
        pose_in_odom_buffer_size:   0.5
mission_manager:
  inspection:
    watchdog:
      timer: 180 # [s]
  frequency: 2 # [Hz]
  follow_path_failure:                    # behaviortree failure keys that are sent with setAborted()
    wifi: "wifi loss"
    traversability: "traversability stop"
  frames:
    robot_frame: base_subt
    world_frame: map
  global_planner:
    control_mode: walk_learning_perceptive           # Path follower mode that is used if local planner is disabled
    stand_mode: walk_learning_perceptive             # Path follower mode that is used if local planner is disabled
  go_to_waypoint_completed_threshold: 1.0            # Calculated distance by local guidance to consider go to waypoint as completed
  local_guidance_recovery_homing_mode: walk_precise_learning_perceptive
  local_planner:
    enabled: true                                     # (Default parameter) Send the goal of global planner to the local planner
    control_mode: walk_precise_learning_perceptive    # Path follower mode that is used if local planner is enabled
    stand_mode: walk_precise_learning_perceptive      # Path follower mode that is used if local planner is enabled
  max_local_planner_failures: 2.0                     # [s]
  max_edge_length: 1.0                                # Maximum edge length for paths that are created by global planner. Otherwise poses are added by interpolation
  watch_dog:
    timer: 60
    min_position_change: 0.2
    min_position_change_time: 1.0
    max_global_planner_failures: 15
  actions:
    mission_manager_in_follow_path:
      topic: /mission_manager/follow_path
    mission_manager_out_follow_path:
      topic: /mission_manager/safe_locomtion_follow_path
    inspection:
      topic: /inspection_head/scan
  clients:
    gbplanner_automatic_planning:
      service: /planner_control_interface/std_srvs/automatic_planning
    gbplanner_automatic_scan:
      service: /gbplanner/automatic_scan
    gbplanner_stop_planning:
      service: /planner_control_interface/std_srvs/stop
    gbplanner_trigger_homing:
      service: /planner_control_interface/std_srvs/homing_trigger
    gbplanner_go_to_waypoint:
      service: /planner_control_interface/std_srvs/go_to_waypoint
    gbplanner_set_local_guidance_control_mode:
      service: /gbplanner_pci_anymal_ros_node/set_control_mode_string
    gbplanner_set_local_guidance_stand_mode:
      service: /gbplanner_pci_anymal_ros_node/set_stand_mode_string
    gbplanner_enable_untraversable_polygon_subscriber:
      service: /gbplanner/enable_untraversable_polygon_subscriber
    gbplanner_clear_untraversable_zones:
      service: /gbplanner/clear_untraversable_zones
    path_logger_get_subt_path:
      service: /path_logger/get_sub_path
    path_logger_enable:
      service: /path_logger/enable_path_recording
  parameter_server_keys:
    e_stop: /darpa_locomotion_mission_bt/checks/check_estop_released
    safe_locomotion: /darpa_locomotion_mission_bt/checks/check_safe_locomotion_on
    local_planner: /darpa_locomotion_mission_bt/send_goal_to_local_planner
    wifi_safety: /darpa_locomotion_mission_bt/checks/explore_without_wifi
    traversability_safety: /darpa_locomotion_mission_bt/checks/check_traversability_on
    automatic_scan: /darpa_locomotion_mission_bt/checks/check_automatic_scan
  publishers:
    active_client:
      topic: /mission_manager/active_client
    homing_timer:
      topic: /mission_manager/homing_timer
    status:
      topic: /mission_manager/status
    status_report:
      topic: /mission_manager/status_report
  subscribers:
    behaviortree_ready:
      topic: /darpa_locomotion_mission_bt/ready_for_new_goals
    estop_released:
      topic: /motion_control_manager/notify_controller_manager_state
    gbplanner_status:
      topic: /gbplanner_status
  servers:
    automatic_planning:
      service: /mission_manager/automatic_planning
    automatic_scan:
      service: /mission_manager/automatic_scan
    stop_planning:
      service: /mission_manager/stop_planning
    homing:
      service: /mission_manager/trigger_homing
    set_homing_timer:
      service: /mission_manager/set_homing_timer
    cancel_all_goals:
      service: /mission_manager/cancel_all_goals
    safe_locomotion:
      service: /mission_manager/enable_safe_locomotion
    local_planner:
      service: /mission_manager/enable_local_planner
    wifi_safety:
      service: /mission_manager/enable_wifi_safety
    traversability_safety:
      service: /mission_manager/enable_traversability_safety
    wifi_failure_information:
      service: /mission_manager/wifi_failure_information
    go_to_waypoint:
      service: /mission_manager/go_to_waypoint
    go_to_waypoint_and_explore:
      service: /mission_manager/go_to_waypoint_and_explore
    recovery_homing:
      service: /mission_manager/recovery_homing
    trigger_user_inspection:
      service: /mission_manager/trigger_user_inspection
    trigger_user_point_inspection:
      service: /mission_manager/trigger_user_point_inspection
    trigger_gbplanner_inspection:
      service: /mission_manager/trigger_gbplanner_inspection
monitor_bluetooth_sensor:
  display_topic: overlay_text
  status_topic: /bluetooth_reader/detections
  queue_size: 3
monitor_gas_sensor:
  display_topic: overlay_text
  uint16_topic: /co2_sensor_reading/co2_concentration
  queue_size: 3
monitor_submap_difference:
  display_topic: overlay_text
  status_topic: /transfolder_difference_publisher/robot_submap_difference
  queue_size: 1
motion_control_manager:
  motion_transitioner:
    motion_states:
      sit_down:
        direct_transit_state: ""
    transitions:
      sit_down:
        connections:
          square_up: 1.0
        motion:
          motion_controller: free_gait
          operation_mode: sit_down
          reference_type: action
        preempt_state: _preempted
        target_state: sit_down
      sit_up:
        connections:
          sit_down: 1.0
        motion:
          motion_controller: free_gait
          operation_mode: sit_up
          reference_type: action
        preempt_state: _preempted
        target_state: square_up
multi_topics_common: &multi_topics_common
  prefixes: ["/anymal_1", "/anymal_2", "/anymal_3", "/anymal_4", "/anymal_5"]
multi_topics_demux:
  <<: *multi_topics_common
  broadcast_topic: ["/yolo_ack",
                    "/graph_monitor/sparse_graph/graph",
                    "/graph_monitor/submaps",
                    "/graph_monitor/sparse_graph/trajectory"] # same as nimbro_missionctrl_anymal_sender
  unprefixed_topic: ["/nimbro_missionctrl_anymal_action_follow/remote/goal",
                     "/nimbro_missionctrl_anymal_action_follow/remote/cancel",
                     "/global_planner/waypoint_request",
                     "/inspection_head/scan_point"] # same as nimbro_missionctrl_anymal_sender
multi_topics_mux:
  <<: *multi_topics_common
  extra_nimbro_unprefixed_topics: ["/darpa_locomotion_mission_bt/homing_timer/proxy"]
  substrings_in_topic_to_skip: ["remote/goal",
                                "bayesian_artifact_filter/filtered_artifact",
                                "incremental_map_update/point_cloud/draco",
                                "incremental_map_update/point_cloud",
                                "transfolder/file_transfer",
                                "yolo_ack",
                                "global_planner/waypoint_request"]
multi_topics_relay_filtered_artifact:
  <<: *multi_topics_common
  unprefixed_topic: "bayesian_artifact_filter/filtered_artifact"
  msg_pkg: "bayesian_artifact_filter_msgs.msg"
  msg_type: "filtered_art"
  topic_out: "/bayesian_artifact_filter/filtered_artifact"
multi_topics_relay_submap_counter:
  <<: *multi_topics_common
  unprefixed_topic: "submap_counter"
  msg_pkg: "diagnostic_msgs.msg"
  msg_type: "KeyValue"
  topic_out: "/submap_counter"
network_address_anymal: &network_address_anymal
  destination_addr: anymal-c-subt # overlay with settings specific robot
  server: anymal-c-subt # used for services - overlay with settings specific robot
network_address_anymal_dx2_onboard: &network_address_anymal_dx2_onboard
  destination_addr: anymal-c-subt # overlay with settings specific robot
network_address_anymal_jetson: &network_address_anymal_jetson
  destination_addr: anymal-c-subt # overlay with settings specific robot
network_address_anymal_lpc: &network_address_anymal_lpc
  destination_addr: anymal-c-subt # overlay with settings specific robot
network_address_anymal_npc: &network_address_anymal_npc
  destination_addr: anymal-c-subt # overlay with settings specific robot
network_address_anymal_apc: &network_address_anymal_apc
  destination_addr: anymal-c-subt  # overlay with settings specific robot
network_address_base_router: &network_address_base_router
  destination_addr: 192.168.0.1
network_address_dx2_alpha: &network_address_dx2_alpha
  destination_addr: dx2-alpha
network_address_dx2_beta: &network_address_dx2_beta
  destination_addr: dx2-beta
network_address_dx2_gamma: &network_address_dx2_gamma
  destination_addr: dx2-gamma
network_address_dx2_delta: &network_address_dx2_delta
  destination_addr: dx2-delta
network_address_dx2_epsilon: &network_address_dx2_epsilon
  destination_addr: dx2-epsilon
network_address_dx2_zeta: &network_address_dx2_zeta
  destination_addr: dx2-zeta
network_address_dx2_eta: &network_address_dx2_eta
  destination_addr: dx2-eta
network_address_dx2_theta: &network_address_dx2_theta
  destination_addr: dx2-theta
network_address_es1_base_station: &network_address_es1_base_station
  destination_addr: 192.168.0.3
network_address_mission_control: &network_address_mission_control
  destination_addr: anymal-subt-mission-control # used for topics
  server: anymal-subt-mission-control # used for services
nimbro_missionctrl_robot_transfolder_tcp_services_ports: &nimbro_missionctrl_robot_transfolder_tcp_services_ports # DO NOT move this definition
  port:             17001 # Do NOT change this port number, it MUST be 17001
  # Other settings loaded by specific nodes
nimbro_anymal_missionctrl_action_follow:
  type: darpa_subt_anymal_msgs/AnymalFollowPathDarpaSubT
  input: local
  output: remote
nimbro_anymal_missionctrl_sender:
  <<: *network_address_mission_control
  # Other settings loaded by specific nodes
nimbro_anymal_missionctrl_sender_simulation:
  <<: *network_address_mission_control
  udp_topics:
    - name: "/clock"
nimbro_missionctrl_anymal_action_follow:
  type: darpa_subt_anymal_msgs/AnymalFollowPathDarpaSubT
  input: remote
  output: local
nimbro_missionctrl_anymal_tcp_client:
  <<: *network_address_anymal
nimbro_missionctrl_anymal_sender:
  <<: *network_address_anymal
  # Other settings loaded by specific nodes
nimbro_missionctrl_robot_transfolder_tcp_server:
  <<: *nimbro_missionctrl_robot_transfolder_tcp_services_ports
nimbro_missionctrl_anymal_1_tcp_client:
  <<: *network_address_anymal
  service_prefix: /anymal_1
nimbro_missionctrl_anymal_1_receiver:
  topic_prefix: /anymal_1
nimbro_missionctrl_anymal_1_sender:
  topic_prefix: /anymal_1
nimbro_missionctrl_anymal_2_tcp_client:
  <<: *network_address_anymal
  service_prefix: /anymal_2
nimbro_missionctrl_anymal_2_receiver:
  topic_prefix: /anymal_2
nimbro_missionctrl_anymal_2_sender:
  topic_prefix: /anymal_2
nimbro_missionctrl_anymal_3_tcp_client:
  <<: *network_address_anymal
  service_prefix: /anymal_3
nimbro_missionctrl_anymal_3_receiver:
  topic_prefix: /anymal_3
nimbro_missionctrl_anymal_3_sender:
  topic_prefix: /anymal_3
nimbro_missionctrl_anymal_4_tcp_client:
  <<: *network_address_anymal
  service_prefix: /anymal_4
nimbro_missionctrl_anymal_4_receiver:
  topic_prefix: /anymal_4
nimbro_missionctrl_anymal_4_sender:
  topic_prefix: /anymal_4
nimbro_missionctrl_anymal_5_tcp_client:
  <<: *network_address_anymal
  service_prefix: /anymal_5
nimbro_missionctrl_anymal_5_receiver:
  topic_prefix: /anymal_5
nimbro_missionctrl_anymal_5_sender:
  topic_prefix: /anymal_5
nimbro_robot_transfolder_missionctrl_tcp_client:
  <<: *network_address_mission_control
  <<: *nimbro_missionctrl_robot_transfolder_tcp_services_ports
on_demand_elevation_map:
  subscribers:
    input:
      topic: /elevation_mapping/elevation_map_visualizable
      queue_size: 1
  publishers:
    output:
      topic: /on_demand_elevation_map/map
      queue_size: 1
      latch: false
  servers:
    publish_next_incoming_message:
      service: publish_next_incoming_message
on_demand_lidar1:
  subscribers:
    input:
      topic: /point_cloud_filter/lidar/point_cloud_filtered
      queue_size: 1
  publishers:
    output:
      topic: /on_demand_lidar1/point_cloud
      queue_size: 1
      latch: false
  servers:
    publish_next_incoming_message:
      service: publish_next_incoming_message
on_demand_lidar2:
  subscribers:
    input:
      topic: /robot_self_filter/bpearl_rear/point_cloud
      queue_size: 1
  publishers:
    output:
      topic: /on_demand_lidar2/point_cloud
      queue_size: 1
      latch: false
  servers:
    publish_next_incoming_message:
      service: publish_next_incoming_message
on_demand_loam_full_path:
  subscribers:
    input:
      topic: /loam/full_path
      queue_size: 1
  publishers:
    output:
      topic: /on_demand_loam/full_path
      queue_size: 1
      latch: false
  servers:
    publish_next_incoming_message:
      service: publish_next_incoming_message
on_demand_loam_full_path_optimized:
  subscribers:
    input:
      topic: /loam/full_path_optimized
      queue_size: 1
  publishers:
    output: # Publish on the same topic as on_demand_loam_full_path, so on mission control the same topic can be visualized
      topic: /on_demand_loam/full_path
      queue_size: 1
      latch: false
  servers:
    publish_next_incoming_message:
      service: publish_next_incoming_message
on_demand_loam_map:
  subscribers:
    input:
      topic: /loam/map
      queue_size: 1
  publishers:
    output:
      topic: /on_demand_loam/map
      queue_size: 1
      latch: false
  servers:
    publish_next_incoming_message:
      service: publish_next_incoming_message
on_demand_loam_submap:
  subscribers:
    input:
      topic: /loam/submap
      queue_size: 1
  publishers:
    output:
      topic: /on_demand_loam/submap
      queue_size: 1
      latch: false
  servers:
    publish_next_incoming_message:
      service: publish_next_incoming_message
on_demand_loam_map_optimized:
  subscribers:
    input:
      topic: /loam/map_optimized
      queue_size: 1
  publishers:
    output: # Publish on the same topic as on_demand_loam_map, so on mission control the same topic can be visualized
      topic: /on_demand_loam/map
      queue_size: 1
      latch: false
  servers:
    publish_next_incoming_message:
      service: publish_next_incoming_message
holder_maplab_map:
  subscribers:
    input:
      topic: /reporting/map
      queue_size: 1
  publishers:
    output:
      topic: /holder/maplab/map
      queue_size: 1
      latch: false
  servers:
    publish_last_received_message:
      service: publish_last_received_message
holder_anymal_1_pinger_markers:
  subscribers:
    input:
      topic: /anymal_1/ping_monitor_anymal/markers
      queue_size: 1
  publishers:
    output:
      topic: /ping_monitor_anymal/markers
      queue_size: 1
      latch: false
  servers:
    publish_last_received_message:
      service: /anymal_1/holder_anymal_pinger_markers/publish_last_received_message
holder_anymal_2_pinger_markers:
  subscribers:
    input:
      topic: /anymal_2/ping_monitor_anymal/markers
      queue_size: 1
  publishers:
    output:
      topic: /ping_monitor_anymal/markers
      queue_size: 1
      latch: false
  servers:
    publish_last_received_message:
      service: /anymal_2/holder_anymal_pinger_markers/publish_last_received_message
holder_anymal_3_pinger_markers:
  subscribers:
    input:
      topic: /anymal_3/ping_monitor_anymal/markers
      queue_size: 1
  publishers:
    output:
      topic: /ping_monitor_anymal/markers
      queue_size: 1
      latch: false
  servers:
    publish_last_received_message:
      service: /anymal_3/holder_anymal_pinger_markers/publish_last_received_message
holder_anymal_4_pinger_markers:
  subscribers:
    input:
      topic: /anymal_4/ping_monitor_anymal/markers
      queue_size: 1
  publishers:
    output:
      topic: /ping_monitor_anymal/markers
      queue_size: 1
      latch: false
  servers:
    publish_last_received_message:
      service: /anymal_4/holder_anymal_pinger_markers/publish_last_received_message
holder_anymal_5_pinger_markers:
  subscribers:
    input:
      topic: /anymal_5/ping_monitor_anymal/markers
      queue_size: 1
  publishers:
    output:
      topic: /ping_monitor_anymal/markers
      queue_size: 1
      latch: false
  servers:
    publish_last_received_message:
      service: /anymal_5/holder_anymal_pinger_markers/publish_last_received_message
path_creator:
  colors:
    names:
      - red
      - blue
      - blue_light
      - blue_beauty
      - blue_dark
      - green
      - green_light
      - green_dark
      - purple
      - orange
      - yellow
      - yellow_light
      - yellow_dark
      - brown
      - pink
      - pink_light
      - pink_dark
      - black
      - black_light
      - black_dark
    definitions:
      red:
        r: 0.8941
        g: 0.1020
        b: 0.1098
        a: 1.0
      blue:
        r: 0.0
        g: 0.0274
        b: 0.8
        a: 1.0
      blue_light:
        r: 0.29411
        g: 0.3176
        b: 1.0
        a: 1.0
      blue_dark:
        r: 0.3098
        g: 0.3333
        b: 0.4980
        a: 1.0
      blue_beauty:
        r: 0.6784
        g: 0.8470
        b: 0.9019
        a: 1.0
      green:
        r: 0.0
        g: 0.8
        b: 0.0039
        a: 1.0
      green_light:
        r: 0.6235
        g: 1.0
        b: 0.4509
        a: 1.0
      green_dark:
        r: 0.3098
        g: 0.4980
        b: 0.3098
        a: 1.0
      purple:
        r: 0.5961
        g: 0.3059
        b: 0.6392
        a: 1.0
      orange:
        r: 1.0000
        g: 0.4980
        b: 0.0
        a: 1.0
      yellow:
        r: 0.8
        g: 0.7254
        b: 0.0941
        a: 1.0
      yellow_light:
        r: 1.0
        g: 0.9882
        b: 0.0
        a: 1.0
      yellow_dark:
        r: 0.4980
        g: 0.4980
        b: 0.2666
        a: 1.0
      brown:
        r: 0.6510
        g: 0.3373
        b: 0.1569
        a: 1.0
      pink:
        r: 1.0
        g: 0.2352
        b: 0.9254
        a: 1.0
      pink_light:
        r: 1.0
        g: 0.6392
        b: 0.9294
        a: 1.0
      pink_dark:
        r: 0.4980
        g: 0.0
        b: 0.4509
        a: 1.0
      black:
        r: 0.349
        g: 0.349
        b: 0.349
        a: 1.0
      black_light:
        r: 0.8
        g: 0.8
        b: 0.8
        a: 1.0
      black_dark:
        r: 0.0
        g: 0.0
        b: 0.0
        a: 1.0
  local_guidance_modes: # the Local Guidance Modes available for each node
    #NOTE: The last node will have the last mode by default!
    #      New nodes will have the first mode by default!
    names:
      - "default"
      - "walk_learning"
      - "walk_learning_perceptive"
      - "walk_learning_perceptive_backwards"
      - "walk_learning_perceptive_stairs"
      - "walk_learning_backwards"
      - "walk"
      - "walk_backwards"
      - "walk_precise"
      - "walk_precise_learning"
      - "walk_precise_learning_perceptive"
      - "stand"
      - "default"
    modes:
      default:
        color: "blue_beauty"
        mesh:
          file: "N/A"
          scale: 1.0
      walk:
        color: "green_light"
        mesh:
          file: "N/A"
          scale: 1.0
      walk_backwards:
        color: "green_dark"
        mesh:
          file: "N/A"
          scale: 1.0
      walk_learning:
        color: "yellow"
        mesh:
          file: "N/A"
          scale: 1.0
      walk_learning_backwards:
        color: "yellow_dark"
        mesh:
          file: "N/A"
          scale: 1.0
      walk_precise:
        color: "yellow_light"
        mesh:
          file: "N/A"
          scale: 1.0
      walk_learning_perceptive:
        color: "pink_light"
        mesh:
          file: "N/A"
          scale: 1.0
      walk_learning_perceptive_backwards:
        color: "black"
        mesh:
          file: "N/A"
          scale: 1.0
      walk_learning_perceptive_stairs:
        color: "orange"
        mesh:
          file: "N/A"
          scale: 1.0
      walk_precise_learning:
        color: "pink_light"
        mesh:
          file: "N/A"
          scale: 1.0
      stand:
        color: "red"
        mesh:
          file: "N/A"
          scale: 1.0
      walk_precise_learning_perceptive:
        color: "pink"
        mesh:
          file: "N/A"
          scale: 1.0
  worker_name: "path_creator"
  time_step: 0.5
  robot_frame_id: base_subt
  snap_to_map:
    elevation_layer_name: "elevation" #[-] name of the grid map layer to be used in 'snap to map' feature
    height_addition_from_elevation: 0.5 #[m] amount of space to add between elevation value and marker's position.
  servers:
    add_initial_node_pair: # add an initial node pair.
      service: "add_initial_node_pair"
    add_node: # add a node to the path.
      service: "add_node"
    add_num_nodes: # insert a number of nodes to the path.
      service: "add_num_nodes"
    auto_orient_nodes: # auto-orient the nodes, to face the next node in the path.
      service: "auto_orient_nodes"
    export_to_file: # export the path to a .txt file.
      service: "export_to_file"
    get_node_pose: # get the pose of a node.
      service: "get_node_pose"
    get_local_guidance_mode_to_color_map: # get a map, that assigns colors to Local Guidance Modes.
      service: "get_local_guidance_mode_to_color_map"
    load_from_file: # load a path from a .txt file.
      service: "load_from_file"
    remove_all_nodes: # remove the whole path.
      service: "remove_all_nodes"
    remove_node: # remove a single node in the path.
      service: "remove_node"
    reset_snap_to_map: # reset node heights to match the robot's height.
      service: "reset_snap_to_map"
    set_global_mode: # set a Local Guidance Mode for all nodes.
      service: "set_global_mode"
    set_new_path: # export the path to the Local Guidance interface.
      service: "set_new_path"
    snap_to_map: # adjust node heights to match an elevation map's height.
      service: "snap_to_map"
    toggle_marker_process_feedback: # toggle between 'single' and 'multiple' marker feedback.
      service: "toggle_marker_process_feedback"
    revert_last_change: # revert to the previous path configuration.
      service: "revert_last_change"
    get_path_from_trav_planner: # gets a global traversable path from the traversability planner.
      service: "get_path_from_trav_planner"
    increase_scale_all_markers: # Increase all marker's scale by factor 0.1 (i.e., scale += 0.1).
      service: "increase_scale_all_markers"
    decrease_scale_all_markers: # Decrease all marker's scale by factor 0.1 (i.e., scale -= 0.1).
      service: "decrease_scale_all_markers"
    reset_scale_all_markers: # Reset all marker's scale.
      service: "reset_scale_all_markers"
  clients:
    get_elevation_map:
      service: "/traversability_planner_on_known_map/get_submap"
      persistent: false
    get_trav_planner_frame_id:
      service: "/traversability_planner_on_known_map/get_global_map_frame_id_at_current_level"
      persistent: false
  action_clients:
    traversability_planner:
      action: /traversability_planner_on_known_map/plan_path
      spin_thread: false
  publishers:
    edges:
      topic: "edges"
      queue_size: 10
      latch: true
path_logger:
  frames:
    robot_frame: base_subt
    world_frame: map
  frequency: 2 # [Hz]
  buffer_pose_delta:              0.4   # [m] min linear difference to add a pose to buffer
  buffer_pose_orientation_delta:  0.15   # [rad] min orientation difference to add a pose to buffer
  path_buffer_size:               5000  # [number of Poses] Size of the buffer for the entire optimized path
  reverse_path_buffer_size:       20    # [number of Poses] Size of the buffer of the reverse unoptimized path
  actions:
    send_path_to_state_machine:
      topic: /darpa_locomotion_mission_bt/follow_path
  servers:
    get_sub_path:
      service: get_sub_path
    enable_path_recording:
      service: enable_path_recording
    send_path_via_action_server:
      service: send_path_via_action_server
pinger_common_settings: &pinger_common_settings
  ping_rate: 1
  ping_timeout: 3
  negative_ping_if_timeout: true
  ping_packets: 1
pinger_anymal_to_baserouter:
  <<: *network_address_base_router
  <<: *pinger_common_settings
  ping_topic: /pinger_anymal_to_baserouter/ping
pinger_anymal_to_dx2_alpha:
  <<: *network_address_dx2_alpha
  <<: *pinger_common_settings
  ping_topic: /pinger_anymal_to_dx2_alpha/ping
pinger_anymal_to_dx2_beta:
  <<: *network_address_dx2_beta
  <<: *pinger_common_settings
  ping_topic: /pinger_anymal_to_dx2_beta/ping
pinger_anymal_to_dx2_gamma:
  <<: *network_address_dx2_gamma
  <<: *pinger_common_settings
  ping_topic: /pinger_anymal_to_dx2_gamma/ping
pinger_anymal_to_dx2_delta:
  <<: *network_address_dx2_delta
  <<: *pinger_common_settings
  ping_topic: /pinger_anymal_to_dx2_delta/ping
pinger_anymal_to_dx2_epsilon:
  <<: *network_address_dx2_epsilon
  <<: *pinger_common_settings
  ping_topic: /pinger_anymal_to_dx2_epsilon/ping
pinger_anymal_to_dx2_zeta:
  <<: *network_address_dx2_zeta
  <<: *pinger_common_settings
  ping_topic: /pinger_anymal_to_dx2_zeta/ping
pinger_anymal_to_dx2_eta:
  <<: *network_address_dx2_eta
  <<: *pinger_common_settings
  ping_topic: /pinger_anymal_to_dx2_eta/ping
pinger_anymal_to_dx2_theta:
  <<: *network_address_dx2_theta
  <<: *pinger_common_settings
  ping_topic: /pinger_anymal_to_dx2_theta/ping
pinger_apc_to_lpc:
  <<: *network_address_anymal_lpc
  <<: *pinger_common_settings
  ping_topic: /pinger_apc_to_lpc/ping
pinger_apc_to_npc:
  <<: *network_address_anymal_npc
  <<: *pinger_common_settings
  ping_topic: /pinger_apc_to_npc/ping
pinger_apc_to_jetson:
  <<: *network_address_anymal_jetson
  <<: *pinger_common_settings
  ping_topic: /pinger_apc_to_jetson/ping
pinger_jetson_to_apc:
  <<: *network_address_anymal_apc
  <<: *pinger_common_settings
  ping_topic: /pinger_jetson_to_apc/ping
pinger_jetson_to_lpc:
  <<: *network_address_anymal_lpc
  <<: *pinger_common_settings
  ping_topic: /pinger_jetson_to_lpc/ping
pinger_jetson_to_npc:
  <<: *network_address_anymal_npc
  <<: *pinger_common_settings
  ping_topic: /pinger_jetson_to_npc/ping
pinger_lpc_to_dx2_onboard:
  <<: *network_address_anymal_dx2_onboard
  <<: *pinger_common_settings
  ping_topic: /pinger_lpc_to_dx2_onboard/ping
pinger_lpc_to_apc:
  <<: *network_address_anymal_apc
  <<: *pinger_common_settings
  ping_topic: /pinger_lpc_to_apc/ping
pinger_lpc_to_jetson:
  <<: *network_address_anymal_jetson
  <<: *pinger_common_settings
  ping_topic: /pinger_lpc_to_jetson/ping
pinger_lpc_to_npc:
  <<: *network_address_anymal_npc
  <<: *pinger_common_settings
  ping_topic: /pinger_lpc_to_npc/ping
pinger_missionctrl_to_anymal:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_anymal/ping
pinger_missionctrl_to_anymal_1:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /anymal_1/pinger_missionctrl_to_anymal/ping
pinger_missionctrl_to_anymal_1_dx2_onboard:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /anymal_1/pinger_missionctrl_to_dx2_onboard/ping
pinger_missionctrl_to_anymal_2:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /anymal_2/pinger_missionctrl_to_anymal/ping
pinger_missionctrl_to_anymal_2_dx2_onboard:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /anymal_2/pinger_missionctrl_to_dx2_onboard/ping
pinger_missionctrl_to_anymal_3:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /anymal_3/pinger_missionctrl_to_anymal/ping
pinger_missionctrl_to_anymal_3_dx2_onboard:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /anymal_3/pinger_missionctrl_to_dx2_onboard/ping
pinger_missionctrl_to_anymal_4:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /anymal_4/pinger_missionctrl_to_anymal/ping
pinger_missionctrl_to_anymal_4_dx2_onboard:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /anymal_4/pinger_missionctrl_to_dx2_onboard/ping
pinger_missionctrl_to_anymal_5:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /anymal_5/pinger_missionctrl_to_anymal/ping
pinger_missionctrl_to_anymal_5_dx2_onboard:
  <<: *network_address_anymal
  <<: *pinger_common_settings
  ping_topic: /anymal_5/pinger_missionctrl_to_dx2_onboard/ping
pinger_missionctrl_to_baserouter:
  <<: *network_address_base_router
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_baserouter/ping
pinger_missionctrl_to_dx2_alpha:
  <<: *network_address_dx2_alpha
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_dx2_alpha/ping
pinger_missionctrl_to_dx2_beta:
  <<: *network_address_dx2_beta
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_dx2_beta/ping
pinger_missionctrl_to_dx2_gamma:
  <<: *network_address_dx2_gamma
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_dx2_gamma/ping
pinger_missionctrl_to_dx2_delta:
  <<: *network_address_dx2_delta
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_dx2_delta/ping
pinger_missionctrl_to_dx2_epsilon:
  <<: *network_address_dx2_epsilon
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_dx2_epsilon/ping
pinger_missionctrl_to_dx2_zeta:
  <<: *network_address_dx2_zeta
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_dx2_zeta/ping
pinger_missionctrl_to_dx2_eta:
  <<: *network_address_dx2_eta
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_dx2_eta/ping
pinger_missionctrl_to_dx2_theta:
  <<: *network_address_dx2_theta
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_dx2_theta/ping
pinger_missionctrl_to_es1_base_station:
  <<: *network_address_es1_base_station
  <<: *pinger_common_settings
  ping_topic: /pinger_missionctrl_to_es1_base_station/ping
pinger_npc_to_apc:
  <<: *network_address_anymal_apc
  <<: *pinger_common_settings
  ping_topic: /pinger_npc_to_apc/ping
pinger_npc_to_jetson:
  <<: *network_address_anymal_jetson
  <<: *pinger_common_settings
  ping_topic: /pinger_npc_to_jetson/ping
pinger_npc_to_lpc:
  <<: *network_address_anymal_lpc
  <<: *pinger_common_settings
  ping_topic: /pinger_npc_to_lpc/ping
ping_monitor_common: &ping_monitor_common
  display_topic: overlay_text
  inertial_frame: map
  marker_size: 2.0
  marker_topic: markers
  text_size: 0.5
  update_rate: 1.0
ping_monitor_anymal:
  <<: *ping_monitor_common
  pingers: # pingers must be replicated here because params in list (entities with '-' in yaml file) cannot be overlayed
    - mark_initial_ping: false
      topic: /pinger_anymal_to_baserouter/ping
      tracked_frame: base_subt
    - mark_initial_ping: true
      topic: /pinger_anymal_to_dx2_alpha/ping
      tracked_frame: dx2-alpha
    - mark_initial_ping: true
      topic: /pinger_anymal_to_dx2_beta/ping
      tracked_frame: dx2-beta
    - mark_initial_ping: true
      topic: /pinger_anymal_to_dx2_gamma/ping
      tracked_frame: dx2-gamma
    - mark_initial_ping: true
      topic: /pinger_anymal_to_dx2_delta/ping
      tracked_frame: dx2-delta
    - mark_initial_ping: true
      topic: /pinger_anymal_to_dx2_epsilon/ping
      tracked_frame: dx2-epsilon
    - mark_initial_ping: true
      topic: /pinger_anymal_to_dx2_zeta/ping
      tracked_frame: dx2-zeta
    - mark_initial_ping: true
      topic: /pinger_anymal_to_dx2_eta/ping
      tracked_frame: dx2-eta
    - mark_initial_ping: true
      topic: /pinger_anymal_to_dx2_theta/ping
      tracked_frame: dx2-theta
ping_monitor_mission_control:
  <<: *ping_monitor_common
  pingers:
    - mark_initial_ping: false
      topic: /pinger_missionctrl_to_anymal/ping
      tracked_frame: base_subt
ping_monitor_mission_control_center:
  <<: *ping_monitor_common
  pingers:
    - mark_initial_ping: false
      topic: /anymal_1/pinger_missionctrl_to_anymal/ping
      tracked_frame: base_subt
    - mark_initial_ping: false
      topic: /anymal_2/pinger_missionctrl_to_anymal/ping
      tracked_frame: base_subt
    - mark_initial_ping: false
      topic: /anymal_3/pinger_missionctrl_to_anymal/ping
      tracked_frame: base_subt
    - mark_initial_ping: false
      topic: /anymal_4/pinger_missionctrl_to_anymal/ping
      tracked_frame: base_subt
    - mark_initial_ping: false
      topic: /anymal_5/pinger_missionctrl_to_anymal/ping
      tracked_frame: base_subt
    - mark_initial_ping: false
      topic: /pinger_missionctrl_to_dx2_alpha/ping
      tracked_frame: dx2-alpha
    - mark_initial_ping: false
      topic: /pinger_missionctrl_to_dx2_beta/ping
      tracked_frame: dx2-beta
    - mark_initial_ping: false
      topic: /pinger_missionctrl_to_dx2_gamma/ping
      tracked_frame: dx2-gamma
    - mark_initial_ping: false
      topic: /pinger_missionctrl_to_dx2_delta/ping
      tracked_frame: dx2-delta
    - mark_initial_ping: false
      topic: /pinger_missionctrl_to_dx2_epsilon/ping
      tracked_frame: dx2-epsilon
    - mark_initial_ping: false
      topic: /pinger_missionctrl_to_dx2_zeta/ping
      tracked_frame: dx2-zeta
    - mark_initial_ping: false
      topic: /pinger_missionctrl_to_dx2_eta/ping
      tracked_frame: dx2-eta
    - mark_initial_ping: false
      topic: /pinger_missionctrl_to_dx2_theta/ping
      tracked_frame: dx2-theta
rosbag_record_robot_coordinator:
  nodes:
    - lpc
    - npc
    - jetson
rosbag_record_robot_apc:
  node_script:
    record_bag_mission_apc.sh
rosbag_record_robot_jetson:
  node_script:
    record_bag_mission_jetson.sh
rosbag_record_robot_lpc:
  node_script:
    record_bag_mission_lpc.sh
rosbag_record_robot_npc:
  node_script:
    record_bag_mission_npc.sh
rosserial_arduino_mega:
  port: /dev/arduino_mega
  baud: 57600
rovio:
  world_frame: vio_map
  imu_frame: vio_imu
  camera_frame: vio_camera
  lidar_frame_name: /velodyne_IGNORE_FOR_NOW
  camera_frame_name: /cam0_IGNORE_FOR_NOW
  # Clahe config
  histogram_equalize_8bit_images : false
  clahe_clip_limit : 2
  clahe_grid_size: 6
  # Resize config
  resize_input_image: false
  resize_factor: 1.0
rqt_darpa_mission_plugin:
  verbose: false
  run_server_test: true
  mission_items:
    items:
      - dummy
    definition:
      dummy:
        name: "[Dummy] Dummy"
        label: "0.0"
        tooltip: "Dummy"
        description: "Dummy"
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      reset_chrony:
        name: "[Dummy]  Reset Chrony on all PCs."
        label: "0.0"
        tooltip: "reset_chrony on opc"
        description: "Go to OPC terminal, run reset_chrony."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      launch_lpc:
        name: "[Dummy]  Start LPC and stand up robot"
        label: "0.0"
        tooltip: "lpc_launch on LPC, walk in smart tab"
        description: "Go to LPC terminal, lpc_launch. \nGo to motion state walk with the smart tab."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      check_gas_sensor:
        name: "[Dummy]  Check gas sensor output"
        label: "0.0"
        tooltip: "Check in rviz if you recieve data from gas sensor"
        description: "Check in rviz if you recieve data from gas sensor."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      lights_on:
        name: "[Dummy] Turn on lights"
        label: "0.0"
        tooltip: "Turn on lights."
        description: "Turn on lights."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      plug_xbee:
        name: "[Dummy] Plug Xbee E-STOP"
        label: "0.0"
        tooltip: "Plug the USB cable into the xbee."
        description: "Plug the USB cable into the xbee."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      launch_npc:
        name: "[Dummy]  Start NPC"
        label: "0.0"
        tooltip: "npc_launch"
        description: "Go to NPC terminal, npc_launch"
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      check_alphasense:
        name: "[Dummy]  Check alphasense image"
        label: "0.0"
        tooltip: "Check in rviz if you recieve data from alphasense sensor"
        description: "Check in rviz if you recieve data from alphasense sensor."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      check_npc:
        name: "[Dummy]  Check LOAM Map, LOAM Odometry and ROVIO Odometry "
        label: "0.0"
        tooltip: "Dummy button to remind to check NPC computation."
        description: "Check if the LOAM map is shown. \nCheck LOAM and Rovio Odometry."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      check_bluetooth_sensor:
        name: "[Dummy]  Check bluetooth readings"
        label: "0.0"
        tooltip: "Check in rviz if you recieve data from bluetooth sensor"
        description: "Check in rviz if you recieve data from bluetooth sensor."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      initialize_msf:
        name: "Initialize MSF"
        label: "0.0"
        tooltip: "Initialize the MSF-Filter."
        description: "Initilize MSF by pressing 'Activate item' button"
        service:
          type: Trigger
          activate:
            topic: "/msf_initializer_mux/initialize_msf"
            latch: false
          cancel:
            topic: ""
            latch: false
      check_msf:
        name: "[Dummy] Check MSF Odometry"
        label: "0.0"
        tooltip: "Check that MSF odometry is stable"
        description: "Check that MSF odometry is stable and consistent with other odometries"
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      launch_jetson:
        name: "[Dummy]  Start Jetson"
        label: "0.0"
        tooltip: "jetson_launch"
        description: "Go to Jetson terminal, jetson_launch"
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      launch_apc:
        name: "[Dummy]  Start APC"
        label: "0.0"
        tooltip: "Go to APC terminal, apc_launch"
        description: "Go to APC terminal, apc_launch."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      check_jetson_computation:
        name: "[Dummy]  Check elevation map"
        label: "0.0"
        tooltip: "Dummy button to remind to check elevation mapping."
        description: "Check if the elevation map is updated."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      launch_mapping:
        name: "[Dummy]  Start Mapping Pipeline."
        label: "0.0"
        tooltip: "mapping_launch"
        description: "Go to Mapping terminal, mapping_launch."
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      start_rosbag_recording:
        name: "Start the rosbag recording and check recording"
        label: "0.0"
        tooltip: "Start rosbag recording with GUI button and check that we are recording on NPC with simlink rosbag_mission."
        description: "Start rosbag recording with GUI button. \nCheck that we are recording on NPC with simlink rosbag_mission."
        service:
          type: Trigger
          activate:
            topic: "/rosbag_record_robot_coordinator/record_bag"
            latch: false
          cancel:
            topic: "/rosbag_record_robot_coordinator/stop_bag"
            latch: false
      darpa_frame_detection:
        name: "Detect DARPA frame"
        label: "0.0"
        tooltip: "While active this will detect april tags."
        description: "Controls the darpa frame detection. \nRemember to turn off to save computation."
        service:
          type: Empty
          activate:
            topic: "/aprilTag_startDetector"
            latch: false
          cancel:
            topic: "/aprilTag_stopDetector"
            latch: false
      save_darpa_frame_to_file:
        name: "Save Map-Darpa TF"
        label: "0.0"
        tooltip: "Save TF transform map-darpa to file."
        description: "Save TF transform map-darpa to file."
        service:
          type: Trigger
          activate:
            topic: "/rqt_helper_save_map_darpa_tf/save_map_darpa_tf"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
      reset_gbplanner_map:
        name: "Reset GBPLanner Map"
        label: "0.0"
        tooltip: "Reset internal map of gbplanner."
        description: "Resets internal map of gbplanner."
        service:
          type: Empty
          activate:
            topic: "/gbplanner_node/clear_map"
            latch: false
          cancel:
            topic: ""
            latch: false
      kill_opc_and_remove_cables:
        name: "[Dummy]  Kill OPC process and remove all cables from the robot"
        label: "0.0"
        tooltip: "Dummy button to remind you to kill OPC and remove power and ethernet cable from the robot"
        description: "CTRL+C in OPC Terminal and remove power and OPC ethernet cable"
        service:
          type: Trigger
          activate:
            topic: "/example_service_servers/trigger_true_response"
            latch: false
          cancel:
            topic: "/example_service_servers/trigger_false_response"
            latch: false
rqt_darpa_supervision_plugin:
  robot_prefixes: ["/anymal_1", "/anymal_2", "/anymal_3", "/anymal_4", "/anymal_5"]
  wait_for_existance_duration: 0.5
  # The frame Id in which path creator nodes are added (NOTE: this should coincide with rviz's static frame_id)
  path_creator_frame_id: "map"
  follow_path_with_mission_manager: true # true if path is sent to state machine, false if to local guidance
  default_local_guidance_modes: # Associate a mode to the default mode based on the client
    user: "walk_learning_perceptive"
    user_local_planner: "walk_precise_learning_perceptive"
  interval_timer_update_streaming_low_priority_topics: 120.0  #[s]
  services:
    path_creator_add_initial_markers:
      topic: "/path_creator/add_initial_node_pair"
      latch: false
    path_creator_remove_all_markers:
      topic: "/path_creator/remove_all_nodes"
      latch: false
    path_creator_append_marker:
      topic: "/path_creator/add_num_nodes"
      latch: false
    path_creator_auto_orient:
      topic: "/path_creator/auto_orient_nodes"
      latch: false
    path_creator_set_new_path:
      topic: "/path_creator/set_new_path"
      latch: false
    mission_manager_cancel_all_goals:
      topic: "/darpa_locomotion_mission_bt/cancel_all_goals"
      latch: false
    homing_timeout:
      topic: "/darpa_locomotion_mission_bt/set_homing_timer"
      latch: false
    global_planner_automatic_planning:
      topic: "/darpa_locomotion_mission_bt/automatic_planning"
      latch: false
    global_planner_automatic_full_scans:
      topic: "/darpa_locomotion_mission_bt/enable_automatic_full_scans"
      latch: false
    global_planner_automatic_point_scans:
      topic: "/darpa_locomotion_mission_bt/enable_automatic_point_scans"
      latch: false
    global_planner_trigger_homing:
      topic: "/darpa_locomotion_mission_bt/trigger_homing"
      latch: false
    global_planner_go_to_waypoint:
       topic: "/darpa_locomotion_mission_bt/go_to_waypoint"
       latch: false
    global_planner_stop_planner:
      topic: "/darpa_locomotion_mission_bt/stop_planning"
      latch: false
    mission_helpers_request_velodyne_scan:
      topic: "/on_demand_lidar1/publish_next_incoming_message"
      latch: false
    mission_helpers_request_bpearl_scan:
      topic: "/on_demand_lidar2/publish_next_incoming_message"
      latch: false
    mission_helpers_request_elevation_map:
      topic: "/on_demand_elevation_map/publish_next_incoming_message"
      latch: false
    mission_helpers_request_loam_map:
      topic: "/on_demand_loam_map/publish_next_incoming_message"
      latch: false
    mission_helpers_request_loam_submap:
      topic: "/on_demand_loam_submap/publish_next_incoming_message"
      latch: false
    mission_helpers_request_loam_map_optimized:
      topic: "/on_demand_loam_map_optimized/publish_next_incoming_message"
      latch: false
    mission_helpers_request_loam_full_path:
      topic: "/on_demand_loam_full_path/publish_next_incoming_message"
      latch: false
    mission_helpers_request_loam_full_path_optimized:
      topic: "/on_demand_loam_full_path_optimized/publish_next_incoming_message"
      latch: false
    mission_helpers_request_maplab_map:
       topic: "/holder_maplab_map/publish_last_received_message"
       latch: false
    mission_helpers_request_beacon_positions:
       topic: "/holder_anymal_pinger_markers/publish_last_received_message"
       latch: false
    mission_helpers_drop_wifi_beacon:
      topic: "/darpa_locomotion_mission_bt/deploy_wifi_beacon"
      latch: false
    base_station_reporting_helpers_mark_wifi_beacon:
      topic: "/rqt_helper_wifi_beacon_maplab_marker/add_wifi_beacon_marker"
      latch: false
    mission_helpers_start_rosbag_recording:
      topic: "/rosbag_record_robot_coordinator/record_bag"
      latch: false
    mission_helpers_stop_rosbag_recording:
      topic: "/rosbag_record_robot_coordinator/stop_bag"
      latch: false
    mission_helpers_clear_untraversable_zones:
      topic: "/gbplanner/clear_untraversable_zones"
      latch: false
    mission_helpers_clear_elevation_map:
      topic: "/elevation_mapping/clear_map_with_initializer"
      latch: false
    reset_distance_tracker:
      topic: "/distance_tracker/reset"
      latch: false
    mission_manager_go_to_waypoint_and_explore:
      topic: "/darpa_locomotion_mission_bt/go_to_waypoint_and_explore"
      latch: false
    mission_manager_safe_locomotion:
      topic: "/darpa_locomotion_mission_bt/enable_safe_locomotion"
      latch: false
    mission_manager_local_planner:
      topic: "/darpa_locomotion_mission_bt/enable_local_planner"
      latch: false
    mission_manager_wifi_safety:
      topic: "/darpa_locomotion_mission_bt/enable_wifi_safety"
      latch: false
    mission_manager_traversability_safety:
      topic: "/darpa_locomotion_mission_bt/enable_traversability_safety"
      latch: false
    mission_manager_recovery_homing:
      topic: "/darpa_locomotion_mission_bt/recovery_homing"
      latch: false
    multi_topics_mux_select_input:
      topic: "/multi_topics_mux/select"
      latch: false
    multi_topics_demux_select_input:
      topic: "/multi_topics_demux/select"
      latch: false
    local_guidance_path_manager_force_stop:
      topic: "/local_guidance_path_manager/activate_forced_stop_following_path"
      latch: false
    local_guidance_path_manager_release_stop:
      topic: "/local_guidance_path_manager/release_forced_stop_following_path"
      latch: false
    motion_control_manager_emergency_stop:
      topic: "/motion_control_manager/emergency_stop"
      latch: false
    motion_control_manager_clear_emergency_stop:
      topic: "/motion_control_manager/clear_emergency_stop"
      latch: false
    mission_manager_scan_point:
      topic: "/darpa_locomotion_mission_bt/trigger_user_point_inspection"
      latch: false
    mission_manager_full_scan:
      topic: "/darpa_locomotion_mission_bt/trigger_user_inspection"
      latch: false
    mission_manager_follow_path_and_explore:
      topic: "/darpa_locomotion_mission_bt/follow_path_and_explore"
      latch: false
    anymal_1_disable_sending_low_priority_topics:
      topic: "/anymal_1/nimbro_anymal_missionctrl_sender/disable_sending_low_priority_topics"
      latch: false
    anymal_1_enable_sending_low_priority_topics:
      topic: "/anymal_1/nimbro_anymal_missionctrl_sender/enable_sending_low_priority_topics"
      latch: false
    anymal_2_disable_sending_low_priority_topics:
      topic: "/anymal_2/nimbro_anymal_missionctrl_sender/disable_sending_low_priority_topics"
      latch: false
    anymal_2_enable_sending_low_priority_topics:
      topic: "/anymal_2/nimbro_anymal_missionctrl_sender/enable_sending_low_priority_topics"
      latch: false
    anymal_3_disable_sending_low_priority_topics:
      topic: "/anymal_3/nimbro_anymal_missionctrl_sender/disable_sending_low_priority_topics"
      latch: false
    anymal_3_enable_sending_low_priority_topics:
      topic: "/anymal_3/nimbro_anymal_missionctrl_sender/enable_sending_low_priority_topics"
      latch: false
    anymal_4_disable_sending_low_priority_topics:
      topic: "/anymal_4/nimbro_anymal_missionctrl_sender/disable_sending_low_priority_topics"
      latch: false
    anymal_4_enable_sending_low_priority_topics:
      topic: "/anymal_4/nimbro_anymal_missionctrl_sender/enable_sending_low_priority_topics"
      latch: false
    anymal_5_disable_sending_low_priority_topics:
      topic: "/anymal_5/nimbro_anymal_missionctrl_sender/disable_sending_low_priority_topics"
      latch: false
    anymal_5_enable_sending_low_priority_topics:
      topic: "/anymal_5/nimbro_anymal_missionctrl_sender/enable_sending_low_priority_topics"
      latch: false
  actions:
    mission_manager_follow_path:
      topic: "/darpa_locomotion_mission_bt/follow_path"
    local_guidance_follow_path:
      topic: "/local_guidance_path_manager/follow_global_path"
  subscribers:
    wifi_ok:
      topic: "/pinger_missionctrl_to_anymal/ping"
    traversability_ok:
      topic: "/safety_checker/traversabiliy_safety_status"
    available_wifi_modules:
      topic: "/darpa_locomotion_mission_bt/available_wifi_beacons"
    mission_manager_active_client:
      topic: "/darpa_locomotion_mission_bt/active_client"
    mission_manager_homing_timer:
      topic: "/darpa_locomotion_mission_bt/homing_timer/proxy"
    mission_manager_status:
      topic: "/darpa_locomotion_mission_bt/status"
  publishers:
    current_robot_name:
      topic: "/current_robot_name"
rqt_helper_wifi_beacon_maplab_marker:
  map_tf_frame_id: darpa
  robot_tf_frame_id: base_subt
  lidar_tf_frame_id: lidar
bounding_box_tool:
  bounding_box_world_frame_id: "darpa"
  bounding_box_robot_frame_id: "base_subt"
  bounding_box_service_name: "/gbplanner/set_dynamic_global_bound"
  current_robot_name_topic: "/current_robot_name"
  default_forward: 25.0
  default_right: 25.0
  default_left: 25.0
  default_rear: 2.0
  default_up: 10.0
  default_down: 10.0
safety_checker:
  enable_at_startup: True                       # enable/disable safety checker when node starts
  width: 0.6                                    # width of the robot's bounding box
  height: 0.05                                  # height of the robot's bounding box
  horizon: 1.25                                 # time horizon of the path
  hz: 5.0                                       # frequency of checking the path
  dilation_size: 0.15                           # size of expanding the polygon before taking the union (if this is too small, the union fails)
  simplify_size: 0.1                            # size used to simplify the polygon
  dt: 0.1                                       # time step for calculating path
  twist_topic: "/twist_filter/filtered_twist"   # robot velocity topic name
  map_frame: "odom"                             # frame_id of elevation map
  base_frame: "base"                            # frame_id of robot's base
  check_service_name: "/elevation_mapping/check_safety"
status_monitor_behavior_tree:
  display_topic: overlay_text
  status_topic: /darpa_locomotion_mission_bt/topic_status_report
  queue_size: 10
subt_cpu_loupe_common: &subt_cpu_loupe_common
  rate: 1.0
  num_processes: 15
  display_topic: cpu_loupe
subt_cpu_loupe_apc:
  <<: *subt_cpu_loupe_common
subt_cpu_loupe_jetson:
  <<: *subt_cpu_loupe_common
subt_cpu_loupe_lpc:
  <<: *subt_cpu_loupe_common
subt_cpu_loupe_npc:
  <<: *subt_cpu_loupe_common
subt_xbee_estop:
  xbee_port: /dev/FTDI_SERIAL_NO
  baud_rate: 9600
  cmd_response_timeout: 0.5
  time_step: 1.0
  clients:
    trigger_estop:
      service: /local_guidance_path_manager/activate_forced_stop_following_path
    release_estop:
      service: /local_guidance_path_manager/release_forced_stop_following_path
    stop_global_planner_automatic_point_scans:
      service: /darpa_locomotion_mission_bt/enable_automatic_point_scans
    stop_global_planner_automatic_full_scans:
      service: /darpa_locomotion_mission_bt/enable_automatic_full_scans
tensorrt_artifact_detection_common: &tensorrt_artifact_detection_common
  yolo_model:
    model:
      name: 'yolov3'
    input_shape:
      value: '416'
    confidence_threshold:
      value: 0.2
    batch_size:
      value: 1
    category_num:
      value: 8
  publishers:
    object_detector:
      topic: detected_objects
    bounding_boxes:
      topic: bounding_boxes
  image_view:
    enable_opencv: false
tensorrt_artifact_detection_combined:
  <<: *tensorrt_artifact_detection_common
  subscribers:
    in_topics: [/alphasense_driver_ros/cam4/dropped/debayered,
                /alphasense_driver_ros/cam3/dropped/debayered,
                /alphasense_driver_ros/cam5/dropped/debayered,
                /alphasense_driver_ros/cam6/dropped/debayered]
tensorrt_artifact_detection_zoom_camera:
  <<: *tensorrt_artifact_detection_common
  subscribers:
    camera_resolution: 6220800 # 1920*1080*3, different image dimension as alphasense.
    in_topics: [/zoom_camera/scanned/image_raw]
tensorrt_artifact_detection_front:
  <<: *tensorrt_artifact_detection_common
  subscribers:
    in_topics: [/alphasense_driver_ros/cam4/dropped/debayered]
tensorrt_artifact_detection_left:
  <<: *tensorrt_artifact_detection_common
  subscribers:
    in_topics: [/alphasense_driver_ros/cam3/dropped/debayered]
tensorrt_artifact_detection_right:
  <<: *tensorrt_artifact_detection_common
  subscribers:
    in_topics: [/alphasense_driver_ros/cam5/dropped/debayered]
tensorrt_artifact_detection_upwards:
  <<: *tensorrt_artifact_detection_common
  subscribers:
    in_topics: [/alphasense_driver_ros/cam6/dropped/debayered]
tf_selective_snapshooter:
  root_frame_id: darpa
  selected_frame_ids:
    - map
    - base_subt
    - lidar
    - bpearl_rear
    - camera_init
    - camera_init_CORRECTED
    - msf_body_imu_map
    - inspection_payload_head
  snapshot_frequency: 3.0
twist_filter_ros:
  subscribers:
    twist_in:
      topic:      /state_estimator/twist_throttle
      queue_size: 10
  publishers:
    twist_out:
      topic:      /twist_filter/filtered_twist
      queue_size: 10
      frequency:  15.0
  twist_first_order_filter:   # G(s) = mu_0 / (1 + tau * s)
    linear:
      mu_0:   1.0
      tau:    0.2
    angular:
      mu_0:   1.0
      tau:    0.2
twist_mux:
  subscribers:
    inputs:
      - name: joystick
        priority: 20
        queue_size: 1
        timeout: 1.0
        topic: /joy_manager/twist
      - name: local_guidance
        priority: 10
        queue_size: 1
        timeout: 0.5
        topic: /local_guidance_path_follower/twist_attitude_adapted
      - name: beacon_deployment
        priority: 5
        queue_size: 1
        timeout: 2.0
        topic: /darpa_locomotion_mission_bt/beacon_deployment_twist
##########################
## Stack Launcher Nodes ##
##########################
stack_launcher:
  nodes:
    alphasense_driver_ros:
      preprocessed_params:
        ncamera_Settings:
          key: /alphasense_driver_ros/ncamera_settings
          value: $(rospack find anymal_c_subt)/config/non_ros/alphasense/alphasense_config.yaml
      roslaunch:
        name: alphasense_driver_ros
        node_type: alphasense_driver_ros
        output: screen
        package: alphasense_driver_ros
        respawn: true
    alphasense_drop_front_color_camera:
      roslaunch:
        args: /alphasense_driver_ros/cam4 6 7 /alphasense_driver_ros/cam4/dropped
        name: alphasense_drop_front_color_camera
        node_type: drop
        output: screen
        package: topic_tools
        respawn: true
    alphasense_drop_front_color_camera_standalone:
      roslaunch:
        args: /alphasense_driver_ros/cam4 4 5 /alphasense_driver_ros/cam4/dropped
        name: alphasense_drop_front_color_camera_standalone
        node_type: drop
        output: screen
        package: topic_tools
        respawn: true
    alphasense_drop_left_color_camera:
      roslaunch:
        args: /alphasense_driver_ros/cam3 6 7 /alphasense_driver_ros/cam3/dropped
        name: alphasense_drop_left_color_camera
        node_type: drop
        output: screen
        package: topic_tools
        respawn: true
    alphasense_drop_right_color_camera:
      roslaunch:
        args: /alphasense_driver_ros/cam5 6 7 /alphasense_driver_ros/cam5/dropped
        name: alphasense_drop_right_color_camera
        node_type: drop
        output: screen
        package: topic_tools
        respawn: true
    alphasense_drop_upwards_color_camera:
      roslaunch:
        args: /alphasense_driver_ros/cam6 6 7 /alphasense_driver_ros/cam6/dropped
        name: alphasense_drop_upwards_color_camera
        node_type: drop
        output: screen
        package: topic_tools
        respawn: true
    apriltags2_ros_continuous_node:
      roslaunch:
        name: apriltags2_ros_continuous_node
        node_type: apriltags2_ros_continuous_node
        output: screen
        package: apriltags2_ros
        respawn: true
        remap_args:
          image_topic:
            from: image
            to: /alphasense_driver_ros/cam0
    art_planner_subt:
      roslaunch:
        name: art_planner_subt
        node_type: art_planner_subt_node
        output: screen
        package: art_planner_subt
        respawn: true
        remap_args:
          elevation_map:
            from: ~elevation_map
            to: /elevation_mapping/elevation_map_raw
          goal:
            from: ~goal
            to: /goal
    art_planner_plan_to_goal_client:
      roslaunch:
        name: art_planner_plan_to_goal_client
        node_type: plan_to_goal_client.py
        output: screen
        package: art_planner_ros
        respawn: true
    attitude_based_throttler:
      roslaunch:
        name: attitude_based_throttler
        node_type: attitude_based_throttler.py
        output: screen
        package: attitude_based_throttler
        respawn: true
    base_subt_to_darpa_in_darpa:
      roslaunch:
        name: base_subt_to_darpa_in_darpa
        node_type: tf_to_pose_converter_node.py
        output: screen
        package: tf_to_pose_converter
        respawn: true
    base_subt_to_map_in_map:
      roslaunch:
        name: base_subt_to_map_in_map
        node_type: tf_to_pose_converter_node.py
        output: screen
        package: tf_to_pose_converter
        respawn: true
    bayesian_artifact_filter:
      roslaunch:
        name: bayesian_artifact_filter
        node_type: bayesian_artifact_filter_node
        output: screen
        package: bayesian_artifact_filter
        respawn: true
    bluetooth_gas_detector:
      roslaunch:
        name: bluetooth_gas_detector
        node_type: bluetooth_gas_detector_node
        output: screen
        package: bluetooth_gas_detector
        respawn: true
    bluetooth_gas_simulator:
      roslaunch:
        name: bluetooth_gas_simulator
        node_type: bluetooth_gas_simulator_node
        output: screen
        package: bluetooth_gas_simulator
        respawn: true
    bluetooth_reader:
      roslaunch:
        name: bluetooth_reader
        node_type: bluetooth_reader.py
        output: screen
        package: bluetooth_reader
        respawn: true
    bluetooth_viz:
      preprocessed_params:
        detection_sound_file_path:
          key: /bluetooth_viz/detection_sound_file_path
          value: $(rospack find bluetooth_viz)/sounds/frank.wav
      roslaunch:
        name: bluetooth_viz
        node_type: bluetooth_viz.py
        output: screen
        package: bluetooth_viz
        respawn: true
    bpearl_drop_front_filter_subt:
      roslaunch:
        args: /robot_self_filter/bpearl_front/point_cloud 1 2 /robot_self_filter/bpearl_front/point_cloud/dropped
        name: bpearl_drop_front_filter_subt
        node_type: drop
        output: screen
        package: topic_tools
        respawn: true
    bpearl_drop_rear_filter_subt:
      roslaunch:
        args: /robot_self_filter/bpearl_rear/point_cloud 1 2 /robot_self_filter/bpearl_rear/point_cloud/dropped
        name: bpearl_drop_rear_filter_subt
        node_type: drop
        output: screen
        package: topic_tools
        respawn: true
    bpearl_point_cloud_filter_subt:
      preprocessed_params:
        config_files_folder:
          key: /bpearl_point_cloud_filter_subt/filter_and_merger_subt/config_files_folder
          value: $(rospack find anymal_c_subt)/config/non_ros/perception/point_cloud_filter
      roslaunch:
        name: filter_and_merger_subt
        namespace: bpearl_point_cloud_filter_subt
        node_type: point_cloud_processor_node
        output: screen
        package: point_cloud_processor
    depth_camera_point_cloud_filter_pcl_template: &depth_camera_point_cloud_filter_pcl_template
      roslaunch: &depth_camera_point_cloud_filter_pcl_roslaunch
        args: load pcl/VoxelGrid nodelet_manager
        name: point_cloud_filter_pcl
        node_type: nodelet
        output: screen
        package: nodelet
        namespace: depth_camera_front
    depth_camera_front_point_cloud_filter:
      roslaunch:
        <<: *depth_camera_point_cloud_filter_pcl_roslaunch
        namespace: depth_camera_front
        remap_args:
          in:
            from: ~input
            to: /depth_camera_front/depth/color/points
          out:
            from: ~output
            to: /depth_camera_front/depth/color/points_filtered
    depth_camera_left_point_cloud_filter:
      roslaunch:
        <<: *depth_camera_point_cloud_filter_pcl_roslaunch
        namespace: depth_camera_left
        remap_args:
          in:
            from: ~input
            to: /depth_camera_left/depth/color/points
          out:
            from: ~output
            to: /depth_camera_left/depth/color/points_filtered
    depth_camera_rear_point_cloud_filter:
      roslaunch:
        <<: *depth_camera_point_cloud_filter_pcl_roslaunch
        namespace: depth_camera_rear
        remap_args:
          in:
            from: ~input
            to: /depth_camera_rear/depth/color/points
          out:
            from: ~output
            to: /depth_camera_rear/depth/color/points_filtered
    depth_camera_right_point_cloud_filter:
      roslaunch:
        <<: *depth_camera_point_cloud_filter_pcl_roslaunch
        namespace: depth_camera_right
        remap_args:
          in:
            from: ~input
            to: /depth_camera_right/depth/color/points
          out:
            from: ~output
            to: /depth_camera_right/depth/color/points_filtered
    dump_git_branch_config:
      roslaunch:
        args: -t ~/git -o ~/mission_log
        name: dump_git_branch_config
        node_type: dump_git_branch_config.sh
        output: screen
        package: subt_utils
        respawn: false
    chrony_monitor_apc:
      roslaunch:
        name: chrony_monitor_apc
        node_type: chrony_monitor
        output: log
        package: system_monitor
        respawn: true
    chrony_monitor_jetson:
      roslaunch:
        name: chrony_monitor_jetson
        node_type: chrony_monitor
        output: log
        package: system_monitor
        respawn: true
    chrony_monitor_npc:
      roslaunch:
        name: chrony_monitor_npc
        node_type: chrony_monitor
        output: log
        package: system_monitor
        respawn: true
    chrony_monitor_lpc:
      roslaunch:
        name: chrony_monitor_lpc
        node_type: chrony_monitor
        output: log
        package: system_monitor
    cpu_monitor_mission_control:
      roslaunch:
        name: cpu_monitor_mission_control
        node_type: cpu_monitor
        output: log
        package: system_monitor
        respawn: true
    darknet_ros_camera_front:
      preprocessed_params:
        weights_path:
          key: /darknet_ros_camera_front/weights_path
          value: $(rospack find arl_subt_artifact_detection)/config/weights/
        config_path: # used to load only .cfg file
          key: /darknet_ros_camera_front/config_path
          value: $(rospack find arl_subt_artifact_detection)/config/anymal_gpu/
      roslaunch:
        args: load darknet_ros_nodelet artifact_images_nodelet_manager
        name: darknet_ros_camera_front
        node_type: nodelet
        output: screen
        package: nodelet
        respawn: true
    darknet_ros_camera_left:
      preprocessed_params:
        weights_path:
          key: /darknet_ros_camera_left/weights_path
          value: $(rospack find arl_subt_artifact_detection)/config/weights/
        config_path: # used to load only .cfg file
          key: /darknet_ros_camera_left/config_path
          value: $(rospack find arl_subt_artifact_detection)/config/anymal_gpu/
      roslaunch:
        args: load darknet_ros_nodelet artifact_images_nodelet_manager
        name: darknet_ros_camera_left
        node_type: nodelet
        output: screen
        package: nodelet
        respawn: true
    darknet_ros_camera_right:
      preprocessed_params:
        weights_path:
          key: /darknet_ros_camera_right/weights_path
          value: $(rospack find arl_subt_artifact_detection)/config/weights/
        config_path: # used to load only .cfg file
          key: /darknet_ros_camera_right/config_path
          value: $(rospack find arl_subt_artifact_detection)/config/anymal_gpu/
      roslaunch:
        args: load darknet_ros_nodelet artifact_images_nodelet_manager
        name: darknet_ros_camera_right
        node_type: nodelet
        output: screen
        package: nodelet
        respawn: true
    darpa_locomotion_mission_bt:
      roslaunch:
        name: darpa_locomotion_mission_bt
        node_type: darpa_locomotion_mission_bt_node
        output: screen
        package: darpa_locomotion_mission_bt
        respawn: true
    debayer_cuda_camera_front:
      roslaunch:
        args: load debayer_cuda_nodelet artifact_images_nodelet_manager
        name: debayer_cuda_camera_front
        node_type: nodelet
        output: screen
        package: nodelet
        respawn: true
    debayer_cuda_camera_left:
      roslaunch:
        args: load debayer_cuda_nodelet artifact_images_nodelet_manager
        name: debayer_cuda_camera_left
        node_type: nodelet
        output: screen
        package: nodelet
        respawn: true
    debayer_cuda_camera_right:
      roslaunch:
        args: load debayer_cuda_nodelet artifact_images_nodelet_manager
        name: debayer_cuda_camera_right
        node_type: nodelet
        output: screen
        package: nodelet
        respawn: true
    debayer_cuda_camera_upwards:
      roslaunch:
        args: load debayer_cuda_nodelet artifact_images_nodelet_manager
        name: debayer_cuda_camera_upwards
        node_type: nodelet
        output: screen
        package: nodelet
        respawn: true
    artifact_images_nodelet_manager:
      roslaunch:
        args: manager
        name: artifact_images_nodelet_manager
        node_type: nodelet
        output: screen
        package: nodelet
        respawn: true
    distance_tracker:
      roslaunch:
        name: distance_tracker
        node_type: distance_tracker.py
        output: screen
        package: distance_tracker
        respawn: true
    disk_monitor_jetson:
      roslaunch:
        name: disk_monitor_jetson
        node_type: disk_monitor
        output: log
        package: system_monitor
        respawn: true
    memory_monitor_jetson:
      roslaunch:
        name: memory_monitor_jetson
        node_type: memory_monitor
        output: log
        package: system_monitor
        respawn: true
    example_service_server:
      roslaunch:
        name: example_service_server
        node_type: example_service_server.py
        output: screen
        package: rqt_darpa_mission_plugin
        respawn: true
    gbplanner:
      roslaunch:
        name: gbplanner_node
        node_type: gbplanner_node
        output: screen
        package: gbplanner
        respawn: true
        remap_args:
          pointcloud:
            from: pointcloud
            to: /gbplanner/input_point_cloud
          pose_stamped:
            from: pose_stamped
            to: /tf/base_subt_to_map_in_map
          untraversable_polygon:
            from: /traversability_estimation/untraversable_polygon
            to: /safety_checker/untraversable_polygon
    gbplanner_pci_anymal:
      roslaunch:
        name: gbplanner_pci_anymal_ros_node
        node_type: gbplanner_pci_anymal_ros_node
        output: screen
        package: gbplanner_pci_anymal
        respawn: true
        remap_args:
          action_server_path_manager:
            from: action_server_path_manager
            to: /local_guidance_path_manager/follow_global_path
          action_server_state_machine:
            from: action_server_state_machine
            to: /darpa_locomotion_mission_bt/follow_path
          planner_homing_server:
            from: planner_homing_server
            to: gbplanner/homing
          planner_server:
            from: planner_server
            to: gbplanner
          pose_stamped:
            from: pose_stamped
            to: /tf/base_subt_to_map_in_map
    gpu_monitor_jetson:
      roslaunch:
        name: gpu_monitor_jetson
        node_type: jetson_stats.py
        output: log
        package: ros_jetson_stats
        respawn: true
    gpu_path_optimizer:
      roslaunch:
        name: gpu_path_optimizer
        node_type: path_optimize_server.py
        output: log
        package: gpu_path_optimizer
        respawn: true
    hbc_joystick_inverter:
      roslaunch:
        name: hbc_joystick_inverter
        node_type: hbc_joystick_inverter.py
        output: screen
        package: hbc_joystick_inverter
        respawn: true
    holder_maplab_map:
      roslaunch:
        name: holder_maplab_map
        node_type: point_cloud2_holder
        output: screen
        package: subt_topic_tools
        respawn: true
    holder_anymal_1_pinger_markers:
      roslaunch:
        name: holder_anymal_1_pinger_markers
        node_type: marker_array_holder
        output: screen
        package: subt_topic_tools
        respawn: true
    holder_anymal_2_pinger_markers:
      roslaunch:
        name: holder_anymal_2_pinger_markers
        node_type: marker_array_holder
        output: screen
        package: subt_topic_tools
        respawn: true
    holder_anymal_3_pinger_markers:
      roslaunch:
        name: holder_anymal_3_pinger_markers
        node_type: marker_array_holder
        output: screen
        package: subt_topic_tools
        respawn: true
    holder_anymal_4_pinger_markers:
      roslaunch:
        name: holder_anymal_4_pinger_markers
        node_type: marker_array_holder
        output: screen
        package: subt_topic_tools
        respawn: true
    holder_anymal_5_pinger_markers:
      roslaunch:
        name: holder_anymal_5_pinger_markers
        node_type: marker_array_holder
        output: screen
        package: subt_topic_tools
        respawn: true
    homing_proxy_timer_ros:
      roslaunch:
        name: homing_proxy_timer_ros
        node_type: homing_proxy_timer_ros.py
        output: screen
        package: homing_proxy_timer_ros
        respawn: true
    homing_proxy_timer_ros_anymal_1:
      roslaunch:
        name: homing_proxy_timer_ros_anymal_1
        node_type: homing_proxy_timer_ros.py
        output: screen
        package: homing_proxy_timer_ros
        respawn: true
        remap_args:
          timeout:
            from: /darpa_locomotion_mission_bt/homing_timer
            to: /anymal_1/darpa_locomotion_mission_bt/homing_timer
          timeout_proxy:
            from: /darpa_locomotion_mission_bt/homing_timer/proxy
            to: /anymal_1/darpa_locomotion_mission_bt/homing_timer/proxy
    homing_proxy_timer_ros_anymal_2:
      roslaunch:
        name: homing_proxy_timer_ros_anymal_2
        node_type: homing_proxy_timer_ros.py
        output: screen
        package: homing_proxy_timer_ros
        respawn: true
        remap_args:
          timeout:
            from: /darpa_locomotion_mission_bt/homing_timer
            to: /anymal_2/darpa_locomotion_mission_bt/homing_timer
          timeout_proxy:
            from: /darpa_locomotion_mission_bt/homing_timer/proxy
            to: /anymal_2/darpa_locomotion_mission_bt/homing_timer/proxy
    homing_proxy_timer_ros_anymal_3:
      roslaunch:
        name: homing_proxy_timer_ros_anymal_3
        node_type: homing_proxy_timer_ros.py
        output: screen
        package: homing_proxy_timer_ros
        respawn: true
        remap_args:
          timeout:
            from: /darpa_locomotion_mission_bt/homing_timer
            to: /anymal_3/darpa_locomotion_mission_bt/homing_timer
          timeout_proxy:
            from: /darpa_locomotion_mission_bt/homing_timer/proxy
            to: /anymal_3/darpa_locomotion_mission_bt/homing_timer/proxy
    homing_proxy_timer_ros_anymal_4:
      roslaunch:
        name: homing_proxy_timer_ros_anymal_4
        node_type: homing_proxy_timer_ros.py
        output: screen
        package: homing_proxy_timer_ros
        respawn: true
        remap_args:
          timeout:
            from: /darpa_locomotion_mission_bt/homing_timer
            to: /anymal_4/darpa_locomotion_mission_bt/homing_timer
          timeout_proxy:
            from: /darpa_locomotion_mission_bt/homing_timer/proxy
            to: /anymal_4/darpa_locomotion_mission_bt/homing_timer/proxy
    homing_proxy_timer_ros_anymal_5:
      roslaunch:
        name: homing_proxy_timer_ros_anymal_5
        node_type: homing_proxy_timer_ros.py
        output: screen
        package: homing_proxy_timer_ros
        respawn: true
        remap_args:
          timeout:
            from: /darpa_locomotion_mission_bt/homing_timer
            to: /anymal_5/darpa_locomotion_mission_bt/homing_timer
          timeout_proxy:
            from: /darpa_locomotion_mission_bt/homing_timer/proxy
            to: /anymal_5/darpa_locomotion_mission_bt/homing_timer/proxy
    image_brighten_camera_front:
      roslaunch:
        name: image_brighten_camera_front
        node_type: image_brighten_node
        output: screen
        package: image_brighten
        respawn: true
    image_brighten_camera_left:
      roslaunch:
        name: image_brighten_camera_left
        node_type: image_brighten_node
        output: screen
        package: image_brighten
        respawn: true
    image_brighten_camera_right:
      roslaunch:
        name: image_brighten_camera_right
        node_type: image_brighten_node
        output: screen
        package: image_brighten
        respawn: true
    image_brighten_camera_upwards:
      roslaunch:
        name: image_brighten_camera_upwards
        node_type: image_brighten_node
        output: screen
        package: image_brighten
        respawn: true
    image_to_map:
      roslaunch:
        name: image_to_map
        node_type: image_to_map_voxblox
        output: screen
        package: image_to_map
        respawn: true
    incremental_map_update_anymal_1_draco_republisher:
      roslaunch:
        # Same input and output name in args is ok because only topic/draco is forwarded by nimbro
        args: draco in:=/anymal_1/incremental_map_update/point_cloud raw out:=/anymal_1/incremental_map_update/point_cloud
        name: incremental_map_update_anymal_1_draco_republisher
        node_type: republish
        output: screen
        package: point_cloud_transport
        respawn: true
    incremental_map_update_anymal_2_draco_republisher:
      roslaunch:
        # Same input and output name in args is ok because only topic/draco is forwarded by nimbro
        args: draco in:=/anymal_2/incremental_map_update/point_cloud raw out:=/anymal_2/incremental_map_update/point_cloud
        name: incremental_map_update_anymal_2_draco_republisher
        node_type: republish
        output: screen
        package: point_cloud_transport
        respawn: true
    incremental_map_update_anymal_3_draco_republisher:
      roslaunch:
        # Same input and output name in args is ok because only topic/draco is forwarded by nimbro
        args: draco in:=/anymal_3/incremental_map_update/point_cloud raw out:=/anymal_3/incremental_map_update/point_cloud
        name: incremental_map_update_anymal_3_draco_republisher
        node_type: republish
        output: screen
        package: point_cloud_transport
        respawn: true
    incremental_map_update_anymal_4_draco_republisher:
      roslaunch:
        # Same input and output name in args is ok because only topic/draco is forwarded by nimbro
        args: draco in:=/anymal_4/incremental_map_update/point_cloud raw out:=/anymal_4/incremental_map_update/point_cloud
        name: incremental_map_update_anymal_4_draco_republisher
        node_type: republish
        output: screen
        package: point_cloud_transport
        respawn: true
    incremental_map_update_anymal_5_draco_republisher:
      roslaunch:
        # Same input and output name in args is ok because only topic/draco is forwarded by nimbro
        args: draco in:=/anymal_5/incremental_map_update/point_cloud raw out:=/anymal_5/incremental_map_update/point_cloud
        name: incremental_map_update_anymal_5_draco_republisher
        node_type: republish
        output: screen
        package: point_cloud_transport
        respawn: true
    inspection_head:
      roslaunch:
        name: inspection_head
        node_type: inspection_head_node
        output: screen
        package: inspection_head
        respawn: true
    inspection_head_dropped_zoom:
      roslaunch:
        args: /zoom_camera/image_raw 2 3 /zoom_camera/dropped/image_raw
        name: inspection_head_dropped_zoom
        node_type: drop
        output: screen
        package: topic_tools
        respawn: true
    inspection_head_interactive_marker:
      roslaunch:
        name: inspection_head_interactive_marker
        node_type: inspection_head_interactive_marker.py
        output: screen
        package: subt_interactive_markers
        respawn: true
    inspection_head_scanned_images:
      roslaunch:
        name: inspection_head_scanned_images
        node_type: inspection_head_scanned_images.py
        output: screen
        package: inspection_head
        respawn: true
    inspection_payload_head_to_map_in_map:
      roslaunch:
        name: inspection_payload_head_to_map_in_map
        node_type: tf_to_pose_converter_node.py
        output: screen
        package: tf_to_pose_converter
        respawn: true
    lidar_nodelet_driver_subt:
      roslaunch:
        args: load velodyne_driver/DriverNodelet lidar_nodelet_manager
        name: lidar_nodelet_driver_subt
        node_type: nodelet
        output: screen
        package: nodelet
    lidar_nodelet_transform_subt:
      preprocessed_params:
        calibration:
          key: /lidar_nodelet_transform_subt/calibration
          value: $(rospack find anymal_velodyne)/calib/VLP16db_example.yaml
      roslaunch:
        args: load velodyne_pointcloud/TransformNodelet lidar_nodelet_manager
        name: lidar_nodelet_transform_subt
        node_type: nodelet
        output: screen
        package: nodelet
    load_anymal_description:
      preprocessed_params:
        xacro_file:
          value: $(rospack find anymal_c_subt)/urdf/anymal_c_subt.urdf.xacro
    loam_correction_publisher:
      roslaunch:
        args: 0 0 0 1.570796327 0 1.570796327 camera_init_CORRECTED camera_init
        name: loam_correction_publisher
        node_type: static_transform_publisher
        package: tf2_ros
    loam_map_publisher:
      roslaunch:
        args: 0 0 0 0 0 0 map camera_init_CORRECTED
        name: loam_map_publisher
        node_type: static_transform_publisher
        package: tf2_ros
    loam_map_inverted_publisher:
      roslaunch:
        args: 0 0 0 0 0 3.14159265359 map map_inverted
        name: loam_map_inverted_publisher
        node_type: static_transform_publisher
        package: tf2_ros
    loam_nodelet_manager:
      roslaunch:
        package: nodelet
        node_type: nodelet
        name: loam_nodelet_manager
        args: manager
        output: screen
    loam_multiscan_registration_nodelet:
      roslaunch:
        package: nodelet
        node_type: nodelet
        name: loam_multiscan_registration_nodelet
        args: load laser_multiscan_registration_nodelet loam_nodelet_manager
        output: screen
        remap_args:
          imu_topic:
            from: /imu
            to: /sensors/imu
          pointcloud_topic:
            from: /multi_scan_points
            to: /point_cloud_filter/lidar/point_cloud_filtered
    loam_odometry_nodelet:
      roslaunch:
        package: nodelet
        node_type: nodelet
        name: loam_odometry_nodelet
        args: load laser_odometry_nodelet loam_nodelet_manager
        output: screen
        remap_args:
          imu_topic:
            from: /imu
            to: /sensors/imu
    loam_mapping_nodelet:
      preprocessed_params:
        saved_submaps_filepath:
          key: /loam_laser_mapping/saved_submaps_filepath
          value: $(rospack find loam)
      roslaunch:
        package: nodelet
        node_type: nodelet
        name: loam_mapping_nodelet
        args: load laser_mapping_nodelet loam_nodelet_manager
        output: screen
        remap_args:
          odometry_topic:
            from: /aft_mapped_to_init_CORRECTED
            to: /loam/odometry
          map_topic:
            from: /laser_map
            to: /loam/map
          submap_topic:
            from: /laser_submap
            to: /loam/submap
          mapping_path_topic:
            from: /laser_mapping_path
            to: /loam/full_path
          registered_point_cloud_topic:
            from: /velodyne_cloud_registered
            to: /loam/registered_point_cloud
          optimized_map_topic:
            from: /laser_map_optimized
            to: /loam/map_optimized
          optimized_mapping_path_topic:
            from: /optimized_path
            to: /loam/full_path_optimized
    loam_transform_maintenance_nodelet:
      roslaunch:
        package: nodelet
        node_type: nodelet
        name: loam_transform_maintenance_nodelet
        args: load laser_transform_maintenance_nodelet loam_nodelet_manager
        output: screen
    loam_maplab_integrator_nodelet_manager:
      roslaunch:
        package: nodelet
        node_type: nodelet
        name: loam_maplab_integrator_nodelet_manager
        args: manager
        output: screen
    loam_maplab_integrator_nodelet:
      roslaunch:
        package: nodelet
        node_type: nodelet
        name: loam_maplab_integrator_nodelet
        args: load laser_graph_integrator_nodelet loam_maplab_integrator_nodelet_manager
        output: screen
        remap_args:
          odometry_topic:
            from: /odometry
            to: /integrated_to_init_CORRECTED
          pointcloud_topic:
            from: /pointcloud
            to: /point_cloud_filter/lidar/point_cloud_filtered
          absolute_constraint_topic:
            from: /absolute_constraints
            to: /anymal/absolute_reference
          anchor_constraint_topic:
            from: /anchor_constraints
            to: /graph_client/anchor_nodes
          submap_constraint_topic:
            from: /submap_constraints
            to: /graph_client/intra_constraints
          optimized_map_topic:
            from: /laser_map_optimized
            to: /loam/map_optimized
          optimized_mapping_path_topic:
            from: /optimized_path
            to: /loam/full_path_optimized
    local_guidance_path_follower:
      preprocessed_params:
        01_controllers_param_file:
          key: /local_guidance_path_follower/local_guidance_controllers_param_file
          value: $(rospack find anymal_c_subt)/config/non_ros/local_guidance/controllers.yaml
        02_controllers_param_file:
          key: /local_guidance_path_follower/local_guidance_controllers_overlay_param_file # overaly, not used for now, use same value as default.
          value: $(rospack find anymal_c_subt)/config/non_ros/local_guidance/controllers.yaml
      roslaunch:
        name: local_guidance_path_follower
        node_type: local_guidance_path_follower_node
        output: screen
        package: local_guidance_path_follower
        respawn: true
    local_guidance_path_manager:
      roslaunch:
        name: local_guidance_path_manager
        node_type: local_guidance_path_manager_node
        output: screen
        package: local_guidance_path_manager
        respawn: true
    mission_manager:
      roslaunch:
        name: mission_manager
        node_type: mission_manager_node
        output: screen
        package: mission_manager
        respawn: true
    monitor_bluetooth_sensor:
      roslaunch:
        name: monitor_bluetooth_sensor
        node_type: status_monitor.py
        output: screen
        package: status_monitor
        respawn: true
    monitor_gas_sensor:
      roslaunch:
        name: monitor_gas_sensor
        node_type: uint16_monitor.py
        output: screen
        package: status_monitor
        respawn: true
    monitor_submap_difference:
      roslaunch:
        name: monitor_submap_difference
        node_type: status_monitor.py
        output: screen
        package: status_monitor
        respawn: true
    msf_initializer_mux:
      roslaunch:
        name: msf_initializer_mux
        node_type: msf_initializer_mux.py
        output: screen
        package: msf_initializer_mux
    msf_loam_alphasense_imu:
      roslaunch:
        name: msf_loam_alphasense_imu
        namespace: msf_loam_alphasense_imu
        node_type: pose_sensor
        output: screen
        package: msf_updates
        remap_args:
          imu_state_input:
            from: /msf_loam_alphasense_imu/msf_core/imu_state_input
            to: /alphasense_driver_ros/imu
          transform_input:
            from: /msf_loam_alphasense_imu/msf_updates/transform_input
            to: /transform_aft_mapped_to_init_CORRECTED
    msf_loam_body_imu:
      roslaunch:
        name: msf_loam_body_imu
        namespace: msf_loam_body_imu
        node_type: pose_sensor
        output: screen
        package: msf_updates
        remap_args:
          imu_state_input:
            from: /msf_loam_body_imu/msf_core/imu_state_input
            to: /sensors/imu
          transform_input:
            from: /msf_loam_body_imu/msf_updates/transform_input
            to: /transform_aft_mapped_to_init_CORRECTED
    multi_topics_demux:
      roslaunch:
        name: multi_topics_demux
        node_type: multi_topics_demux.py
        package: mission_control_helpers
        output: screen
    multi_topics_mux:
      roslaunch:
        name: multi_topics_mux
        node_type: multi_topics_mux.py
        package: mission_control_helpers
        output: screen
    multi_topics_relay_filtered_artifact:
      roslaunch:
        name: multi_topics_relay_filtered_artifact
        node_type: multi_topics_relay.py
        package: mission_control_helpers
        output: screen
    multi_topics_relay_submap_counter:
      roslaunch:
        name: multi_topics_relay_submap_counter
        node_type: multi_topics_relay.py
        package: mission_control_helpers
        output: screen
    network_monitor_mission_control:
      roslaunch:
        name: network_monitor_mission_control
        node_type: network_monitor
        output: log
        package: system_monitor
    network_monitor_jetson:
      roslaunch:
        name: network_monitor_jetson
        node_type: network_monitor
        output: log
        package: system_monitor
        respawn: true
    nimbro_anymal_missionctrl_action_follow:
      roslaunch:
        name: nimbro_anymal_missionctrl_action_follow
        node_type: action_proxy
        output: screen
        package: nimbro_topic_transport
        respawn: true
        remap_args:
          cancel_local:
            from: /nimbro_anymal_missionctrl_action_follow/local/cancel
            to: /darpa_locomotion_mission_bt/follow_path/cancel
          goal_local:
            from: /nimbro_anymal_missionctrl_action_follow/local/goal
            to: /darpa_locomotion_mission_bt/follow_path/goal
          result_local:
            from: /nimbro_anymal_missionctrl_action_follow/local/result
            to: /darpa_locomotion_mission_bt/follow_path/result
          feedback_local:
            from: /nimbro_anymal_missionctrl_action_follow/local/feedback
            to: /darpa_locomotion_mission_bt/follow_path/feedback
          status_local:
            from: /nimbro_anymal_missionctrl_action_follow/local/status
            to: /darpa_locomotion_mission_bt/follow_path/status
          cancel_remote:
            from: /nimbro_anymal_missionctrl_action_follow/remote/cancel
            to: /nimbro_missionctrl_anymal_action_follow/remote/cancel
          goal_remote:
            from: /nimbro_anymal_missionctrl_action_follow/remote/goal
            to: /nimbro_missionctrl_anymal_action_follow/remote/goal
    nimbro_robot_transfolder_missionctrl_tcp_client:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        # Warning: port settings for this node in subt default.yaml, shared across all robots - no need to load "robot_settings.yaml"
      roslaunch:
        name: nimbro_robot_transfolder_missionctrl_tcp_client
        node_type: service_client
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_anymal_missionctrl_sender:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robot_settings.yaml)
      roslaunch:
        name: nimbro_anymal_missionctrl_sender
        node_type: sender
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_anymal_missionctrl_tcp_server:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robot_settings.yaml)
      roslaunch:
        name: nimbro_anymal_missionctrl_tcp_server
        node_type: service_server
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_anymal_missionctrl_receiver:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robot_settings.yaml)
      roslaunch:
        name: nimbro_anymal_missionctrl_receiver
        node_type: receiver
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_anymal_missionctrl_sender_simulation:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robot_settings.yaml)
      roslaunch:
        name: nimbro_anymal_missionctrl_sender_simulation
        node_type: sender
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_sim_anymal_1_missionctrl_receiver:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_sim_anymal_1_missionctrl_receiver
        node_type: receiver
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_sim_anymal_1_missionctrl_sender:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_sim_anymal_1_missionctrl_sender
        node_type: sender
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_sim_anymal_1_missionctrl_tcp_server:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_sim_anymal_1_missionctrl_tcp_server
        node_type: service_server
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_sim_anymal_2_missionctrl_receiver:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_sim_anymal_2_missionctrl_receiver
        node_type: receiver
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_sim_anymal_2_missionctrl_sender:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_sim_anymal_2_missionctrl_sender
        node_type: sender
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_sim_anymal_2_missionctrl_tcp_server:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_sim_anymal_2_missionctrl_tcp_server
        node_type: service_server
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_missionctrl_anymal_action_follow:
      roslaunch:
        name: nimbro_missionctrl_anymal_action_follow
        node_type: action_proxy
        output: screen
        package: nimbro_topic_transport
        respawn: true
        remap_args:
          cancel_local:
            from: /nimbro_missionctrl_anymal_action_follow/local/cancel
            to: /darpa_locomotion_mission_bt/follow_path/cancel
          feedback_local:
            from: /nimbro_missionctrl_anymal_action_follow/local/feedback
            to: /darpa_locomotion_mission_bt/follow_path/feedback
          goal_local:
            from: /nimbro_missionctrl_anymal_action_follow/local/goal
            to: /darpa_locomotion_mission_bt/follow_path/goal
          result_local:
            from: /nimbro_missionctrl_anymal_action_follow/local/result
            to: /darpa_locomotion_mission_bt/follow_path/result
          status_local:
            from: /nimbro_missionctrl_anymal_action_follow/local/status
            to: /darpa_locomotion_mission_bt/follow_path/status
          feedback_remote:
            from: /nimbro_missionctrl_anymal_action_follow/remote/feedback
            to: /nimbro_anymal_missionctrl_action_follow/remote/feedback
          result_remote:
            from: /nimbro_missionctrl_anymal_action_follow/remote/result
            to: /nimbro_anymal_missionctrl_action_follow/remote/result
          status_remote:
            from: /nimbro_missionctrl_anymal_action_follow/remote/status
            to: /nimbro_anymal_missionctrl_action_follow/remote/status
    nimbro_missionctrl_anymal_tcp_client:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robot_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_tcp_client
        node_type: service_client
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_missionctrl_anymal_receiver:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robot_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_receiver
        node_type: receiver
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_sender:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robot_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_sender
        node_type: sender
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_robot_transfolder_tcp_server:
      # Warning: port settings for this node in subt default.yaml, shared across all robots - no need to load "robot_settings.yaml"
      roslaunch:
        name: nimbro_missionctrl_robot_transfolder_tcp_server
        node_type: service_server
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_missionctrl_anymal_receiver_simulation:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robot_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_receiver_simulation
        node_type: receiver
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_1_tcp_client:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_1_tcp_client
        node_type: service_client
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_missionctrl_anymal_1_receiver:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_1_receiver
        node_type: receiver
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_1_sender:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_1_sender
        node_type: sender
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_2_tcp_client:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_2_tcp_client
        node_type: service_client
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_missionctrl_anymal_2_receiver:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_2_receiver
        node_type: receiver
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_2_sender:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_2_sender
        node_type: sender
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_3_tcp_client:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_3_tcp_client
        node_type: service_client
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_missionctrl_anymal_3_receiver:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_3_receiver
        node_type: receiver
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_3_sender:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_3_sender
        node_type: sender
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_4_tcp_client:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_4_tcp_client
        node_type: service_client
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_missionctrl_anymal_4_receiver:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_4_receiver
        node_type: receiver
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_4_sender:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_4_sender
        node_type: sender
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_5_tcp_client:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_5_tcp_client
        node_type: service_client
        output: screen
        package: nimbro_service_transport
        respawn: true
    nimbro_missionctrl_anymal_5_receiver:
      preprocessed_params:
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_5_receiver
        node_type: receiver
        output: screen
        package: nimbro_topic_transport
        respawn: true
    nimbro_missionctrl_anymal_5_sender:
      preprocessed_params:
        01_shared_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/shared_settings.yaml)
        02_robot_settings:
          key: /dummy
          value: $(rosparam load $(rospack find anymal_c_subt)/config/nimbro/robots_sim_control_center_settings.yaml)
      roslaunch:
        name: nimbro_missionctrl_anymal_5_sender
        node_type: sender
        output: screen
        package: nimbro_topic_transport
        respawn: true
    on_demand_elevation_map:
      roslaunch:
        name: on_demand_elevation_map
        node_type: grid_map_on_demand
        output: screen
        package: subt_topic_tools
        respawn: true
    on_demand_lidar1:
      roslaunch:
        name: on_demand_lidar1
        node_type: point_cloud2_on_demand
        output: screen
        package: subt_topic_tools
        respawn: true
    on_demand_lidar1_draco_republisher:
      roslaunch:
        args: draco in:=/on_demand_lidar1/point_cloud raw out:=/on_demand_lidar1/point_cloud/decompressed
        name: on_demand_lidar1_draco_republisher
        node_type: republish
        output: screen
        package: point_cloud_transport
        respawn: true
    on_demand_lidar2:
      roslaunch:
        name: on_demand_lidar2
        node_type: point_cloud2_on_demand
        output: screen
        package: subt_topic_tools
        respawn: true
    on_demand_lidar2_draco_republisher:
      roslaunch:
        args: draco in:=/on_demand_lidar2/point_cloud raw out:=/on_demand_lidar2/point_cloud/decompressed
        name: on_demand_lidar2_draco_republisher
        node_type: republish
        output: screen
        package: point_cloud_transport
        respawn: true
    on_demand_loam_full_path:
      roslaunch:
        name: on_demand_loam_full_path
        node_type: path_on_demand
        output: screen
        package: subt_topic_tools
        respawn: true
    on_demand_loam_full_path_optimized:
      roslaunch:
        name: on_demand_loam_full_path_optimized
        node_type: path_on_demand
        output: screen
        package: subt_topic_tools
        respawn: true
    on_demand_loam_map:
      roslaunch:
        name: on_demand_loam_map
        node_type: point_cloud2_on_demand
        output: screen
        package: subt_topic_tools
        respawn: true
    on_demand_loam_submap:
      roslaunch:
        name: on_demand_loam_submap
        node_type: point_cloud2_on_demand
        output: screen
        package: subt_topic_tools
        respawn: true
    on_demand_loam_map_optimized:
      roslaunch:
        name: on_demand_loam_map_optimized
        node_type: point_cloud2_on_demand
        output: screen
        package: subt_topic_tools
        respawn: true
    on_demand_loam_map_draco_republisher:
      roslaunch:
        args: draco in:=/on_demand_loam/map raw out:=/on_demand_loam/map/decompressed
        name: on_demand_loam_map_draco_republisher
        node_type: republish
        output: screen
        package: point_cloud_transport
        respawn: true
    on_demand_loam_submap_draco_republisher:
      roslaunch:
        args: draco in:=/on_demand_loam/submap raw out:=/on_demand_loam/submap/decompressed
        name: on_demand_loam_submap_draco_republisher
        node_type: republish
        output: screen
        package: point_cloud_transport
        respawn: true
    path_creator:
      roslaunch:
        name: path_creator
        node_type: path_creator_node
        output: screen
        package: path_creator
        respawn: true
    path_logger:
      roslaunch:
        name: path_logger
        node_type: path_logger_node
        output: screen
        package: path_logger
        respawn: true
    pinger:
      roslaunch: &pinger_roslaunch_template
        name: pinger_roslaunch_template
        node_type: pinger_ros.py
        output: screen
        package: rsl_pinger_ros
        respawn: true
    pinger_anymal_to_baserouter:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_anymal_to_baserouter
    pinger_anymal_to_dx2_alpha:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_anymal_to_dx2_alpha
    pinger_anymal_to_dx2_beta:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_anymal_to_dx2_beta
    pinger_anymal_to_dx2_gamma:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_anymal_to_dx2_gamma
    pinger_anymal_to_dx2_delta:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_anymal_to_dx2_delta
    pinger_anymal_to_dx2_epsilon:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_anymal_to_dx2_epsilon
    pinger_anymal_to_dx2_zeta:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_anymal_to_dx2_zeta
    pinger_anymal_to_dx2_eta:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_anymal_to_dx2_eta
    pinger_anymal_to_dx2_theta:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_anymal_to_dx2_theta
    pinger_apc_to_lpc:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_apc_to_lpc
    pinger_apc_to_jetson:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_apc_to_jetson
    pinger_apc_to_npc:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_apc_to_npc
    pinger_jetson_to_lpc:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_jetson_to_lpc
    pinger_jetson_to_npc:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_jetson_to_npc
    pinger_jetson_to_apc:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_jetson_to_apc
    pinger_lpc_to_dx2_onboard:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_lpc_to_dx2_onboard
    pinger_lpc_to_jetson:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_lpc_to_jetson
    pinger_lpc_to_npc:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_lpc_to_npc
    pinger_lpc_to_apc:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_lpc_to_apc
    pinger_missionctrl_to_anymal:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal
    pinger_missionctrl_to_anymal_1:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal_1
    pinger_missionctrl_to_anymal_1_dx2_onboard:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal_1_dx2_onboard
    pinger_missionctrl_to_anymal_2:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal_2
    pinger_missionctrl_to_anymal_2_dx2_onboard:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal_2_dx2_onboard
    pinger_missionctrl_to_anymal_3:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal_3
    pinger_missionctrl_to_anymal_3_dx2_onboard:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal_3_dx2_onboard
    pinger_missionctrl_to_anymal_4:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal_4
    pinger_missionctrl_to_anymal_4_dx2_onboard:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal_4_dx2_onboard
    pinger_missionctrl_to_anymal_5:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal_5
    pinger_missionctrl_to_anymal_5_dx2_onboard:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_anymal_5_dx2_onboard
    pinger_missionctrl_to_baserouter:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_baserouter
    pinger_missionctrl_to_dx2_alpha:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_dx2_alpha
    pinger_missionctrl_to_dx2_beta:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_dx2_beta
    pinger_missionctrl_to_dx2_gamma:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_dx2_gamma
    pinger_missionctrl_to_dx2_delta:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_dx2_delta
    pinger_missionctrl_to_dx2_epsilon:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_dx2_epsilon
    pinger_missionctrl_to_dx2_zeta:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_dx2_zeta
    pinger_missionctrl_to_dx2_eta:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_dx2_eta
    pinger_missionctrl_to_dx2_theta:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_dx2_theta
    pinger_missionctrl_to_es1_base_station:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_missionctrl_to_es1_base_station
    pinger_npc_to_apc:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_npc_to_apc
    pinger_npc_to_jetson:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_npc_to_jetson
    pinger_npc_to_lpc:
      roslaunch:
        <<: *pinger_roslaunch_template
        name: pinger_npc_to_lpc
    ping_monitor_anymal:
      roslaunch:
        name: ping_monitor_anymal
        node_type: ping_monitor.py
        output: screen
        package: ping_monitor
        respawn: true
    ping_monitor_mission_control:
      roslaunch:
        name: ping_monitor_mission_control
        node_type: ping_monitor.py
        output: screen
        package: ping_monitor
        respawn: true
    ping_monitor_mission_control_center:
      roslaunch:
        name: ping_monitor_mission_control_center
        node_type: ping_monitor.py
        output: screen
        package: ping_monitor
        respawn: true
    relay_and_throttle_bpearl_front_to_gbplanner:
        roslaunch: # act as simple straigthforward relay on a different topic - no dropping
          args: /point_cloud_filter_subt/bpearl_front/point_cloud_filtered 0 1 /gbplanner/input_point_cloud
          name: relay_and_throttle_bpearl_front_to_gbplanner
          node_type: drop
          output: screen
          package: topic_tools
          respawn: true
    relay_and_throttle_bpearl_rear_to_gbplanner:
        roslaunch: # act as simple straigthforward relay on a different topic - no dropping
          args: /point_cloud_filter_subt/bpearl_rear/point_cloud_filtered 0 1 /gbplanner/input_point_cloud
          name: relay_and_throttle_bpearl_rear_to_gbplanner
          node_type: drop
          output: screen
          package: topic_tools
          respawn: true
    relay_and_throttle_lidar_to_gbplanner:
        roslaunch:
          args: /point_cloud_filter/lidar/point_cloud_filtered 1 2 /gbplanner/input_point_cloud
          name: relay_and_throttle_lidar_to_gbplanner
          node_type: drop
          output: screen
          package: topic_tools
          respawn: true
    relay_and_throttle_sim_cam_left_to_image_to_map:
        roslaunch:
          args: messages /alphasense_driver_ros/cam3/image_raw/compressed 3.0 /alphasense_driver_ros/cam3/dropped/debayered/bright/compressed
          name: relay_and_throttle_sim_cam_left_to_image_to_map
          node_type: throttle
          output: screen
          package: topic_tools
          respawn: true
    relay_and_throttle_sim_cam_front_to_image_to_map:
        roslaunch:
          args: messages /alphasense_driver_ros/cam4/image_raw/compressed 3.0 /alphasense_driver_ros/cam4/dropped/debayered/bright/compressed
          name: relay_and_throttle_sim_cam_front_to_image_to_map
          node_type: throttle
          output: screen
          package: topic_tools
          respawn: true
    relay_and_throttle_sim_cam_right_to_image_to_map:
        roslaunch:
          args: messages /alphasense_driver_ros/cam5/image_raw/compressed 3.0 /alphasense_driver_ros/cam5/dropped/debayered/bright/compressed
          name: relay_and_throttle_sim_cam_right_to_image_to_map
          node_type: throttle
          output: screen
          package: topic_tools
          respawn: true
    relay_and_throttle_sim_cam_upwards_to_image_to_map:
        roslaunch:
          args: messages /alphasense_driver_ros/cam6/image_raw/compressed 3.0 /alphasense_driver_ros/cam6/dropped/debayered/bright/compressed
          name: relay_and_throttle_sim_cam_upwards_to_image_to_map
          node_type: throttle
          output: screen
          package: topic_tools
          respawn: true
    replay_helper_reported_artifact:
      roslaunch:
        name: replay_helper_reported_artifact
        node_type: replay_helper_reported_artifact.py
        output: screen
        package: replay_helpers
        respawn: true
    rosbag_record_robot_apc_subt_background:
      roslaunch:
        args: record --split --duration=5m --lz4 -o anymal_apc -e /cpu_monitor_apc/status /network_monitor_apc/status /chrony_monitor_apc/status /memory_monitor_apc/status /disk_monitor_apc/status /pinger_apc_to_lpc/ping /pinger_apc_to_npc/ping /pinger_apc_to_jetson/ping /subt_cpu_loupe_apc/cpu_loupe
        name: anymal_apc_logger
        node_type: record
        package: rosbag
    rosbag_record_robot_jetson_subt_background:
      roslaunch:
        args: record --split --duration=5m --lz4 -o anymal_jetson -e /network_monitor_jetson/status /chrony_monitor_jetson/status /memory_monitor_jetson/status /disk_monitor_jetson/status /gpu_monitor_jetson /pinger_jetson_to_lpc/ping /pinger_jetson_to_npc/ping /pinger_jetson_to_apc /subt_cpu_loupe_jetson/cpu_loupe
        name: anymal_jetson_logger
        node_type: record
        package: rosbag
    rosbag_record_robot_lpc_subt_background:
      roslaunch:
        args: record --split --duration=5m --lz4 -o anymal_lpc -e /cpu_monitor_lpc/status /network_monitor_lpc/status /chrony_monitor_lpc/status /memory_monitor_lpc/status /disk_monitor_lpc/status /anymal_low_level_controller/actuator_readings_extended_throttled /pdb/battery_state /pdb/power_state /soft_emcy_stop /state_estimator/anymal_state_throttle /twist_mux/twist /pinger_lpc_to_dx2_onboard/ping /pinger_lpc_to_jetson/ping /pinger_lpc_to_npc/ping /subt_cpu_loupe_lpc/cpu_loupe
        name: anymal_lpc_logger
        node_type: record
        package: rosbag
    rosbag_record_robot_npc_subt_background:
      roslaunch:
        args: record --split --duration=5m --lz4 -o anymal_npc -e /cpu_monitor_npc/status /network_monitor_npc/status /chrony_monitor_npc/status /memory_monitor_npc/status /disk_monitor_npc/status /pinger_npc_to_jetson/ping /pinger_npc_to_lpc/ping /subt_cpu_loupe_npc/cpu_loupe
        name: anymal_npc_logger
        node_type: record
        package: rosbag
    rosbag_record_mission_control:
      roslaunch:
        args: record --split --duration=5m -o mission_control -e "/anymal_(.*)/(.*)" "/network/(.*)" "/pinger_missionctrl_to(.*)" /current_robot_name /global_planner/waypoint_request /nimbro_missionctrl_anymal_action_follow/remote/cancel /nimbro_missionctrl_anymal_action_follow/remote/goal /cpu_monitor_mission_control/status /network_monitor_mission_control/status
        name: rosbag_record_mission_control
        node_type: record
        package: rosbag
    rosbag_record_robot_coordinator:
      roslaunch:
        name: rosbag_record_robot_coordinator
        node_type: rosbag_record_coordinator.py
        output: screen
        package: supervision_helpers
        respawn: true
    rosbag_record_robot_apc:
      roslaunch:
        name: rosbag_record_robot_apc
        node_type: rosbag_record_node.py
        output: screen
        package: supervision_helpers
        respawn: true
    rosbag_record_robot_jetson:
      roslaunch:
        name: rosbag_record_robot_jetson
        node_type: rosbag_record_node.py
        output: screen
        package: supervision_helpers
        respawn: true
    rosbag_record_robot_lpc:
      roslaunch:
        name: rosbag_record_robot_lpc
        node_type: rosbag_record_node.py
        output: screen
        package: supervision_helpers
        respawn: true
    rosbag_record_robot_npc:
      roslaunch:
        name: rosbag_record_robot_npc
        node_type: rosbag_record_node.py
        output: screen
        package: supervision_helpers
        respawn: true
    rosserial_arduino_mega:
      roslaunch:
        name: rosserial_arduino_mega
        node_type: serial_node.py
        output: screen
        package: rosserial_python
        respawn: true
    rovio:
      roslaunch:
        name: rovio
        package: rovio
        node_type: rovio_node
        output: screen
        respawn: true
        remap_args:
          imu_topic:
            from: imu0
            to: /alphasense_driver_ros/imu
          camera0_topic:
            from: cam0/image_raw
            to: /alphasense_driver_ros/cam0
          lidar_topic:
            from: lidar/pcl
            to: /point_cloud_filter/lidar/point_cloud_filtered_IGNORE_FOR_NOW
    rqt_gui:
      preprocessed_params:
        roslaunch_args:
          key: /stack_launcher/nodes/rqt_gui/roslaunch/args
          value: --force-discover --clear-config --freeze-layout --lock-perspective --hide-title --perspective-file $(rospack find anymal_c_subt)/config/ui/rqt.perspective
      roslaunch:
        name: rqt_gui
        node_type: rqt_gui
        output: screen
        package: rqt_gui
        respawn: true
    rqt_gui_mission_control:
      preprocessed_params:
        roslaunch_args:
          key: /stack_launcher/nodes/rqt_gui_mission_control/roslaunch/args
          value: --force-discover --clear-config --perspective-file $(rospack find anymal_c_subt)/config/ui/mission_control/rqt.perspective
      roslaunch:
        name: rqt_gui_mission_control
        node_type: rqt_gui
        output: screen
        package: rqt_gui
        respawn: true
    rqt_gui_mission_control_center:
      preprocessed_params:
        roslaunch_args:
          key: /stack_launcher/nodes/rqt_gui_mission_control_center/roslaunch/args
          value: --force-discover --clear-config --perspective-file $(rospack find anymal_c_subt)/config/ui/mission_control_center/rqt.perspective
      roslaunch:
        name: rqt_gui_mission_control_center
        node_type: rqt_gui
        output: screen
        package: rqt_gui
        respawn: true
    rqt_gui_mission_setup:
      preprocessed_params:
        roslaunch_args:
          key: /stack_launcher/nodes/rqt_gui_mission_setup/roslaunch/args
          value: --force-discover --clear-config --freeze-layout --lock-perspective --hide-title --perspective-file $(rospack find anymal_c_subt)/config/ui/mission_setup/mission_setup_rqt.perspective
      roslaunch:
        name: rqt_gui_mission_setup
        node_type: rqt_gui
        output: screen
        package: rqt_gui
        respawn: true
    rqt_helper_save_map_darpa_tf:
      roslaunch:
        name: rqt_helper_save_map_darpa_tf
        node_type: rqt_helper_save_map_darpa_tf.py
        output: screen
        package: supervision_helpers
        respawn: true
    rqt_helper_wifi_beacon_maplab_marker:
      roslaunch:
        name: rqt_helper_wifi_beacon_maplab_marker
        node_type: rqt_helper_wifi_beacon_maplab_marker.py
        output: screen
        package: base_station_reporting_helpers
        respawn: true
    rviz:
      preprocessed_params:
        roslaunch_args:
          key: /stack_launcher/nodes/rviz/roslaunch/args
          value: --display-config $(rospack find anymal_c_subt)/config/ui/config.rviz --splash-screen $(rospack find anymal_c_subt)/config/ui/splash.png
      roslaunch:
        name: rviz
        node_type: rviz
        output: screen
        package: rviz
        respawn: true
    rviz_mission_control:
      preprocessed_params:
        roslaunch_args:
          key: /stack_launcher/nodes/rviz_mission_control/roslaunch/args
          value: --display-config $(rospack find anymal_c_subt)/config/ui/mission_control/config.rviz --splash-screen $(rospack find anymal_c_subt)/config/ui/splash.png
      roslaunch:
        name: rviz_mission_control
        node_type: rviz
        output: screen
        package: rviz
        respawn: true
    rviz_mission_control_center:
      preprocessed_params:
        roslaunch_args:
          key: /stack_launcher/nodes/rviz_mission_control_center/roslaunch/args
          value: --display-config $(rospack find anymal_c_subt)/config/ui/mission_control_center/config.rviz --splash-screen $(rospack find anymal_c_subt)/config/ui/splash.png
      roslaunch:
        name: rviz_mission_control_center
        node_type: rviz
        output: screen
        package: rviz
        respawn: true
    rviz_mission_setup:
      preprocessed_params:
        roslaunch_args:
          key: /stack_launcher/nodes/rviz_mission_setup/roslaunch/args
          value: --display-config $(rospack find anymal_c_subt)/config/ui/mission_setup/mission_setup_config.rviz --splash-screen $(rospack find anymal_c_subt)/config/ui/splash.png
      roslaunch:
        name: rviz_mission_setup
        node_type: rviz
        output: screen
        package: rviz
        respawn: true
    safety_checker:
      roslaunch:
        name: safety_checker
        node_type: safety_checker_node.py
        output: screen
        package: safety_checker
        respawn: true
    status_monitor_behavior_tree:
      roslaunch:
        name: status_monitor_behavior_tree
        node_type: status_monitor.py
        output: screen
        package: status_monitor
        respawn: true
    selective_tf_snapshot_relay:
      roslaunch:
        args: /tf_selective_snapshooter/tf_snapshot /tf
        name: selective_tf_snapshot_relay
        node_type: relay
        output: screen
        package: topic_tools
        respawn: true
    subt_cpu_loupe_apc:
      roslaunch:
        name: subt_cpu_loupe_apc
        node_type: cpu_loupe.py
        package: subt_cpu_loupe
    subt_cpu_loupe_jetson:
      roslaunch:
        name: subt_cpu_loupe_jetson
        node_type: cpu_loupe.py
        package: subt_cpu_loupe
    subt_cpu_loupe_lpc:
      roslaunch:
        name: subt_cpu_loupe_lpc
        node_type: cpu_loupe.py
        package: subt_cpu_loupe
    subt_cpu_loupe_npc:
      roslaunch:
        name: subt_cpu_loupe_npc
        node_type: cpu_loupe.py
        package: subt_cpu_loupe
    subt_xbee_estop:
      roslaunch:
        name: subt_xbee_estop
        node_type: subt_xbee_estop_node
        output: screen
        package: subt_xbee_estop
        respawn: true
    tensorrt_artifact_detection_combined:
      roslaunch:
        name: tensorrt_artifact_detection_combined
        node_type: trt_yolo_v3_batch.py
        output: screen
        package: yolo_trt_ros
        respawn: true
        remap_args:
          front_detection:
            from: /tensorrt_artifact_detection_combined/detection_image_0
            to: /tensorrt_artifact_detection_front/detection_image_0
          left_detection:
            from: /tensorrt_artifact_detection_combined/detection_image_1
            to: /tensorrt_artifact_detection_left/detection_image_0
          right_detection:
            from: /tensorrt_artifact_detection_combined/detection_image_2
            to: /tensorrt_artifact_detection_right/detection_image_0
          upwards_detection:
            from: /tensorrt_artifact_detection_combined/detection_image_3
            to: /tensorrt_artifact_detection_upwards/detection_image_0
          front_boundig_box:
            from: /tensorrt_artifact_detection_combined/bounding_boxes_0
            to: /tensorrt_artifact_detection_front/bounding_boxes_0
          left_boundig_box:
            from: /tensorrt_artifact_detection_combined/bounding_boxes_1
            to: /tensorrt_artifact_detection_left/bounding_boxes_0
          right_boundig_box:
            from: /tensorrt_artifact_detection_combined/bounding_boxes_2
            to: /tensorrt_artifact_detection_right/bounding_boxes_0
          rear_boundig_box:
            from: /tensorrt_artifact_detection_combined/bounding_boxes_3
            to: /tensorrt_artifact_detection_upwards/bounding_boxes_0
    tensorrt_artifact_detection_zoom_camera:
      roslaunch:
        name: tensorrt_artifact_detection_zoom_camera
        node_type: trt_yolo_v3_batch.py
        output: screen
        package: yolo_trt_ros
        respawn: true
    tensorrt_artifact_detection_front:
      roslaunch:
        name: tensorrt_artifact_detection_front
        node_type: trt_yolo_v3_batch.py
        output: screen
        package: yolo_trt_ros
        respawn: true
    tensorrt_artifact_detection_left:
      roslaunch:
        name: tensorrt_artifact_detection_left
        node_type: trt_yolo_v3_batch.py
        output: screen
        package: yolo_trt_ros
        respawn: true
    tensorrt_artifact_detection_right:
      roslaunch:
        name: tensorrt_artifact_detection_right
        node_type: trt_yolo_v3_batch.py
        output: screen
        package: yolo_trt_ros
        respawn: true
    tensorrt_artifact_detection_upwards:
      roslaunch:
        name: tensorrt_artifact_detection_upwards
        node_type: trt_yolo_v3_batch.py
        output: screen
        package: yolo_trt_ros
        respawn: true
    tf_fake_map_to_darpa_connector:
      roslaunch:
        args: 1 1 1.5 0.785398 0 0 map darpa 200
        name: tf_fake_map_to_darpa_connector
        node_type: static_transform_publisher
        package: tf
    tf2_fake_map_to_darpa_connector:
      roslaunch:
        args: 1 0 0 0 0 0 1 map darpa
        name: tf2_fake_map_to_darpa_connector
        node_type: static_transform_publisher
        package: tf2_ros
    tf_selective_snapshooter:
      roslaunch:
        name: tf_selective_snapshooter
        node_type: tf_selective_snapshooter.py
        output: screen
        package: tf_selective_snapshooter
        respawn: true
    tf_odom_to_map_connector:
      roslaunch:
        args: 0 0 0 0 0 0 1 odom map 200
        name: tf_static_odom_map
        node_type: static_transform_publisher
        package: tf
    twist_filter_ros:
      roslaunch:
        name: twist_filter_ros
        node_type: twist_filter_ros_node
        output: screen
        package: twist_filter_ros
        respawn: true
    waypoint_interactive_marker:
      roslaunch:
        name: waypoint_interactive_marker
        node_type: waypoint_interactive_marker.py
        package: subt_interactive_markers
        output: screen
###########################
## Stack Launcher Stacks ##
###########################
  stacks:
    alphasense:
      nodes:
        alphasense_driver_ros:
          enabled: true
          name: alphasense_driver_ros
        alphasense_drop_front_color_camera:
          enabled: true
          name: alphasense_drop_front_color_camera
        alphasense_drop_left_color_camera:
          enabled: true
          name: alphasense_drop_left_color_camera
        alphasense_drop_right_color_camera:
          enabled: true
          name: alphasense_drop_right_color_camera
        alphasense_drop_upwards_color_camera:
          enabled: true
          name: alphasense_drop_upwards_color_camera
    alphasense_front_camera_standalone:
      nodes:
        alphasense_driver_ros:
          enabled: true
          name: alphasense_driver_ros
        alphasense_drop_front_color_camera_standalone:
          enabled: true
          name: alphasense_drop_front_color_camera_standalone
    apc_subt:
      stacks:
        apc_drivers:
          enabled: false
          name: apc_drivers
        apc_subt_background:
          enabled: true
          name: apc_subt_background
        apc_subt_usb_drivers:
          enabled: true
          name: apc_subt_usb_drivers
        elevation_mapping_anybotics:
          enabled: false
          name: elevation_mapping_anybotics
        git_branch_dump_config:
          enabled: true
          name: git_branch_dump_config
        inspection_head_stack:
          enabled: false
          name: inspection_head_stack
    apc_subt_background:
      nodes:
        chrony_monitor:
          enabled: true
          name: chrony_monitor_apc
        cpu_monitor:
          enabled: true
          name: cpu_monitor_apc
        memory_monitor:
          enabled: true
          name: memory_monitor_apc
        network_monitor:
          enabled: true
          name: network_monitor_apc
        disk_monitor:
          enabled: true
          name: disk_monitor_apc
        pinger_apc_to_npc:
          enabled: true
          name: pinger_apc_to_npc
        pinger_apc_to_lpc:
          enabled: true
          name: pinger_apc_to_lpc
        pinger_apc_to_jetson:
          enabled: true
          name: pinger_apc_to_jetson
        rosbag_record_robot_apc:
          enabled: true
          name: rosbag_record_robot_apc
        rosbag_record_robot_apc_subt_background:
          enabled: true
          name: rosbag_record_robot_apc_subt_background
        subt_cpu_loupe_apc:
          enabled: true
          name: subt_cpu_loupe_apc
    apc_subt_usb_drivers:
      nodes:
        rosserial_arduino_mega:
          enabled: true
          name: rosserial_arduino_mega
        bluetooth_reader:
          enabled: true
          name: bluetooth_reader
        subt_xbee_estop:
          enabled: false
          name: subt_xbee_estop
    apriltags_detection:
      nodes:
        apriltags2_ros_continuous_node:
          enabled: true
          name: apriltags2_ros_continuous_node
    artifact_detection_subt:
      stacks:
        artifact_detection_darknet_subt:
          enabled: false
          name: artifact_detection_darknet_subt
        artifact_detection_tensorrt_single_instances_subt:
          enabled: true
          name: artifact_detection_tensorrt_single_instances_subt
        artifact_detection_tensorrt_combined_subt:
          enabled: false
          name: artifact_detection_tensorrt_combined_subt
        artifact_detection_helpers_subt:
          enabled: true
          name: artifact_detection_helpers_subt
    artifact_detection_darknet_subt:
      nodes:
        darknet_ros_camera_front:
          enabled: true
          name: darknet_ros_camera_front
        darknet_ros_camera_left:
          enabled: true
          name: darknet_ros_camera_left
        darknet_ros_camera_right:
          enabled: true
          name: darknet_ros_camera_right
    artifact_detection_tensorrt_combined_subt:
      nodes:
        tensorrt_artifact_detection_combined:
          enabled: true
          name: tensorrt_artifact_detection_combined
        tensorrt_artifact_detection_zoom_camera:
          enabled: false
          name: tensorrt_artifact_detection_zoom_camera
    artifact_detection_tensorrt_single_instances_subt:
      nodes:
        tensorrt_artifact_detection_front:
          enabled: true
          name: tensorrt_artifact_detection_front
        tensorrt_artifact_detection_left:
          enabled: true
          name: tensorrt_artifact_detection_left
        tensorrt_artifact_detection_right:
          enabled: true
          name: tensorrt_artifact_detection_right
        tensorrt_artifact_detection_upwards:
          enabled: true
          name: tensorrt_artifact_detection_upwards
        tensorrt_artifact_detection_zoom_camera:
          enabled: false
          name: tensorrt_artifact_detection_zoom_camera
    artifact_detection_helpers_subt:
      nodes:
        debayer_cuda_camera_front:
          enabled: true
          name: debayer_cuda_camera_front
        debayer_cuda_camera_right:
          enabled: true
          name: debayer_cuda_camera_right
        debayer_cuda_camera_left:
          enabled: true
          name: debayer_cuda_camera_left
        debayer_cuda_camera_upwards:
          enabled: true
          name: debayer_cuda_camera_upwards
        artifact_images_nodelet_manager:
          enabled: true
          name: artifact_images_nodelet_manager
    artifact_reporting_subt:
      nodes:
        bayesian_artifact_filter:
          enabled: true
          name: bayesian_artifact_filter
        image_to_map:
          enabled: true
          name: image_to_map
        bluetooth_gas_detector:
          enabled: true
          name: bluetooth_gas_detector
    autonomy_subt:
      stacks:
        local_guidance_subt:
          enabled: true
          name: local_guidance_subt
        mission_autonomy_subt:
          enabled: true
          name: mission_autonomy_subt
        safety_check_subt:
          enabled: true
          name: safety_check_subt
    bpearl_robot_self_filter_subt:
      stacks:
        bpearl_robot_self_filter:
          enabled: true
          name: bpearl_robot_self_filter
        bpearl_robot_self_filter_helpers_subt:
          enabled: true
          name: bpearl_robot_self_filter_helpers_subt
    bpearl_robot_self_filter_sim_subt:
      stacks:
        bpearl_robot_self_filter_sim:
          enabled: true
          name: bpearl_robot_self_filter_sim
        bpearl_robot_self_filter_helpers_subt:
          enabled: true
          name: bpearl_robot_self_filter_helpers_subt
    bpearl_robot_self_filter_helpers_subt:
      nodes:
        bpearl_drop_front_filter_subt:
          enabled: true # TODO (marcot,zsamuel) see when to remove this
          name: bpearl_drop_front_filter_subt
        bpearl_drop_rear_filter_subt:
          enabled: true # TODO (marcot,zsamuel) see when to remove this
          name: bpearl_drop_rear_filter_subt
        bpearl_point_cloud_filter_subt:
          enabled: true
          name: bpearl_point_cloud_filter_subt
    depth_camera_processing_rsl:
      nodes:
        depth_camera_front_plane_detector:
          enabled: false
          name: depth_camera_front_plane_detector
        depth_camera_left_plane_detector:
          enabled: false
          name: depth_camera_left_plane_detector
        depth_camera_rear_plane_detector:
          enabled: false
          name: depth_camera_rear_plane_detector
        depth_camera_right_plane_detector:
          enabled: false
          name: depth_camera_right_plane_detector
    depth_camera_processing_subt:
      nodes:
        depth_camera_front_point_cloud_filter:
          enabled: true
          name: depth_camera_front_point_cloud_filter
        depth_camera_left_point_cloud_filter:
          enabled: true
          name: depth_camera_left_point_cloud_filter
        depth_camera_rear_point_cloud_filter:
          enabled: true
          name: depth_camera_rear_point_cloud_filter
        depth_camera_right_point_cloud_filter:
          enabled: true
          name: depth_camera_right_point_cloud_filter
    sim_elevation_mapping_subt:
      nodes:
        elevation_mapping:
          enabled: true
          name: elevation_mapping
        point_cloud_filter:
          enabled: true
          name: point_cloud_filter
    git_branch_dump_config:
      nodes:
        dump_git_branch_config:
          enabled: true
          name: dump_git_branch_config
    global_planner_subt:
      nodes:
        base_subt_to_map_in_map:
          enabled: true
          name: base_subt_to_map_in_map
        gbplanner:
          enabled: true
          name: gbplanner
        gbplanner_pci_anymal:
          enabled: true
          name: gbplanner_pci_anymal
        tf_odom_to_map_connector:
          enabled: false
          name: tf_odom_to_map_connector
    inspection_head:
      nodes:
        inspection_head:
          enabled: true
          name: inspection_head
    inspection_head_helpers:
      nodes:
        inspection_head_dropped_zoom:
          enabled: true
          name: inspection_head_dropped_zoom
        inspection_head_scanned_images:
          enabled: true
          name: inspection_head_scanned_images
    inspection_head_stack:
      stacks:
        application:
          enabled: true
          name: application
        inspection_head_helpers:
          enabled: true
          name: inspection_head_helpers
        inspection_head:
          enabled: true
          name: inspection_head
    jetson_subt:
      stacks:
        artifact_detection_subt:
          enabled: true
          name: artifact_detection_subt
        git_branch_dump_config:
          enabled: true
          name: git_branch_dump_config
        jetson: # RSL stack
          enabled: true
          name: jetson
        jetson_subt_background:
          enabled: true
          name: jetson_subt_background
        motion_cost:
          enabled: true
          name: motion_cost
    jetson_subt_background:
      nodes:
        chrony_monitor:
          enabled: true
          name: chrony_monitor_jetson
        disk_monitor:
          enabled: true
          name: disk_monitor_jetson
        gpu_monitor:
          enabled: true
          name: gpu_monitor_jetson
        memory_monitor:
          enabled: true
          name: memory_monitor_jetson
        network_monitor:
          enabled: true
          name: network_monitor_jetson
        pinger_jetson_to_apc:
          enabled: false
          name: pinger_jetson_to_apc
        pinger_jetson_to_lpc:
          enabled: true
          name: pinger_jetson_to_lpc
        pinger_jetson_to_npc:
          enabled: true
          name: pinger_jetson_to_npc
        rosbag_record_robot_jetson:
          enabled: true
          name: rosbag_record_robot_jetson
        rosbag_record_robot_jetson_subt_background:
          enabled: true
          name: rosbag_record_robot_jetson_subt_background
        subt_cpu_loupe_jetson:
          enabled: true
          name: subt_cpu_loupe_jetson
    mission_autonomy_subt:
      nodes:
        darpa_locomotion_mission_bt:
          enabled: true
          name: darpa_locomotion_mission_bt
        mission_manager:
          enabled: false
          name: mission_manager
        path_logger:
          enabled: true
          name: path_logger
        pinger_anymal_to_baserouter:
          enabled: true
          name: pinger_anymal_to_baserouter
        pinger_anymal_to_dx2_alpha:
          enabled: true
          name: pinger_anymal_to_dx2_alpha
        pinger_anymal_to_dx2_beta:
          enabled: true
          name: pinger_anymal_to_dx2_beta
        pinger_anymal_to_dx2_gamma:
          enabled: true
          name: pinger_anymal_to_dx2_gamma
        pinger_anymal_to_dx2_delta:
          enabled: true
          name: pinger_anymal_to_dx2_delta
        pinger_anymal_to_dx2_epsilon:
          enabled: true
          name: pinger_anymal_to_dx2_epsilon
        pinger_anymal_to_dx2_zeta:
          enabled: true
          name: pinger_anymal_to_dx2_zeta
        pinger_anymal_to_dx2_eta:
          enabled: true
          name: pinger_anymal_to_dx2_eta
        pinger_anymal_to_dx2_theta:
          enabled: true
          name: pinger_anymal_to_dx2_theta
    motion_cost:
      nodes:
        gpu_path_optimizer:
          enabled: true
          name: gpu_path_optimizer
    loam:
      nodes:
        loam_nodelet_manager:
          enabled: true
          name: loam_nodelet_manager
        loam_multiscan_registration_nodelet:
          enabled: true
          name: loam_multiscan_registration_nodelet
        loam_odometry_nodelet:
          enabled: true
          name: loam_odometry_nodelet
        loam_mapping_nodelet:
          enabled: true
          name: loam_mapping_nodelet
        loam_transform_maintenance_nodelet:
          enabled: true
          name: loam_transform_maintenance_nodelet
        loam_maplab_integrator_nodelet_manager:
          enabled: false
          name: loam_maplab_integrator_nodelet_manager
        loam_maplab_integrator_nodelet:
          enabled: false
          name: loam_maplab_integrator_nodelet
        localization_manager:
          enabled: true
          name: localization_manager
    slam_static_tf_publishers:
      nodes:
        loam_correction_publisher:
          enabled: true
          name: loam_correction_publisher
        loam_map_publisher:
          enabled: true
          name: loam_map_publisher
        loam_map_inverted_publisher:
          enabled: false
          name: loam_map_inverted_publisher
    lidar_cloud_subt:
      stacks:
        lidar_cloud_driver_subt:
          enabled: true
          name: lidar_cloud_driver_subt
        lidar_cloud_common_subt:
          enabled: true
          name: lidar_cloud_common_subt
    lidar_cloud_driver_subt:
      nodes:
        lidar_nodelet_driver_subt:
          enabled: true
          name: lidar_nodelet_driver_subt
    lidar_cloud_common_subt:
      nodes:
        lidar_nodelet_transform_subt:
          enabled: true
          name: lidar_nodelet_transform_subt
        lidar_nodelet_manager:
          enabled: true
          name: lidar_nodelet_manager
    local_guidance_subt:
      nodes:
        attitude_based_throttler:
          enabled: true
          name: attitude_based_throttler
        local_guidance_path_follower:
          enabled: true
          name: local_guidance_path_follower
        local_guidance_path_manager:
          enabled: true
          name: local_guidance_path_manager
    local_planner_subt:
      nodes:
        art_planner_subt:
          enabled: true
          name: art_planner_subt
        art_planner_plan_to_goal_client:
          enabled: false
          name: art_planner_plan_to_goal_client
    locomotion_subt:
      stacks:
        locomotion:
          enabled: true
          name: locomotion
        locomotion_subt_relay:
          enabled: true
          name: locomotion_subt_relay
    locomotion_subt_relay:
      nodes:
        relay_and_throttle_bpearl_front_to_gbplanner:
          enabled: true
          name: relay_and_throttle_bpearl_front_to_gbplanner
        relay_and_throttle_bpearl_rear_to_gbplanner:
          enabled: true
          name: relay_and_throttle_bpearl_rear_to_gbplanner
    lpc_subt:
      stacks:
        artifact_reporting_subt:
          enabled: true
          name: artifact_reporting_subt
        autonomy_subt:
          enabled: true
          name: autonomy_subt
        bpearl_robot_self_filter_subt:
          enabled: true
          name: bpearl_robot_self_filter_subt
        git_branch_dump_config:
          enabled: true
          name: git_branch_dump_config
        global_planner_subt:
          enabled: true
          name: global_planner_subt
        locomotion_subt:
          enabled: true
          name: locomotion_subt
        lpc_drivers:
          enabled: true
          name: lpc_drivers
        lpc_rsl_background:
          enabled: true
          name: lpc_rsl_background
        lpc_rsl_drivers:
          enabled: true
          name: lpc_rsl_drivers
        lpc_subt_background:
          enabled: true
          name: lpc_subt_background
        lpc_subt_drivers:
          enabled: true
          name: lpc_subt_drivers
        robot_subt_teleoperation:
          enabled: true
          name: robot_subt_teleoperation
    lpc_subt_background:
      nodes:
        chrony_monitor:
          enabled: true
          name: chrony_monitor_lpc
        cpu_monitor:
          enabled: true
          name: cpu_monitor_lpc
        disk_monitor:
          enabled: true
          name: disk_monitor_lpc
        hbc_joystick_inverter:
          enabled: true
          name: hbc_joystick_inverter
        memory_monitor:
          enabled: true
          name: memory_monitor_lpc
        network_monitor:
          enabled: true
          name: network_monitor_lpc
        pinger_lpc_to_dx2_onboard:
          enabled: true
          name: pinger_lpc_to_dx2_onboard
        pinger_lpc_to_jetson:
          enabled: true
          name: pinger_lpc_to_jetson
        pinger_lpc_to_npc:
          enabled: true
          name: pinger_lpc_to_npc
        pinger_lpc_to_apc:
          enabled: false
          name: pinger_lpc_to_apc
        rosbag_record_robot_coordinator:
          enabled: true
          name: rosbag_record_robot_coordinator
        rosbag_record_robot_lpc:
          enabled: true
          name: rosbag_record_robot_lpc
        rosbag_record_robot_lpc_subt_background:
          enabled: true
          name: rosbag_record_robot_lpc_subt_background
        subt_cpu_loupe_lpc:
          enabled: true
          name: subt_cpu_loupe_lpc
    lpc_subt_drivers:
      nodes:
        rosserial_arduino_mega:
          enabled: true
          name: rosserial_arduino_mega
    mission_control:
      stacks:
        git_branch_dump_config:
          enabled: true
          name: git_branch_dump_config
        mission_control_background:
          enabled: true
          name: mission_control_background
        mission_control_teleoperation:
          enabled: true
          name: mission_control_teleoperation
        mission_control_teleoperation_common:
          enabled: true
          name: mission_control_teleoperation_common
        mission_control_feedback:
          enabled: true
          name: mission_control_feedback
        user_interface_mission_control_subt:
          enabled: true
          name: user_interface_mission_control_subt
        mission_control_pingers:
          enabled: true
          name: mission_control_pingers
        user_interface_navigation_subt:
          enabled: true
          name: user_interface_navigation_subt
    mission_control_background:
      nodes:
        cpu_monitor:
          enabled: true
          name: cpu_monitor_mission_control
        network_monitor:
          enabled: true
          name: network_monitor_mission_control
        rosbag_record_mission_control:
          enabled: true
          name: rosbag_record_mission_control
    mission_control_center:
      stacks:
        git_branch_dump_config:
          enabled: true
          name: git_branch_dump_config
        mission_control_center_feedback:
          enabled: true
          name: mission_control_center_feedback
        mission_control_center_teleoperation:
          enabled: true
          name: mission_control_center_teleoperation
        mission_control_background:
          enabled: true
          name: mission_control_background
        mission_control_center_pingers:
          enabled: true
          name: mission_control_center_pingers
        user_interface_mission_control_center_subt:
          enabled: true
          name: user_interface_mission_control_center_subt
        user_interface_navigation_subt:
          enabled: true
          name: user_interface_navigation_subt
    mission_control_center_sim:
      stacks:
        mission_control_center:
          enabled: true
          name: mission_control_center
        mission_control_sim_nimbro:
          enabled: true
          name: mission_control_sim_nimbro
    mission_control_center_feedback:
      nodes:
        bluetooth_viz: # TODO marcot - what do to with bluetooth_viz with multiple anymals?
          enabled: false
          name: bluetooth_viz
        monitor_submap_difference:
          enabled: true
          name: monitor_submap_difference
        ping_monitor_mission_control_center:
          enabled: true
          name: ping_monitor_mission_control_center
        homing_proxy_timer_ros_anymal_1:
          enabled: true
          name: homing_proxy_timer_ros_anymal_1
        homing_proxy_timer_ros_anymal_2:
          enabled: true
          name: homing_proxy_timer_ros_anymal_2
        homing_proxy_timer_ros_anymal_3:
          enabled: true
          name: homing_proxy_timer_ros_anymal_3
        homing_proxy_timer_ros_anymal_4:
          enabled: true
          name: homing_proxy_timer_ros_anymal_4
        homing_proxy_timer_ros_anymal_5:
          enabled: true
          name: homing_proxy_timer_ros_anymal_5
    mission_control_center_teleoperation:
      stacks:
        mission_control_teleoperation_common:
          enabled: true
          name: mission_control_teleoperation_common
        mission_control_center_teleoperation_anymal_1:
          enabled: true
          name: mission_control_center_teleoperation_anymal_1
        mission_control_center_teleoperation_anymal_2:
          enabled: true
          name: mission_control_center_teleoperation_anymal_2
        mission_control_center_teleoperation_anymal_3:
          enabled: false # TODO marcot enable once robot is here
          name: mission_control_center_teleoperation_anymal_3
        mission_control_center_teleoperation_anymal_4:
          enabled: true
          name: mission_control_center_teleoperation_anymal_4
        mission_control_center_teleoperation_anymal_5:
          enabled: true
          name: mission_control_center_teleoperation_anymal_5
        mission_control_center_teleoperation_helpers:
          enabled: true
          name: mission_control_center_teleoperation_helpers
    mission_control_center_teleoperation_anymal_1:
      nodes:
        incremental_map_update_anymal_1_draco_republisher:
          enabled: true
          name: incremental_map_update_anymal_1_draco_republisher
        nimbro_missionctrl_anymal_1_tcp_client:
          enabled: true
          name: nimbro_missionctrl_anymal_1_tcp_client
        nimbro_missionctrl_anymal_1_receiver:
          enabled: true
          name: nimbro_missionctrl_anymal_1_receiver
        nimbro_missionctrl_anymal_1_sender:
          enabled: true
          name: nimbro_missionctrl_anymal_1_sender
    mission_control_center_teleoperation_anymal_2:
      nodes:
        incremental_map_update_anymal_2_draco_republisher:
          enabled: true
          name: incremental_map_update_anymal_2_draco_republisher
        nimbro_missionctrl_anymal_2_tcp_client:
          enabled: true
          name: nimbro_missionctrl_anymal_2_tcp_client
        nimbro_missionctrl_anymal_2_receiver:
          enabled: true
          name: nimbro_missionctrl_anymal_2_receiver
        nimbro_missionctrl_anymal_2_sender:
          enabled: true
          name: nimbro_missionctrl_anymal_2_sender
    mission_control_center_teleoperation_anymal_3:
      nodes:
        incremental_map_update_anymal_3_draco_republisher:
          enabled: true
          name: incremental_map_update_anymal_3_draco_republisher
        nimbro_missionctrl_anymal_3_tcp_client:
          enabled: true
          name: nimbro_missionctrl_anymal_3_tcp_client
        nimbro_missionctrl_anymal_3_receiver:
          enabled: true
          name: nimbro_missionctrl_anymal_3_receiver
        nimbro_missionctrl_anymal_3_sender:
          enabled: true
          name: nimbro_missionctrl_anymal_3_sender
    mission_control_center_teleoperation_anymal_4:
      nodes:
        incremental_map_update_anymal_4_draco_republisher:
          enabled: true
          name: incremental_map_update_anymal_4_draco_republisher
        nimbro_missionctrl_anymal_4_tcp_client:
          enabled: true
          name: nimbro_missionctrl_anymal_4_tcp_client
        nimbro_missionctrl_anymal_4_receiver:
          enabled: true
          name: nimbro_missionctrl_anymal_4_receiver
        nimbro_missionctrl_anymal_4_sender:
          enabled: true
          name: nimbro_missionctrl_anymal_4_sender
    mission_control_center_teleoperation_anymal_5:
      nodes:
        incremental_map_update_anymal_5_draco_republisher:
          enabled: true
          name: incremental_map_update_anymal_5_draco_republisher
        nimbro_missionctrl_anymal_5_tcp_client:
          enabled: true
          name: nimbro_missionctrl_anymal_5_tcp_client
        nimbro_missionctrl_anymal_5_receiver:
          enabled: true
          name: nimbro_missionctrl_anymal_5_receiver
        nimbro_missionctrl_anymal_5_sender:
          enabled: true
          name: nimbro_missionctrl_anymal_5_sender
    mission_control_center_teleoperation_helpers:
      nodes:
        multi_topics_demux:
          enabled: true
          name: multi_topics_demux
        multi_topics_mux:
          enabled: true
          name: multi_topics_mux
        multi_topics_relay_filtered_artifact:
          enabled: true
          name: multi_topics_relay_filtered_artifact
        multi_topics_relay_submap_counter:
          enabled: true
          name: multi_topics_relay_submap_counter
        selective_tf_snapshot_relay:
          enabled: true
          name: selective_tf_snapshot_relay
    mission_control_feedback:
      nodes:
        bluetooth_viz:
          enabled: true
          name: bluetooth_viz
        ping_monitor_mission_control:
          enabled: true
          name: ping_monitor_mission_control
        homing_proxy_timer_ros:
          enabled: true
          name: homing_proxy_timer_ros
    mission_control_pingers:
      nodes:
        pinger_missionctrl_to_anymal:
          enabled: true
          name: pinger_missionctrl_to_anymal
        pinger_missionctrl_to_baserouter:
          enabled: true
          name: pinger_missionctrl_to_baserouter
        pinger_missionctrl_to_dx2_alpha:
          enabled: true
          name: pinger_missionctrl_to_dx2_alpha
        pinger_missionctrl_to_dx2_beta:
          enabled: true
          name: pinger_missionctrl_to_dx2_beta
        pinger_missionctrl_to_dx2_gamma:
          enabled: true
          name: pinger_missionctrl_to_dx2_gamma
        pinger_missionctrl_to_dx2_delta:
          enabled: true
          name: pinger_missionctrl_to_dx2_delta
        pinger_missionctrl_to_dx2_epsilon:
          enabled: true
          name: pinger_missionctrl_to_dx2_epsilon
        pinger_missionctrl_to_dx2_zeta:
          enabled: true
          name: pinger_missionctrl_to_dx2_zeta
        pinger_missionctrl_to_dx2_eta:
          enabled: true
          name: pinger_missionctrl_to_dx2_eta
        pinger_missionctrl_to_dx2_theta:
          enabled: true
          name: pinger_missionctrl_to_dx2_theta
        pinger_missionctrl_to_es1_base_station:
          enabled: true
          name: pinger_missionctrl_to_es1_base_station
    mission_control_sim:
      stacks:
        mission_control:
          enabled: true
          name: mission_control
        mission_control_sim_nimbro:
          enabled: true
          name: mission_control_sim_nimbro
    mission_control_sim_nimbro:
      nodes:
        nimbro_missionctrl_anymal_receiver_simulation:
          enabled: true
          name: nimbro_missionctrl_anymal_receiver_simulation
    mission_control_teleoperation:
      nodes:
        nimbro_missionctrl_anymal_tcp_client:
          enabled: true
          name: nimbro_missionctrl_anymal_tcp_client
        nimbro_missionctrl_anymal_receiver:
          enabled: true
          name: nimbro_missionctrl_anymal_receiver
        nimbro_missionctrl_anymal_sender:
          enabled: true
          name: nimbro_missionctrl_anymal_sender
        selective_tf_snapshot_relay:
          enabled: true
          name: selective_tf_snapshot_relay
    mission_control_teleoperation_common:
      nodes:
        image_brighten_camera_front:
          enabled: true
          name: image_brighten_camera_front
        image_brighten_camera_left:
          enabled: true
          name: image_brighten_camera_left
        image_brighten_camera_right:
          enabled: true
          name: image_brighten_camera_right
        image_brighten_camera_upwards:
          enabled: true
          name: image_brighten_camera_upwards
        nimbro_missionctrl_anymal_action_follow:
          enabled: true
          name: nimbro_missionctrl_anymal_action_follow
        nimbro_missionctrl_robot_transfolder_tcp_server:
          enabled: true
          name: nimbro_missionctrl_robot_transfolder_tcp_server
        on_demand_lidar1_draco_republisher:
          enabled: true
          name: on_demand_lidar1_draco_republisher
        on_demand_lidar2_draco_republisher:
          enabled: true
          name: on_demand_lidar2_draco_republisher
        on_demand_loam_map_draco_republisher:
          enabled: true
          name: on_demand_loam_map_draco_republisher
        on_demand_loam_submap_draco_republisher:
          enabled: true
          name: on_demand_loam_submap_draco_republisher
        holder_maplab_map:
          enabled: true
          name: holder_maplab_map
        holder_anymal_1_pinger_markers:
          enabled: true
          name: holder_anymal_1_pinger_markers
        holder_anymal_2_pinger_markers:
          enabled: true
          name: holder_anymal_2_pinger_markers
        holder_anymal_3_pinger_markers:
          enabled: true
          name: holder_anymal_3_pinger_markers
        holder_anymal_4_pinger_markers:
          enabled: true
          name: holder_anymal_4_pinger_markers
        holder_anymal_5_pinger_markers:
          enabled: true
          name: holder_anymal_5_pinger_markers
    mission_setup:
      nodes:
        example_service_server:
          enabled: true
          name: example_service_server
        monitor_bluetooth_sensor:
          enabled: true
          name: monitor_bluetooth_sensor
        monitor_gas_sensor:
          enabled: true
          name: monitor_gas_sensor
        rqt_gui_mission_setup:
          enabled: true
          name: rqt_gui_mission_setup
        rviz_mission_setup:
          enabled: true
          name: rviz_mission_setup
    msf:
      nodes:
        msf_initializer_mux:
          enabled: true
          name: msf_initializer_mux
        msf_loam_alphasense_imu:
          enabled: true
          name: msf_loam_alphasense_imu
        msf_loam_body_imu:
          enabled: true
          name: msf_loam_body_imu
    navigation_subt:
      stacks:
        depth_camera_processing_rsl:
          enabled: false
          name: depth_camera_processing_rsl
        depth_camera_processing_subt:
          enabled: false
          name: depth_camera_processing_subt
        local_planner_subt:
          enabled: true
          name: local_planner_subt
        navigation_point_cloud_filter_rsl:
          enabled: true
          name: navigation_point_cloud_filter_rsl
        navigation_subt_relay:
          enabled: true
          name: navigation_subt_relay
    navigation_subt_relay:
      nodes:
        relay_and_throttle_lidar_to_gbplanner:
          enabled: true
          name: relay_and_throttle_lidar_to_gbplanner
    npc_subt:
      stacks:
        alphasense:
          enabled: true
          name: alphasense
        apc_drivers:
          enabled: false
          name: apc_drivers
        apriltags_detection:
          enabled: true
          name: apriltags_detection
        git_branch_dump_config:
          enabled: true
          name: git_branch_dump_config
        inspection_head_stack:
          enabled: false
          name: inspection_head_stack
        lidar_cloud_subt:
          enabled: true
          name: lidar_cloud_subt
        navigation_subt:
          enabled: true
          name: navigation_subt
        npc_rsl_depth_camera_drivers:
          enabled: false
          name: npc_rsl_depth_camera_drivers
        npc_subt_background:
          enabled: true
          name: npc_subt_background
        npc_subt_usb_drivers:
          enabled: true
          name: npc_subt_usb_drivers
        slam_subt:
          enabled: true
          name: slam_subt
    npc_subt_background:
      nodes:
        chrony_monitor:
          enabled: true
          name: chrony_monitor_npc
        cpu_monitor:
          enabled: true
          name: cpu_monitor_npc
        memory_monitor:
          enabled: true
          name: memory_monitor_npc
        network_monitor:
          enabled: true
          name: network_monitor_npc
        disk_monitor:
          enabled: true
          name: disk_monitor_npc
        pinger_npc_to_jetson:
          enabled: true
          name: pinger_npc_to_jetson
        pinger_npc_to_lpc:
          enabled: true
          name: pinger_npc_to_lpc
        pinger_npc_to_apc:
          enabled: false
          name: pinger_npc_to_apc
        rosbag_record_robot_npc:
          enabled: true
          name: rosbag_record_robot_npc
        rosbag_record_robot_npc_subt_background:
          enabled: true
          name: rosbag_record_robot_npc_subt_background
        rqt_helper_save_map_darpa_tf:
          enabled: true
          name: rqt_helper_save_map_darpa_tf
        subt_cpu_loupe_npc:
          enabled: true
          name: subt_cpu_loupe_npc
    npc_subt_usb_drivers:
      nodes:
        bluetooth_reader:
          enabled: true
          name: bluetooth_reader
        subt_xbee_estop:
          enabled: false
          name: subt_xbee_estop
    slam_subt:
      stacks:
        loam:
          enabled: true
          name: loam
        msf:
          enabled: true
          name: msf
        slam_static_tf_publishers:
          enabled: true
          name: slam_static_tf_publishers
        rovio:
          enabled: false
          name: rovio
    opc_subt:
      stacks:
        user_interface:
          enabled: true
          name: user_interface
        user_interface_navigation_subt:
          enabled: true
          name: user_interface_navigation_subt
    replay_basic_subt:
      nodes:
        anymal_tf_publisher:
          enabled: true
          name: anymal_tf_publisher
        inspection_payload_robot_state_publisher:
          enabled: false
          name: inspection_payload_robot_state_publisher
        localization_manager:
          enabled: true
          name: localization_manager
        ping_monitor_mission_control:
          enabled: true
          name: ping_monitor_mission_control
        point_cloud_filter_rsl:
          enabled: true
          name: point_cloud_filter_rsl
        replay_helper_reported_artifact:
          enabled: true
          name: replay_helper_reported_artifact
        state_estimator:
          enabled: false
          name: state_estimator
        status_monitor_behavior_tree:
          enabled: true
          name: status_monitor_behavior_tree
        twist_filter_ros:
          enabled: true
          name: twist_filter_ros
    replay_bpearl_subt:
      stacks:
        replay_bpearl_subt_drivers:
          enabled: true
          name: replay_bpearl_subt_drivers
        bpearl_robot_self_filter_subt:
          enabled: true
          name: bpearl_robot_self_filter_subt
    replay_bpearl_subt_drivers:
      nodes:
        bpearl_front_nodelet_cloud:
          enabled: true
          name: bpearl_front_nodelet_cloud
        bpearl_front_nodelet_manager:
          enabled: true
          name: bpearl_front_nodelet_manager
        bpearl_rear_nodelet_cloud:
          enabled: true
          name: bpearl_rear_nodelet_cloud
        bpearl_rear_nodelet_manager:
          enabled: true
          name: bpearl_rear_nodelet_manager
    replay_common_subt:
      stacks:
        replay_basic_subt:
          enabled: true
          name: replay_basic_subt
        replay_bpearl_subt:
          enabled: false
          name: replay_bpearl_subt
        replay_global_planner_subt:
          enabled: false
          name: replay_global_planner_subt
        lidar_cloud_common_subt:
          enabled: true
          name: lidar_cloud_common_subt
        slam_static_tf_publishers:
          enabled: true
          name: slam_static_tf_publishers
    replay_global_planner_subt:
      stacks:
        global_planner_subt:
          enabled: true
          name: global_planner_subt
        locomotion_subt_relay:
          enabled: true
          name: locomotion_subt_relay
        navigation_subt_relay:
          enabled: true
          name: navigation_subt_relay
        replay_global_planner_subt_helpers:
          enabled: true
          name: replay_global_planner_subt_helpers
    replay_global_planner_subt_helpers:
      nodes:
        bpearl_point_cloud_filter_subt:
          enabled: true
          name: bpearl_point_cloud_filter_subt
    safety_check_subt:
      nodes:
        safety_checker:
          enabled: false
          name: safety_checker
        twist_filter_ros:
          enabled: true
          name: twist_filter_ros
    simulation_environment:
      nodes:
        point_cloud_odometry_sim:
          enabled: false
        slam_sim:
          enabled: false
        localization_manager:
          enabled: true
          name: localization_manager
        tf_fake_map_to_darpa_connector:
          enabled: true
          name: tf_fake_map_to_darpa_connector
    sim_bluetooth_gas_detection:
      nodes:
        bayesian_artifact_filter:
          enabled: true
          name: bayesian_artifact_filter
        bluetooth_gas_detector:
          enabled: true
          name: bluetooth_gas_detector
        bluetooth_gas_simulator:
          enabled: true
          name: bluetooth_gas_simulator
    sim_robot_artifact_reporting:
      stacks:
        artifact_reporting_subt:
          enabled: true
          name: artifact_reporting_subt
        sim_robot_artifact_reporting_helpers:
          enabled: true
          name: sim_robot_artifact_reporting_helpers
    sim_robot_artifact_reporting_helpers:
      nodes:
        relay_and_throttle_sim_cam_left_to_image_to_map:
          enabled: true
          name: relay_and_throttle_sim_cam_left_to_image_to_map
        relay_and_throttle_sim_cam_front_to_image_to_map:
          enabled: true
          name: relay_and_throttle_sim_cam_front_to_image_to_map
        relay_and_throttle_sim_cam_right_to_image_to_map:
          enabled: true
          name: relay_and_throttle_sim_cam_right_to_image_to_map
        relay_and_throttle_sim_cam_upwards_to_image_to_map:
          enabled: true
          name: relay_and_throttle_sim_cam_upwards_to_image_to_map
    sim_subt_inspection_mission:
      stacks:
        artifact_reporting_subt:
          enabled: true
          name: artifact_reporting_subt
        inspection_head_stack:
          enabled: true
          name: inspection_head_stack
        sim_subt_mission:
          enabled: true
          name: sim_subt_mission
    sim_subt_mission:
      stacks:
        bpearl_robot_self_filter_sim_subt:
          enabled: true
          name: bpearl_robot_self_filter_sim_subt
        global_planner_subt:
          enabled: true
          name: global_planner_subt
        sim_subt_navigation:
          enabled: true
          name: sim_subt_navigation
        sim_bluetooth_gas_detection:
          enabled: false
          name: sim_bluetooth_gas_detection
    sim_anymal_1_subt_mission_control:
      stacks:
        sim_robot_artifact_reporting:
          enabled: true
          name: sim_robot_artifact_reporting
        sim_subt_mission:
          enabled: true
          name: sim_subt_mission
        sim_subt_mission_control_nimbro:
          enabled: true
          name: sim_subt_mission_control_nimbro
        sim_anymal_1_teleoperation_nimbro:
          enabled: true
          name: sim_anymal_1_teleoperation_nimbro
        robot_subt_teleoperation_common:
          enabled: true
          name: robot_subt_teleoperation_common
    sim_anymal_2_subt_mission_control:
      stacks:
        sim_robot_artifact_reporting:
          enabled: true
          name: sim_robot_artifact_reporting
        sim_subt_mission:
          enabled: true
          name: sim_subt_mission
        sim_subt_mission_control_nimbro:
          enabled: true
          name: sim_subt_mission_control_nimbro
        sim_anymal_2_teleoperation_nimbro:
          enabled: true
          name: sim_anymal_2_teleoperation_nimbro
        robot_subt_teleoperation_common:
          enabled: true
          name: robot_subt_teleoperation_common
    sim_subt_mission_control:
      stacks:
        sim_subt_mission:
          enabled: true
          name: sim_subt_mission
        sim_subt_mission_control_nimbro:
          enabled: true
          name: sim_subt_mission_control_nimbro
        robot_subt_teleoperation:
          enabled: true
          name: robot_subt_teleoperation
    sim_subt_mission_control_nimbro:
      nodes:
        nimbro_anymal_missionctrl_sender_simulation:
          enabled: true
          name: nimbro_anymal_missionctrl_sender_simulation
    sim_subt_navigation:
      stacks:
        autonomy_subt:
          enabled: true
          name: autonomy_subt
        locomotion_subt:
          enabled: true
          name: locomotion_subt
        navigation_subt:
          enabled: true
          name: navigation_subt
        simulation_environment:
          enabled: true
          name: simulation_environment
        user_interface:
          enabled: true
          name: user_interface
        user_interface_navigation_subt:
          enabled: true
          name: user_interface_navigation_subt
        sim_elevation_mapping_subt:
          enabled: true
          name: sim_elevation_mapping_subt
    robot_subt_teleoperation:
      stacks:
        robot_subt_teleoperation_nimbro:
          enabled: true
          name: robot_subt_teleoperation_nimbro
        robot_subt_teleoperation_common:
          enabled: true
          name: robot_subt_teleoperation_common
    robot_subt_teleoperation_common:
      nodes:
        base_subt_to_darpa_in_darpa:
          enabled: true
          name: base_subt_to_darpa_in_darpa
        distance_tracker:
          enabled: true
          name: distance_tracker
        nimbro_anymal_missionctrl_action_follow:
          enabled: true
          name: nimbro_anymal_missionctrl_action_follow
        on_demand_elevation_map:
          enabled: true
          name: on_demand_elevation_map
        on_demand_lidar1:
          enabled: true
          name: on_demand_lidar1
        on_demand_lidar2:
          enabled: true
          name: on_demand_lidar2
        on_demand_loam_map:
          enabled: true
          name: on_demand_loam_map
        on_demand_loam_submap:
          enabled: true
          name: on_demand_loam_submap
        on_demand_loam_map_optimized:
          enabled: true
          name: on_demand_loam_map_optimized
        on_demand_loam_full_path:
          enabled: true
          name: on_demand_loam_full_path
        on_demand_loam_full_path_optimized:
          enabled: true
          name: on_demand_loam_full_path_optimized
        tf_selective_snapshooter:
          enabled: true
          name: tf_selective_snapshooter
        ping_monitor_anymal:
          enabled: true
          name: ping_monitor_anymal
    robot_subt_teleoperation_nimbro:
      nodes:
        nimbro_robot_transfolder_missionctrl_tcp_client:
          enabled: true
          name: nimbro_robot_transfolder_missionctrl_tcp_client
        nimbro_anymal_missionctrl_receiver:
          enabled: true
          name: nimbro_anymal_missionctrl_receiver
        nimbro_anymal_missionctrl_sender:
          enabled: true
          name: nimbro_anymal_missionctrl_sender
        nimbro_anymal_missionctrl_tcp_server:
          enabled: true
          name: nimbro_anymal_missionctrl_tcp_server
    rovio:
      nodes:
        rovio:
          enabled: true
          name: rovio
    sim_anymal_1_teleoperation_nimbro:
      nodes:
        nimbro_sim_anymal_1_missionctrl_receiver:
          enabled: true
          name: nimbro_sim_anymal_1_missionctrl_receiver
        nimbro_sim_anymal_1_missionctrl_sender:
          enabled: true
          name: nimbro_sim_anymal_1_missionctrl_sender
        nimbro_sim_anymal_1_missionctrl_tcp_server:
          enabled: true
          name: nimbro_sim_anymal_1_missionctrl_tcp_server
    sim_anymal_2_teleoperation_nimbro:
      nodes:
        nimbro_anymal_2_missionctrl_tcp_receiver:
          enabled: true
          name: nimbro_anymal_2_missionctrl_tcp_receiver
        nimbro_sim_anymal_2_missionctrl_sender:
          enabled: true
          name: nimbro_sim_anymal_2_missionctrl_sender
        nimbro_sim_anymal_2_missionctrl_tcp_server:
          enabled: true
          name: nimbro_sim_anymal_2_missionctrl_tcp_server
    user_interface_mission_control_subt:
      nodes:
        rqt_gui_mission_control:
          enabled: true
          name: rqt_gui_mission_control
        rviz_mission_control:
          enabled: true
          name: rviz_mission_control
    user_interface_mission_control_center_subt:
        nodes:
          rqt_gui_mission_control_center:
            enabled: true
            name: rqt_gui_mission_control_center
          rqt_helper_wifi_beacon_maplab_marker:
            enabled: true
            name: rqt_helper_wifi_beacon_maplab_marker
          rviz_mission_control_center:
            enabled: true
            name: rviz_mission_control_center
    mission_control_center_pingers:
      nodes:
        pinger_missionctrl_to_anymal_1:
          enabled: true
          name: pinger_missionctrl_to_anymal_1
        pinger_missionctrl_to_anymal_1_dx2_onboard:
          enabled: true
          name: pinger_missionctrl_to_anymal_1_dx2_onboard
        pinger_missionctrl_to_anymal_2:
          enabled: true
          name: pinger_missionctrl_to_anymal_2
        pinger_missionctrl_to_anymal_2_dx2_onboard:
          enabled: true
          name: pinger_missionctrl_to_anymal_2_dx2_onboard
        pinger_missionctrl_to_anymal_3:
          enabled: true
          name: pinger_missionctrl_to_anymal_3
        pinger_missionctrl_to_anymal_3_dx2_onboard:
          enabled: true
          name: pinger_missionctrl_to_anymal_3_dx2_onboard
        pinger_missionctrl_to_anymal_4:
          enabled: true
          name: pinger_missionctrl_to_anymal_4
        pinger_missionctrl_to_anymal_4_dx2_onboard:
          enabled: true
          name: pinger_missionctrl_to_anymal_4_dx2_onboard
        pinger_missionctrl_to_anymal_5:
          enabled: true
          name: pinger_missionctrl_to_anymal_5
        pinger_missionctrl_to_anymal_5_dx2_onboard:
          enabled: true
          name: pinger_missionctrl_to_anymal_5_dx2_onboard
        pinger_missionctrl_to_baserouter:
          enabled: true
          name: pinger_missionctrl_to_baserouter
        pinger_missionctrl_to_dx2_alpha:
          enabled: true
          name: pinger_missionctrl_to_dx2_alpha
        pinger_missionctrl_to_dx2_beta:
          enabled: true
          name: pinger_missionctrl_to_dx2_beta
        pinger_missionctrl_to_dx2_gamma:
          enabled: true
          name: pinger_missionctrl_to_dx2_gamma
        pinger_missionctrl_to_dx2_delta:
          enabled: true
          name: pinger_missionctrl_to_dx2_delta
        pinger_missionctrl_to_dx2_epsilon:
          enabled: true
          name: pinger_missionctrl_to_dx2_epsilon
        pinger_missionctrl_to_dx2_zeta:
          enabled: true
          name: pinger_missionctrl_to_dx2_zeta
        pinger_missionctrl_to_dx2_eta:
          enabled: true
          name: pinger_missionctrl_to_dx2_eta
        pinger_missionctrl_to_dx2_theta:
          enabled: true
          name: pinger_missionctrl_to_dx2_theta
        pinger_missionctrl_to_es1_base_station:
          enabled: true
          name: pinger_missionctrl_to_es1_base_station
    user_interface_navigation_subt:
      nodes:
        inspection_head_interactive_marker:
          enabled: true
          name: inspection_head_interactive_marker
        inspection_payload_head_to_map_in_map:
          enabled: true
          name: inspection_payload_head_to_map_in_map
        path_creator:
          enabled: true
          name: path_creator
        waypoint_interactive_marker:
          enabled: true
          name: waypoint_interactive_marker
