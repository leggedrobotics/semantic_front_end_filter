<?xml version="1.0" encoding="utf-8"?>
<launch>

  <!-- Main settings with rosbag name and rosparam dumped file -->
  <arg name="bagfile"                               default=""  doc="Absolute path of rosbag folder to play."/>
  <arg name="bagfolder"                               default=""  doc="Absolute path of rosbag folder to play."/>
  <arg name="dumped_rosparameters"                    default="$(find semantic_frontend_filter)/config/2022-07-08-09-05-19_anymal-cerberus-lpc_mission.yaml"  doc=".yaml file that contains replay configuration"/>
  <arg name="output_file"                             default="/home/anqiao/catkin_ws/SA_dataset/mountpoint/Data/Italy/Reconstruct/Reconstruct" doc="output path of re-recorded bag."/>
  <arg name="maps_path"                              default=""  doc="Absolute path of the folder containing localGroundMap.msgpack."/>
  <arg name="map_num"                              default=""  doc="The number of the local maps."/>
  <!-- Other settings -->
  <arg name="pause_playback_on_launch"              default="true"/>
  <arg name="publish_rate_multiplier"               default="0.5"/>
  <arg name="seconds_into_the_bag"                  default="0.0"/>
  <arg name="inspection_payload"                    default="disabled"/>    

  <param name="/use_sim_time" value="true"/>

  <!-- Load the configuration -->
  <node pkg="anymal_rsl_launch" name="replay_config" type="replay.py" args="cerberus $(arg dumped_rosparameters)" output="screen"/>
  
  <!-- Transform Image -->
  <include file="$(find image_proc_cuda_ros)/launch/image_proc_cuda_node.launch" />  

  <!-- Rosbag -->
  <node name="play_rosbag" pkg="rosbag" type="play" output="screen"
    args="--clock $(arg bagfile) --pause -r $(arg publish_rate_multiplier) -s $(arg seconds_into_the_bag)">
  </node>
  
  <!-- Launch the grid map simple demo node -->
  <node pkg="semantic_frontend_filter" type="display_local_maps" name="grid_map_simple_demo" output="screen" >
    <param name="maps_path" value="$(arg maps_path)" />
    <param name="map_num" value="$(arg map_num)" />
  </node>
  <!-- Launch the grid map visualizer -->
  <node pkg="grid_map_visualization" type="grid_map_visualization" name="grid_map_visualization" output="screen">
    <rosparam command="load" file="$(find grid_map_demos)/config/simple_demo.yaml" />
  </node>

  <?ignore
  <group if="$(arg pause_playback_on_launch)">
    <node name="play_rosbag" pkg="rosbag" type="play" output="screen"
      args="--clock $(arg bagfolder)/jetson_images.bag $(arg bagfolder)/jetson_elevation_mapping.bag $(arg bagfolder)/lpc_joints.bag $(arg bagfolder)/lpc_locomotion.bag $(arg bagfolder)/lpc_pointclouds.bag $(arg bagfolder)/lpc_robot_state.bag $(arg bagfolder)/npc_contact_state.bag $(arg bagfolder)/npc_depthcamera.bag $(arg bagfolder)/npc_gps.bag $(arg bagfolder)/npc_robot_state.bag $(arg bagfolder)/npc_velodyne.bag --pause -r $(arg publish_rate_multiplier) -s $(arg seconds_into_the_bag)">
    </node>
  </group>
  <group unless="$(arg pause_playback_on_launch)">
    <node name="play_rosbag" pkg="rosbag" type="play" output="screen"
      args="--clock $(arg bagfolder)/jetson_images.bag $(arg bagfolder)/jetson_elevation_mapping.bag $(arg bagfolder)/lpc_joints.bag $(arg bagfolder)/lpc_locomotion.bag $(arg bagfolder)/lpc_pointclouds.bag $(arg bagfolder)/lpc_robot_state.bag $(arg bagfolder)/npc_contact_state.bag $(arg bagfolder)/npc_depthcamera.bag $(arg bagfolder)/npc_gps.bag $(arg bagfolder)/npc_robot_state.bag $(arg bagfolder)/npc_velodyne.bag -r $(arg publish_rate_multiplier) -s $(arg seconds_into_the_bag)">
    </node>
  </group>
  ?>
  <!-- Unbayred and undistorted camera image-->

  
  <!-- Record -->
</launch>
